The following file is an auto-generated static dump of the API models at time of code generation.
It is provided here for reference purposes, but is not used by any code.

http://references.taskcluster.net/auth/v1/api.json
==================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'Authentication API'
Description = 'Authentication related API end-points for Taskcluster and related
services. These API end-points are of interest if you wish to:
  * Authorize a request signed with Taskcluster credentials,
  * Manage clients and roles,
  * Inspect or audit clients and roles,
  * Gain access to various services guarded by this API.

Note that in this service "authentication" refers to validating the
correctness of the supplied credentials (that the caller posesses the
appropriate access token). This service does not provide any kind of user
authentication (identifying a particular person).

### Clients
The authentication service manages _clients_, at a high-level each client
consists of a `clientId`, an `accessToken`, scopes, and some metadata.
The `clientId` and `accessToken` can be used for authentication when
calling Taskcluster APIs.

The client's scopes control the client's access to Taskcluster resources.
The scopes are *expanded* by substituting roles, as defined below.

### Roles
A _role_ consists of a `roleId`, a set of scopes and a description.
Each role constitutes a simple _expansion rule_ that says if you have
the scope: `assume:<roleId>` you get the set of scopes the role has.
Think of the `assume:<roleId>` as a scope that allows a client to assume
a role.

As in scopes the `*` kleene star also have special meaning if it is
located at the end of a `roleId`. If you have a role with the following
`roleId`: `my-prefix*`, then any client which has a scope staring with
`assume:my-prefix` will be allowed to assume the role.

### Guarded Services
The authentication service also has API end-points for delegating access
to some guarded service such as AWS S3, or Azure Table Storage.
Generally, we add API end-points to this server when we wish to use
Taskcluster credentials to grant access to a third-party service used
by many Taskcluster components.'
Base URL    = 'https://auth.taskcluster.net/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/clients/'
    Entry Args        = '[]'
    Entry Query        = '[prefix]'
    Entry Name        = 'listClients'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/list-clients-response.json#'
    Entry Title       = 'List Clients'
    Entry Description = 'Get a list of all clients.  With `prefix`, only clients for which
it is a prefix of the clientId are returned.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/clients/<clientId>'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'client'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/get-client-response.json#'
    Entry Title       = 'Get Client'
    Entry Description = 'Get information about a single client.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/clients/<clientId>'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'createClient'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* auth:create-client:<clientId>
* For scope in scopes each <scope>'
    Entry Input       = 'http://schemas.taskcluster.net/auth/v1/create-client-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/create-client-response.json#'
    Entry Title       = 'Create Client'
    Entry Description = 'Create a new client and get the `accessToken` for this client.
You should store the `accessToken` from this API call as there is no
other way to retrieve it.

If you loose the `accessToken` you can call `resetAccessToken` to reset
it, and a new `accessToken` will be returned, but you cannot retrieve the
current `accessToken`.

If a client with the same `clientId` already exists this operation will
fail. Use `updateClient` if you wish to update an existing client.

The caller's scopes must satisfy `scopes`.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/clients/<clientId>/reset'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'resetAccessToken'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:reset-access-token:<clientId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/create-client-response.json#'
    Entry Title       = 'Reset `accessToken`'
    Entry Description = 'Reset a clients `accessToken`, this will revoke the existing
`accessToken`, generate a new `accessToken` and return it from this
call.

There is no way to retrieve an existing `accessToken`, so if you loose it
you must reset the accessToken to acquire it again.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/clients/<clientId>'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'updateClient'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* auth:update-client:<clientId>
* For scope in scopesAdded each <scope>'
    Entry Input       = 'http://schemas.taskcluster.net/auth/v1/create-client-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/get-client-response.json#'
    Entry Title       = 'Update Client'
    Entry Description = 'Update an exisiting client. The `clientId` and `accessToken` cannot be
updated, but `scopes` can be modified.  The caller's scopes must
satisfy all scopes being added to the client in the update operation.
If no scopes are given in the request, the client's scopes remain
unchanged'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/clients/<clientId>/enable'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'enableClient'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:enable-client:<clientId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/get-client-response.json#'
    Entry Title       = 'Enable Client'
    Entry Description = 'Enable a client that was disabled with `disableClient`.  If the client
is already enabled, this does nothing.

This is typically used by identity providers to re-enable clients that
had been disabled when the corresponding identity's scopes changed.'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/clients/<clientId>/disable'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'disableClient'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:disable-client:<clientId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/get-client-response.json#'
    Entry Title       = 'Disable Client'
    Entry Description = 'Disable a client.  If the client is already disabled, this does nothing.

This is typically used by identity providers to disable clients when the
corresponding identity's scopes no longer satisfy the client's scopes.'
Entry 7     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/clients/<clientId>'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'deleteClient'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:delete-client:<clientId>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Delete Client'
    Entry Description = 'Delete a client, please note that any roles related to this client must
be deleted independently.'
Entry 8     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/roles/'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'listRoles'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/list-roles-response.json#'
    Entry Title       = 'List Roles'
    Entry Description = 'Get a list of all roles, each role object also includes the list of
scopes it expands to.'
Entry 9     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/roles/<roleId>'
    Entry Args        = '[roleId]'
    Entry Query        = '[]'
    Entry Name        = 'role'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/get-role-response.json#'
    Entry Title       = 'Get Role'
    Entry Description = 'Get information about a single role, including the set of scopes that the
role expands to.'
Entry 10    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/roles/<roleId>'
    Entry Args        = '[roleId]'
    Entry Query        = '[]'
    Entry Name        = 'createRole'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* auth:create-role:<roleId>
* For scope in scopes each <scope>'
    Entry Input       = 'http://schemas.taskcluster.net/auth/v1/create-role-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/get-role-response.json#'
    Entry Title       = 'Create Role'
    Entry Description = 'Create a new role.

The caller's scopes must satisfy the new role's scopes.

If there already exists a role with the same `roleId` this operation
will fail. Use `updateRole` to modify an existing role.

Creation of a role that will generate an infinite expansion will result
in an error response.'
Entry 11    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/roles/<roleId>'
    Entry Args        = '[roleId]'
    Entry Query        = '[]'
    Entry Name        = 'updateRole'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* auth:update-role:<roleId>
* For scope in scopesAdded each <scope>'
    Entry Input       = 'http://schemas.taskcluster.net/auth/v1/create-role-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/get-role-response.json#'
    Entry Title       = 'Update Role'
    Entry Description = 'Update an existing role.

The caller's scopes must satisfy all of the new scopes being added, but
need not satisfy all of the client's existing scopes.

An update of a role that will generate an infinite expansion will result
in an error response.'
Entry 12    =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/roles/<roleId>'
    Entry Args        = '[roleId]'
    Entry Query        = '[]'
    Entry Name        = 'deleteRole'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:delete-role:<roleId>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Delete Role'
    Entry Description = 'Delete a role. This operation will succeed regardless of whether or not
the role exists.'
Entry 13    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/scopes/expand'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'expandScopesGet'
    Entry Stability   = 'deprecated'
    Entry Scopes      = ''
    Entry Input       = 'http://schemas.taskcluster.net/auth/v1/scopeset.json#'
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/scopeset.json#'
    Entry Title       = 'Expand Scopes'
    Entry Description = 'Return an expanded copy of the given scopeset, with scopes implied by any
roles included.

This call uses the GET method with an HTTP body.  It remains only for
backward compatibility.'
Entry 14    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/scopes/expand'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'expandScopes'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = 'http://schemas.taskcluster.net/auth/v1/scopeset.json#'
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/scopeset.json#'
    Entry Title       = 'Expand Scopes'
    Entry Description = 'Return an expanded copy of the given scopeset, with scopes implied by any
roles included.'
Entry 15    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/scopes/current'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'currentScopes'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/scopeset.json#'
    Entry Title       = 'Get Current Scopes'
    Entry Description = 'Return the expanded scopes available in the request, taking into account all sources
of scopes and scope restrictions (temporary credentials, assumeScopes, client scopes,
and roles).'
Entry 16    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/aws/s3/<level>/<bucket>/<prefix>'
    Entry Args        = '[level bucket prefix]'
    Entry Query        = '[format]'
    Entry Name        = 'awsS3Credentials'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If levelIsReadOnly:
  Any of:
  - auth:aws-s3:read-only:<bucket>/<prefix>
  - auth:aws-s3:read-write:<bucket>/<prefix>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#'
    Entry Title       = 'Get Temporary Read/Write Credentials S3'
    Entry Description = 'Get temporary AWS credentials for `read-write` or `read-only` access to
a given `bucket` and `prefix` within that bucket.
The `level` parameter can be `read-write` or `read-only` and determines
which type of credentials are returned. Please note that the `level`
parameter is required in the scope guarding access.  The bucket name must
not contain `.`, as recommended by Amazon.

This method can only allow access to a whitelisted set of buckets.  To add
a bucket to that whitelist, contact the Taskcluster team, who will add it to
the appropriate IAM policy.  If the bucket is in a different AWS account, you
will also need to add a bucket policy allowing access from the Taskcluster
account.  That policy should look like this:

```js
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "allow-taskcluster-auth-to-delegate-access",
      "Effect": "Allow",
      "Principal": {
        "AWS": "arn:aws:iam::692406183521:root"
      },
      "Action": [
        "s3:ListBucket",
        "s3:GetObject",
        "s3:PutObject",
        "s3:DeleteObject",
        "s3:GetBucketLocation"
      ],
      "Resource": [
        "arn:aws:s3:::<bucket>",
        "arn:aws:s3:::<bucket>/*"
      ]
    }
  ]
}
```

The credentials are set to expire after an hour, but this behavior is
subject to change. Hence, you should always read the `expires` property
from the response, if you intend to maintain active credentials in your
application.

Please note that your `prefix` may not start with slash `/`. Such a prefix
is allowed on S3, but we forbid it here to discourage bad behavior.

Also note that if your `prefix` doesn't end in a slash `/`, the STS
credentials may allow access to unexpected keys, as S3 does not treat
slashes specially.  For example, a prefix of `my-folder` will allow
access to `my-folder/file.txt` as expected, but also to `my-folder.txt`,
which may not be intended.

Finally, note that the `PutObjectAcl` call is not allowed.  Passing a canned
ACL other than `private` to `PutObject` is treated as a `PutObjectAcl` call, and
will result in an access-denied error from AWS.  This limitation is due to a
security flaw in Amazon S3 which might otherwise allow indefinite access to
uploaded objects.

**EC2 metadata compatibility**, if the querystring parameter
`?format=iam-role-compat` is given, the response will be compatible
with the JSON exposed by the EC2 metadata service. This aims to ease
compatibility for libraries and tools built to auto-refresh credentials.
For details on the format returned by EC2 metadata service see:
[EC2 User Guide](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#instance-metadata-security-credentials).'
Entry 17    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/azure/accounts'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'azureAccounts'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:azure-table:list-accounts'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/azure-account-list-response.json#'
    Entry Title       = 'List Accounts Managed by Auth'
    Entry Description = 'Retrieve a list of all Azure accounts managed by Taskcluster Auth.'
Entry 18    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/azure/<account>/tables'
    Entry Args        = '[account]'
    Entry Query        = '[continuationToken]'
    Entry Name        = 'azureTables'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:azure-table:list-tables:<account>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/azure-table-list-response.json#'
    Entry Title       = 'List Tables in an Account Managed by Auth'
    Entry Description = 'Retrieve a list of all tables in an account.'
Entry 19    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/azure/<account>/table/<table>/<level>'
    Entry Args        = '[account table level]'
    Entry Query        = '[]'
    Entry Name        = 'azureTableSAS'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If levelIsReadOnly:
  Any of:
  - auth:azure-table:read-only:<account>/<table>
  - auth:azure-table:read-write:<account>/<table>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/azure-table-access-response.json#'
    Entry Title       = 'Get Shared-Access-Signature for Azure Table'
    Entry Description = 'Get a shared access signature (SAS) string for use with a specific Azure
Table Storage table.

The `level` parameter can be `read-write` or `read-only` and determines
which type of credentials are returned.  If level is read-write, it will create the
table if it doesn't already exist.'
Entry 20    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/azure/<account>/containers'
    Entry Args        = '[account]'
    Entry Query        = '[continuationToken]'
    Entry Name        = 'azureContainers'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:azure-container:list-containers:<account>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/azure-container-list-response.json#'
    Entry Title       = 'List containers in an Account Managed by Auth'
    Entry Description = 'Retrieve a list of all containers in an account.'
Entry 21    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/azure/<account>/containers/<container>/<level>'
    Entry Args        = '[account container level]'
    Entry Query        = '[]'
    Entry Name        = 'azureContainerSAS'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If levelIsReadOnly:
  Any of:
  - auth:azure-container:read-only:<account>/<container>
  - auth:azure-container:read-write:<account>/<container>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/azure-container-response.json#'
    Entry Title       = 'Get Shared-Access-Signature for Azure Container'
    Entry Description = 'Get a shared access signature (SAS) string for use with a specific Azure
Blob Storage container.

The `level` parameter can be `read-write` or `read-only` and determines
which type of credentials are returned.  If level is read-write, it will create the
container if it doesn't already exist.'
Entry 22    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/sentry/<project>/dsn'
    Entry Args        = '[project]'
    Entry Query        = '[]'
    Entry Name        = 'sentryDSN'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:sentry:<project>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#'
    Entry Title       = 'Get DSN for Sentry Project'
    Entry Description = 'Get temporary DSN (access credentials) for a sentry project.
The credentials returned can be used with any Sentry client for up to
24 hours, after which the credentials will be automatically disabled.

If the project doesn't exist it will be created, and assigned to the
initial team configured for this component. Contact a Sentry admin
to have the project transferred to a team you have access to if needed'
Entry 23    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/statsum/<project>/token'
    Entry Args        = '[project]'
    Entry Query        = '[]'
    Entry Name        = 'statsumToken'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:statsum:<project>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/statsum-token-response.json#'
    Entry Title       = 'Get Token for Statsum Project'
    Entry Description = 'Get temporary `token` and `baseUrl` for sending metrics to statsum.

The token is valid for 24 hours, clients should refresh after expiration.'
Entry 24    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/webhooktunnel'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'webhooktunnelToken'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:webhooktunnel'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/webhooktunnel-token-response.json#'
    Entry Title       = 'Get Token for Webhooktunnel Proxy'
    Entry Description = 'Get temporary `token` and `id` for connecting to webhooktunnel
The token is valid for 96 hours, clients should refresh after expiration.'
Entry 25    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/authenticate-hawk'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'authenticateHawk'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = 'http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#'
    Entry Title       = 'Authenticate Hawk Request'
    Entry Description = 'Validate the request signature given on input and return list of scopes
that the authenticating client has.

This method is used by other services that wish rely on Taskcluster
credentials for authentication. This way we can use Hawk without having
the secret credentials leave this service.'
Entry 26    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/test-authenticate'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'testAuthenticate'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = 'http://schemas.taskcluster.net/auth/v1/test-authenticate-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/test-authenticate-response.json#'
    Entry Title       = 'Test Authentication'
    Entry Description = 'Utility method to test client implementations of Taskcluster
authentication.

Rather than using real credentials, this endpoint accepts requests with
clientId `tester` and accessToken `no-secret`. That client's scopes are
based on `clientScopes` in the request body.

The request is validated, with any certificate, authorizedScopes, etc.
applied, and the resulting scopes are checked against `requiredScopes`
from the request body. On success, the response contains the clientId
and scopes as seen by the API method.'
Entry 27    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/test-authenticate-get/'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'testAuthenticateGet'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/auth/v1/test-authenticate-response.json#'
    Entry Title       = 'Test Authentication (GET)'
    Entry Description = 'Utility method similar to `testAuthenticate`, but with the GET method,
so it can be used with signed URLs (bewits).

Rather than using real credentials, this endpoint accepts requests with
clientId `tester` and accessToken `no-secret`. That client's scopes are
`['test:*', 'auth:create-client:test:*']`.  The call fails if the 
`test:authenticate-get` scope is not available.

The request is validated, with any certificate, authorizedScopes, etc.
applied, and the resulting scopes are checked, just like any API call.
On success, the response contains the clientId and scopes as seen by
the API method.

This method may later be extended to allow specification of client and
required scopes via query arguments.'
Entry 28    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#
======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#
TYPE_NAME: HawkSignatureAuthenticationRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to authenticate a hawk request.
id: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#
properties:
  MemberNames:
    authorization: authorization
    host: host
    method: method
    port: port
    resource: resource
  Properties:
    authorization:
      IS_REQUIRED: false
      PROPERTY_NAME: authorization
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/authorization
      TYPE_NAME: Authorization
      description: |
        Authorization header, **must** only be specified if request being
        authenticated has a `Authorization` header.
      type: string
    host:
      IS_REQUIRED: true
      PROPERTY_NAME: host
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/host
      TYPE_NAME: Host
      anyOf:
        Items:
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/host/anyOf[0]
          TYPE_NAME: String
          description: |
            Host for which the request came in, this is typically the `Host` header
            excluding the port if any.
          format: hostname
          type: string
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/host/anyOf[1]
          TYPE_NAME: String
          description: |
            Host for which the request came in, this is typically the `Host` header
            excluding the port if any.
          format: ipv4
          type: string
        SourceURL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/host/anyOf
      description: |
        Host for which the request came in, this is typically the `Host` header
        excluding the port if any.
      type: string
    method:
      IS_REQUIRED: true
      PROPERTY_NAME: method
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/method
      TYPE_NAME: Method
      description: |
        HTTP method of the request being authenticated.
      enum:
      - get
      - post
      - put
      - head
      - delete
      - options
      - trace
      - copy
      - lock
      - mkcol
      - move
      - purge
      - propfind
      - proppatch
      - unlock
      - report
      - mkactivity
      - checkout
      - merge
      - m-search
      - notify
      - subscribe
      - unsubscribe
      - patch
      - search
      - connect
      type: string
    port:
      IS_REQUIRED: true
      PROPERTY_NAME: port
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/port
      TYPE_NAME: Port
      description: |
        Port on which the request came in, this is typically `80` or `443`.
        If you are running behind a reverse proxy look for the `x-forwarded-port`
        header.
      maximum: 65535
      minimum: 0
      type: integer
    resource:
      IS_REQUIRED: true
      PROPERTY_NAME: resource
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/resource
      TYPE_NAME: Resource
      description: |
        Resource the request operates on including querystring. This is the
        string that follows the HTTP method.
        **Note,** order of querystring elements is important.
      type: string
  SortedPropertyNames:
  - authorization
  - host
  - method
  - port
  - resource
  SourceURL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties
required:
- method
- resource
- host
- port
title: Hawk Signature Authentication Request
type: object


http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/host/anyOf[0]
===============================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/host/anyOf[0]
TYPE_NAME: String
description: |
  Host for which the request came in, this is typically the `Host` header
  excluding the port if any.
format: hostname
type: string


http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/host/anyOf[1]
===============================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-request.json#/properties/host/anyOf[1]
TYPE_NAME: String
description: |
  Host for which the request came in, this is typically the `Host` header
  excluding the port if any.
format: ipv4
type: string


http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#
=======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#
TYPE_NAME: Object
description: |
  Response from a request to authenticate a hawk request.
id: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#
oneOf:
  Items:
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]
    TYPE_NAME: AuthenticationSuccessfulResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response from a request to authenticate a hawk request.
    properties:
      MemberNames:
        clientId: clientId
        expires: expires
        hash: hash
        scheme: scheme
        scopes: scopes
        status: status
      Properties:
        clientId:
          IS_REQUIRED: true
          PROPERTY_NAME: clientId
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/clientId
          TYPE_NAME: ClientId
          description: |
            The `clientId` that made this request.  This may be the `id` supplied in
            the Authorization header, or in the case of a named temporary credential
            may be embedded in the payload.  In any case, this clientId can be used
            for logging, auditing, and identifying the credential but **must** not be
            used for access control.  That's what scopes are for.
          pattern: ^[A-Za-z0-9!@/:.+|_-]+$
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/expires
          TYPE_NAME: Expires
          description: |
            The expiration time for the credentials used to make this request.
            This should be treated as the latest time at which the authorization
            is valid.  For most cases, where the access being authorized occurs
            immediately, this field can be ignored, as the value will always be
            in the future if the status is `auth-success`.
          format: date-time
          type: string
        hash:
          IS_REQUIRED: false
          PROPERTY_NAME: hash
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/hash
          TYPE_NAME: Hash
          description: |
            Payload as extracted from `Authentication` header. This property is
            only present if a hash is available. You are not required to validate
            this hash, but if you do, please check `scheme` to ensure that it's
            on a scheme you support.
        scheme:
          IS_REQUIRED: true
          PROPERTY_NAME: scheme
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scheme
          TYPE_NAME: Scheme
          description: |
            Authentication scheme the client used. Generally, you don't need to
            read this property unless `hash` is provided and you want to validate
            the payload hash. Additional values may be added in the future.
          enum:
          - hawk
          type: string
        scopes:
          IS_REQUIRED: true
          PROPERTY_NAME: scopes
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scopes
          TYPE_NAME: Scopes
          description: |
            List of scopes the client is authorized to access.  Scopes must be
            composed of printable ASCII characters and spaces.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: scopes entry
            SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scopes/items
            TYPE_NAME: ScopesEntry
            pattern: ^[ -~]*$
            type: string
          type: array
        status:
          IS_REQUIRED: true
          PROPERTY_NAME: status
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/status
          TYPE_NAME: Status
          description: |
            The kind of response, `auth-failed` or `auth-success`.
          enum:
          - auth-success
          type: string
      SortedPropertyNames:
      - clientId
      - expires
      - hash
      - scheme
      - scopes
      - status
      SourceURL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties
    required:
    - status
    - scopes
    - scheme
    - clientId
    - expires
    title: Authentication Successful Response
    type: object
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[1]
    TYPE_NAME: AuthenticationFailedResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response from a request to authenticate a hawk request.
    properties:
      MemberNames:
        message: message
        status: status
      Properties:
        message:
          IS_REQUIRED: true
          PROPERTY_NAME: message
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties/message
          TYPE_NAME: Message
          description: |
            Message saying why the authentication failed.
          type: string
        status:
          IS_REQUIRED: true
          PROPERTY_NAME: status
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties/status
          TYPE_NAME: Status
          description: |
            The kind of response, `auth-failed` or `auth-success`.
          enum:
          - auth-failed
          type: string
      SortedPropertyNames:
      - message
      - status
      SourceURL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties
    required:
    - status
    - message
    title: Authentication Failed Response
    type: object
  SourceURL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf
title: Hawk Signature Authentication Response


http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]
================================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]
TYPE_NAME: AuthenticationSuccessfulResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a request to authenticate a hawk request.
properties:
  MemberNames:
    clientId: clientId
    expires: expires
    hash: hash
    scheme: scheme
    scopes: scopes
    status: status
  Properties:
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/clientId
      TYPE_NAME: ClientId
      description: |
        The `clientId` that made this request.  This may be the `id` supplied in
        the Authorization header, or in the case of a named temporary credential
        may be embedded in the payload.  In any case, this clientId can be used
        for logging, auditing, and identifying the credential but **must** not be
        used for access control.  That's what scopes are for.
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/expires
      TYPE_NAME: Expires
      description: |
        The expiration time for the credentials used to make this request.
        This should be treated as the latest time at which the authorization
        is valid.  For most cases, where the access being authorized occurs
        immediately, this field can be ignored, as the value will always be
        in the future if the status is `auth-success`.
      format: date-time
      type: string
    hash:
      IS_REQUIRED: false
      PROPERTY_NAME: hash
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/hash
      TYPE_NAME: Hash
      description: |
        Payload as extracted from `Authentication` header. This property is
        only present if a hash is available. You are not required to validate
        this hash, but if you do, please check `scheme` to ensure that it's
        on a scheme you support.
    scheme:
      IS_REQUIRED: true
      PROPERTY_NAME: scheme
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scheme
      TYPE_NAME: Scheme
      description: |
        Authentication scheme the client used. Generally, you don't need to
        read this property unless `hash` is provided and you want to validate
        the payload hash. Additional values may be added in the future.
      enum:
      - hawk
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scopes
      TYPE_NAME: Scopes
      description: |
        List of scopes the client is authorized to access.  Scopes must be
        composed of printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scopes/items
        TYPE_NAME: ScopesEntry
        pattern: ^[ -~]*$
        type: string
      type: array
    status:
      IS_REQUIRED: true
      PROPERTY_NAME: status
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/status
      TYPE_NAME: Status
      description: |
        The kind of response, `auth-failed` or `auth-success`.
      enum:
      - auth-success
      type: string
  SortedPropertyNames:
  - clientId
  - expires
  - hash
  - scheme
  - scopes
  - status
  SourceURL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties
required:
- status
- scopes
- scheme
- clientId
- expires
title: Authentication Successful Response
type: object


http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[1]
================================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[1]
TYPE_NAME: AuthenticationFailedResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a request to authenticate a hawk request.
properties:
  MemberNames:
    message: message
    status: status
  Properties:
    message:
      IS_REQUIRED: true
      PROPERTY_NAME: message
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties/message
      TYPE_NAME: Message
      description: |
        Message saying why the authentication failed.
      type: string
    status:
      IS_REQUIRED: true
      PROPERTY_NAME: status
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties/status
      TYPE_NAME: Status
      description: |
        The kind of response, `auth-failed` or `auth-success`.
      enum:
      - auth-failed
      type: string
  SortedPropertyNames:
  - message
  - status
  SourceURL: http://schemas.taskcluster.net/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties
required:
- status
- message
title: Authentication Failed Response
type: object


http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#
========================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#
TYPE_NAME: AWSS3CredentialsResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response for a request to get access to an S3 bucket.
id: http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#
properties:
  MemberNames:
    credentials: credentials
    expires: expires
  Properties:
    credentials:
      IS_REQUIRED: true
      PROPERTY_NAME: credentials
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#/properties/credentials
      TYPE_NAME: TemporarySecurityCredentials
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Temporary STS credentials for use when operating on S3
      properties:
        MemberNames:
          accessKeyId: accessKeyId
          secretAccessKey: secretAccessKey
          sessionToken: sessionToken
        Properties:
          accessKeyId:
            IS_REQUIRED: true
            PROPERTY_NAME: accessKeyId
            SOURCE_URL: http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties/accessKeyId
            TYPE_NAME: AccessKeyId
            description: |
              Access key identifier that identifies the temporary security
              credentials.
            title: AccessKeyId
            type: string
          secretAccessKey:
            IS_REQUIRED: true
            PROPERTY_NAME: secretAccessKey
            SOURCE_URL: http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties/secretAccessKey
            TYPE_NAME: SecretAccessKey
            description: |
              Secret access key used to sign requests
            title: SecretAccessKey
            type: string
          sessionToken:
            IS_REQUIRED: true
            PROPERTY_NAME: sessionToken
            SOURCE_URL: http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties/sessionToken
            TYPE_NAME: SessionToken
            description: |
              A token that must passed with request to use the temporary
              security credentials.
            title: SessionToken
            type: string
        SortedPropertyNames:
        - accessKeyId
        - secretAccessKey
        - sessionToken
        SourceURL: http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties
      required:
      - accessKeyId
      - secretAccessKey
      - sessionToken
      title: Temporary Security Credentials
      type: object
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#/properties/expires
      TYPE_NAME: Expires
      description: |
        Date and time of when the temporary credentials expires.
      format: date-time
      type: string
  SortedPropertyNames:
  - credentials
  - expires
  SourceURL: http://schemas.taskcluster.net/auth/v1/aws-s3-credentials-response.json#/properties
required:
- credentials
- expires
title: AWS S3 Credentials Response
type: object


http://schemas.taskcluster.net/auth/v1/azure-account-list-response.json#
========================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-account-list-response.json#
TYPE_NAME: AzureListAccountResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A list of Azure accounts managed by taskcluster-auth
id: http://schemas.taskcluster.net/auth/v1/azure-account-list-response.json#
properties:
  MemberNames:
    accounts: accounts
  Properties:
    accounts:
      IS_REQUIRED: true
      PROPERTY_NAME: accounts
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-account-list-response.json#/properties/accounts
      TYPE_NAME: AzureAccounts
      description: |
        A list of accountIds that are managed by auth. These are
        the accounts that can have SAS credentials fetched for tables
        within them.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: accounts entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-account-list-response.json#/properties/accounts/items
        TYPE_NAME: AccountsEntry
        type: string
      title: Azure Accounts
      type: array
  SortedPropertyNames:
  - accounts
  SourceURL: http://schemas.taskcluster.net/auth/v1/azure-account-list-response.json#/properties
required:
- accounts
title: Azure List Account Response
type: object


http://schemas.taskcluster.net/auth/v1/azure-container-list-response.json#
==========================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-container-list-response.json#
TYPE_NAME: AzureListContainersResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A list of Azure containers in an account
id: http://schemas.taskcluster.net/auth/v1/azure-container-list-response.json#
properties:
  MemberNames:
    containers: containers
    continuationToken: continuationToken
  Properties:
    containers:
      IS_REQUIRED: true
      PROPERTY_NAME: containers
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-container-list-response.json#/properties/containers
      TYPE_NAME: AzureContainers
      description: |
        A list of containers that are in an account.  Credentials are available for
        these containers from the `azureBlobSAS` method.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: containers entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-container-list-response.json#/properties/containers/items
        TYPE_NAME: ContainersEntry
        type: string
      title: Azure Containers
      type: array
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-container-list-response.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of containers.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called this method with `continuationToken`
        until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
  SortedPropertyNames:
  - containers
  - continuationToken
  SourceURL: http://schemas.taskcluster.net/auth/v1/azure-container-list-response.json#/properties
required:
- containers
title: Azure List Containers Response
type: object


http://schemas.taskcluster.net/auth/v1/azure-container-response.json#
=====================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-container-response.json#
TYPE_NAME: Var1
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for an Shared-Access-Signature to access an Azure
  Blob Storage container.
id: http://schemas.taskcluster.net/auth/v1/azure-container-response.json#
properties:
  MemberNames:
    expiry: expiry
    sas: sas
  Properties:
    expiry:
      IS_REQUIRED: true
      PROPERTY_NAME: expiry
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-container-response.json#/properties/expiry
      TYPE_NAME: Expiry
      description: |
        Date and time of when the Shared-Access-Signature expires.
      format: date-time
      type: string
    sas:
      IS_REQUIRED: true
      PROPERTY_NAME: sas
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-container-response.json#/properties/sas
      TYPE_NAME: Sas
      description: |
        Shared-Access-Signature string. This is the querystring parameters to
        be appened after `?` or `&` depending on whether or not a querystring is
        already present in the URL.
      type: string
  SortedPropertyNames:
  - expiry
  - sas
  SourceURL: http://schemas.taskcluster.net/auth/v1/azure-container-response.json#/properties
required:
- sas
- expiry
title: Azure Blob Shared-Access-Signature Response
type: object


http://schemas.taskcluster.net/auth/v1/azure-table-access-response.json#
========================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-table-access-response.json#
TYPE_NAME: Var
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for an Shared-Access-Signature to access and Azure
  Table Storage table.
id: http://schemas.taskcluster.net/auth/v1/azure-table-access-response.json#
properties:
  MemberNames:
    expiry: expiry
    sas: sas
  Properties:
    expiry:
      IS_REQUIRED: true
      PROPERTY_NAME: expiry
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-table-access-response.json#/properties/expiry
      TYPE_NAME: Expiry
      description: |
        Date and time of when the Shared-Access-Signature expires.
      format: date-time
      type: string
    sas:
      IS_REQUIRED: true
      PROPERTY_NAME: sas
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-table-access-response.json#/properties/sas
      TYPE_NAME: Sas
      description: |
        Shared-Access-Signature string. This is the querystring parameters to
        be appened after `?` or `&` depending on whether or not a querystring is
        already present in the URL.
      type: string
  SortedPropertyNames:
  - expiry
  - sas
  SourceURL: http://schemas.taskcluster.net/auth/v1/azure-table-access-response.json#/properties
required:
- sas
- expiry
title: Azure Table Shared-Access-Signature Response
type: object


http://schemas.taskcluster.net/auth/v1/azure-table-list-response.json#
======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-table-list-response.json#
TYPE_NAME: AzureListTableResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A list of Azure tables in an account
id: http://schemas.taskcluster.net/auth/v1/azure-table-list-response.json#
properties:
  MemberNames:
    continuationToken: continuationToken
    tables: tables
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-table-list-response.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of tables.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called `azureAccountTables` with `continuationToken`
        until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
    tables:
      IS_REQUIRED: true
      PROPERTY_NAME: tables
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-table-list-response.json#/properties/tables
      TYPE_NAME: AzureTables
      description: |
        A list of tables that are in an account. These are
        the tables that can have SAS credentials fetched for them.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: tables entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/azure-table-list-response.json#/properties/tables/items
        TYPE_NAME: TablesEntry
        type: string
      title: Azure Tables
      type: array
  SortedPropertyNames:
  - continuationToken
  - tables
  SourceURL: http://schemas.taskcluster.net/auth/v1/azure-table-list-response.json#/properties
required:
- tables
title: Azure List Table Response
type: object


http://schemas.taskcluster.net/auth/v1/create-client-request.json#
==================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-request.json#
TYPE_NAME: CreateClientRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Properties to create a client.
id: http://schemas.taskcluster.net/auth/v1/create-client-request.json#
properties:
  MemberNames:
    deleteOnExpiration: deleteOnExpiration
    description: description
    expires: expires
    scopes: scopes
  Properties:
    deleteOnExpiration:
      IS_REQUIRED: false
      PROPERTY_NAME: deleteOnExpiration
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-request.json#/properties/deleteOnExpiration
      TYPE_NAME: DeleteOnExpiration
      default: false
      description: |
        If `true`, the service may delete this client after it has expired.  If
        `false` (the default), the client will remain after expiration, although
        it cannot be used for authentication in that state.
      type: boolean
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-request.json#/properties/description
      TYPE_NAME: Description
      description: |
        Description of what these credentials are used for in markdown.
        Should include who is the owner, point of contact.
      maxLength: 10240
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-request.json#/properties/expires
      TYPE_NAME: Expires
      description: |
        Date and time where the clients access is set to expire
      format: date-time
      type: string
    scopes:
      IS_REQUIRED: false
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-request.json#/properties/scopes
      TYPE_NAME: Scopes
      description: |
        List of scopes the client has.  Scopes must be composed of
        printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-request.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - deleteOnExpiration
  - description
  - expires
  - scopes
  SourceURL: http://schemas.taskcluster.net/auth/v1/create-client-request.json#/properties
required:
- expires
- description
title: Create Client Request
type: object


http://schemas.taskcluster.net/auth/v1/create-client-response.json#
===================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#
TYPE_NAME: CreateClientResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  All details about a client including the `accessToken`
id: http://schemas.taskcluster.net/auth/v1/create-client-response.json#
properties:
  MemberNames:
    accessToken: accessToken
    clientId: clientId
    created: created
    deleteOnExpiration: deleteOnExpiration
    description: description
    disabled: disabled
    expandedScopes: expandedScopes
    expires: expires
    lastDateUsed: lastDateUsed
    lastModified: lastModified
    lastRotated: lastRotated
    scopes: scopes
  Properties:
    accessToken:
      IS_REQUIRED: true
      PROPERTY_NAME: accessToken
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/accessToken
      TYPE_NAME: AccessToken
      description: |
        AccessToken used for authenticating requests, you should store this
        you won't be able to retrive it again!
      pattern: ^[a-zA-Z0-9_-]{22,66}$
      type: string
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/clientId
      TYPE_NAME: ClientId
      description: |
        ClientId of the client
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/created
      TYPE_NAME: Created
      description: |
        Date and time when this client was created
      format: date-time
      type: string
    deleteOnExpiration:
      IS_REQUIRED: true
      PROPERTY_NAME: deleteOnExpiration
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/deleteOnExpiration
      TYPE_NAME: DeleteOnExpiration
      description: |
        If `true`, the service may delete this client after it has expired.  If
        `false`, the client will remain after expiration, although it cannot be
        used for authentication in that state.
      type: boolean
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/description
      TYPE_NAME: Description
      description: |
        Description of what these credentials are used for in markdown.
        Should include who is the owner, point of contact.
      maxLength: 10240
      type: string
    disabled:
      IS_REQUIRED: true
      PROPERTY_NAME: disabled
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/disabled
      TYPE_NAME: Disabled
      description: |
        If true, this client is disabled and cannot be used.  This usually occurs when the
        scopes available to the user owning the client no longer satisfy the client.
      type: boolean
    expandedScopes:
      IS_REQUIRED: true
      PROPERTY_NAME: expandedScopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/expandedScopes
      TYPE_NAME: ExpandedScopes
      description: |
        List of scopes granted to this client by matching roles, including the
        client's scopes and the implicit role `client-id:<clientId>`.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: expandedScopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/expandedScopes/items
        TYPE_NAME: ExpandedScopesEntry
        description: |
          Scope that client is granted
        pattern: ^[ -~]*$
        type: string
      type: array
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/expires
      TYPE_NAME: Expires
      description: |
        Date and time where the clients access is set to expire
      format: date-time
      type: string
    lastDateUsed:
      IS_REQUIRED: true
      PROPERTY_NAME: lastDateUsed
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/lastDateUsed
      TYPE_NAME: LastDateUsed
      description: |
        Date of last time this client was used. Will only be updated every 6 hours
        or so this may be off by up-to 6 hours. But it still gives a solid hint
        as to whether or not this client is in use.
      format: date-time
      type: string
    lastModified:
      IS_REQUIRED: true
      PROPERTY_NAME: lastModified
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/lastModified
      TYPE_NAME: LastModified
      description: |
        Date and time of last modification
      format: date-time
      type: string
    lastRotated:
      IS_REQUIRED: true
      PROPERTY_NAME: lastRotated
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/lastRotated
      TYPE_NAME: LastRotated
      description: |
        Date and time of when the `accessToken` was reset last time.
      format: date-time
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/scopes
      TYPE_NAME: Scopes
      default: []
      description: |
        List of scopes the client has (unexpanded).  Scopes must be composed of
        printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - accessToken
  - clientId
  - created
  - deleteOnExpiration
  - description
  - disabled
  - expandedScopes
  - expires
  - lastDateUsed
  - lastModified
  - lastRotated
  - scopes
  SourceURL: http://schemas.taskcluster.net/auth/v1/create-client-response.json#/properties
required:
- clientId
- accessToken
- expires
- description
- created
- lastModified
- lastDateUsed
- lastRotated
- scopes
- expandedScopes
- disabled
- deleteOnExpiration
title: Create Client Response
type: object


http://schemas.taskcluster.net/auth/v1/create-role-request.json#
================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-role-request.json#
TYPE_NAME: CreateRoleRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Data to create or update a role.
id: http://schemas.taskcluster.net/auth/v1/create-role-request.json#
properties:
  MemberNames:
    description: description
    scopes: scopes
  Properties:
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-role-request.json#/properties/description
      TYPE_NAME: Description
      description: |
        Description of what this role is used for in markdown.
        Should include who is the owner, point of contact.
      maxLength: 10240
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-role-request.json#/properties/scopes
      TYPE_NAME: Scopes
      description: |
        List of scopes the role grants access to.  Scopes must be composed of
        printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/create-role-request.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        description: |
          Scope the role grants access to
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - description
  - scopes
  SourceURL: http://schemas.taskcluster.net/auth/v1/create-role-request.json#/properties
required:
- scopes
- description
title: Create Role Request
type: object


http://schemas.taskcluster.net/auth/v1/get-client-response.json#
================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#
TYPE_NAME: GetClientResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Get all details about a client, useful for tools modifying a client
id: http://schemas.taskcluster.net/auth/v1/get-client-response.json#
properties:
  MemberNames:
    clientId: clientId
    created: created
    deleteOnExpiration: deleteOnExpiration
    description: description
    disabled: disabled
    expandedScopes: expandedScopes
    expires: expires
    lastDateUsed: lastDateUsed
    lastModified: lastModified
    lastRotated: lastRotated
    scopes: scopes
  Properties:
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/clientId
      TYPE_NAME: ClientId
      description: |
        ClientId of the client scopes is requested about
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/created
      TYPE_NAME: Created
      description: |
        Date and time when this client was created
      format: date-time
      type: string
    deleteOnExpiration:
      IS_REQUIRED: true
      PROPERTY_NAME: deleteOnExpiration
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/deleteOnExpiration
      TYPE_NAME: DeleteOnExpiration
      description: |
        If `true`, the service may delete this client after it has expired.  If
        `false`, the client will remain after expiration, although it cannot be
        used for authentication in that state.
      type: boolean
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/description
      TYPE_NAME: Description
      description: |
        Description of what these credentials are used for in markdown.
        Should include who is the owner, point of contact.
      maxLength: 10240
      type: string
    disabled:
      IS_REQUIRED: true
      PROPERTY_NAME: disabled
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/disabled
      TYPE_NAME: Disabled
      description: |
        If true, this client is disabled and cannot be used.  This usually occurs when the
        scopes available to the user owning the client no longer satisfy the client.
      type: boolean
    expandedScopes:
      IS_REQUIRED: true
      PROPERTY_NAME: expandedScopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/expandedScopes
      TYPE_NAME: ExpandedScopes
      description: |
        List of scopes granted to this client by matching roles.  Scopes must be
        composed of printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: expandedScopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/expandedScopes/items
        TYPE_NAME: ExpandedScopesEntry
        description: |
          Scope that client is granted by a role
        pattern: ^[ -~]*$
        type: string
      type: array
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/expires
      TYPE_NAME: Expires
      description: |
        Date and time where the clients access is set to expire
      format: date-time
      type: string
    lastDateUsed:
      IS_REQUIRED: true
      PROPERTY_NAME: lastDateUsed
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/lastDateUsed
      TYPE_NAME: LastDateUsed
      description: |
        Date of last time this client was used. Will only be updated every 6 hours
        or so this may be off by up-to 6 hours. But it still gives a solid hint
        as to whether or not this client is in use.
      format: date-time
      type: string
    lastModified:
      IS_REQUIRED: true
      PROPERTY_NAME: lastModified
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/lastModified
      TYPE_NAME: LastModified
      description: |
        Date and time of last modification
      format: date-time
      type: string
    lastRotated:
      IS_REQUIRED: true
      PROPERTY_NAME: lastRotated
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/lastRotated
      TYPE_NAME: LastRotated
      description: |
        Date and time of when the `accessToken` was reset last time.
      format: date-time
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/scopes
      TYPE_NAME: Scopes
      default: []
      description: |
        List of scopes the client has (unexpanded).  Scopes must be composed of
        printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - clientId
  - created
  - deleteOnExpiration
  - description
  - disabled
  - expandedScopes
  - expires
  - lastDateUsed
  - lastModified
  - lastRotated
  - scopes
  SourceURL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties
required:
- clientId
- expires
- description
- created
- lastModified
- lastDateUsed
- lastRotated
- scopes
- expandedScopes
- disabled
- deleteOnExpiration
title: Get Client Response
type: object


http://schemas.taskcluster.net/auth/v1/get-role-response.json#
==============================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#
TYPE_NAME: GetRoleResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Get all details about a role
id: http://schemas.taskcluster.net/auth/v1/get-role-response.json#
properties:
  MemberNames:
    created: created
    description: description
    expandedScopes: expandedScopes
    lastModified: lastModified
    roleId: roleId
    scopes: scopes
  Properties:
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/created
      TYPE_NAME: Created
      description: |
        Date and time when this role was created
      format: date-time
      type: string
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/description
      TYPE_NAME: Description
      description: |
        Description of what this role is used for in markdown.
        Should include who is the owner, point of contact.
      maxLength: 10240
      type: string
    expandedScopes:
      IS_REQUIRED: true
      PROPERTY_NAME: expandedScopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/expandedScopes
      TYPE_NAME: ExpandedScopes
      description: |
        List of scopes granted anyone who assumes this role, including anything
        granted by roles that can be assumed when you have this role.
        Hence, this includes any scopes in-directly granted as well.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: expandedScopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/expandedScopes/items
        TYPE_NAME: ExpandedScopesEntry
        description: |
          Scope this role grants
        pattern: ^[ -~]*$
        type: string
      type: array
    lastModified:
      IS_REQUIRED: true
      PROPERTY_NAME: lastModified
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/lastModified
      TYPE_NAME: LastModified
      description: |
        Date and time of last modification
      format: date-time
      type: string
    roleId:
      IS_REQUIRED: true
      PROPERTY_NAME: roleId
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/roleId
      TYPE_NAME: RoleId
      description: |
        roleId of the role requested
      pattern: ^[\x20-\x7e]+$
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/scopes
      TYPE_NAME: Scopes
      description: |
        List of scopes the role grants access to.  Scopes must be composed of
        printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        description: |
          Scope the role grants access to
        pattern: ^[ -~]*$
        type: string
      type: array
  SortedPropertyNames:
  - created
  - description
  - expandedScopes
  - lastModified
  - roleId
  - scopes
  SourceURL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties
required:
- roleId
- scopes
- description
- created
- lastModified
- expandedScopes
title: Get Role Response
type: object


http://schemas.taskcluster.net/auth/v1/list-clients-response.json#
==================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/list-clients-response.json#
TYPE_NAME: GetClientResponse[]
description: |
  List of clients
id: http://schemas.taskcluster.net/auth/v1/list-clients-response.json#
items:
  $ref: http://schemas.taskcluster.net/auth/v1/get-client-response.json#
  IS_REQUIRED: false
  PROPERTY_NAME: ' entry'
  REF_SUBSCHEMA:
    $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#
    TYPE_NAME: GetClientResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Get all details about a client, useful for tools modifying a client
    id: http://schemas.taskcluster.net/auth/v1/get-client-response.json#
    properties:
      MemberNames:
        clientId: clientId
        created: created
        deleteOnExpiration: deleteOnExpiration
        description: description
        disabled: disabled
        expandedScopes: expandedScopes
        expires: expires
        lastDateUsed: lastDateUsed
        lastModified: lastModified
        lastRotated: lastRotated
        scopes: scopes
      Properties:
        clientId:
          IS_REQUIRED: true
          PROPERTY_NAME: clientId
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/clientId
          TYPE_NAME: ClientId
          description: |
            ClientId of the client scopes is requested about
          pattern: ^[A-Za-z0-9!@/:.+|_-]+$
          type: string
        created:
          IS_REQUIRED: true
          PROPERTY_NAME: created
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/created
          TYPE_NAME: Created
          description: |
            Date and time when this client was created
          format: date-time
          type: string
        deleteOnExpiration:
          IS_REQUIRED: true
          PROPERTY_NAME: deleteOnExpiration
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/deleteOnExpiration
          TYPE_NAME: DeleteOnExpiration
          description: |
            If `true`, the service may delete this client after it has expired.  If
            `false`, the client will remain after expiration, although it cannot be
            used for authentication in that state.
          type: boolean
        description:
          IS_REQUIRED: true
          PROPERTY_NAME: description
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/description
          TYPE_NAME: Description
          description: |
            Description of what these credentials are used for in markdown.
            Should include who is the owner, point of contact.
          maxLength: 10240
          type: string
        disabled:
          IS_REQUIRED: true
          PROPERTY_NAME: disabled
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/disabled
          TYPE_NAME: Disabled
          description: |
            If true, this client is disabled and cannot be used.  This usually occurs when the
            scopes available to the user owning the client no longer satisfy the client.
          type: boolean
        expandedScopes:
          IS_REQUIRED: true
          PROPERTY_NAME: expandedScopes
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/expandedScopes
          TYPE_NAME: ExpandedScopes
          description: |
            List of scopes granted to this client by matching roles.  Scopes must be
            composed of printable ASCII characters and spaces.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: expandedScopes entry
            SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/expandedScopes/items
            TYPE_NAME: ExpandedScopesEntry
            description: |
              Scope that client is granted by a role
            pattern: ^[ -~]*$
            type: string
          type: array
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/expires
          TYPE_NAME: Expires
          description: |
            Date and time where the clients access is set to expire
          format: date-time
          type: string
        lastDateUsed:
          IS_REQUIRED: true
          PROPERTY_NAME: lastDateUsed
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/lastDateUsed
          TYPE_NAME: LastDateUsed
          description: |
            Date of last time this client was used. Will only be updated every 6 hours
            or so this may be off by up-to 6 hours. But it still gives a solid hint
            as to whether or not this client is in use.
          format: date-time
          type: string
        lastModified:
          IS_REQUIRED: true
          PROPERTY_NAME: lastModified
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/lastModified
          TYPE_NAME: LastModified
          description: |
            Date and time of last modification
          format: date-time
          type: string
        lastRotated:
          IS_REQUIRED: true
          PROPERTY_NAME: lastRotated
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/lastRotated
          TYPE_NAME: LastRotated
          description: |
            Date and time of when the `accessToken` was reset last time.
          format: date-time
          type: string
        scopes:
          IS_REQUIRED: true
          PROPERTY_NAME: scopes
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/scopes
          TYPE_NAME: Scopes
          default: []
          description: |
            List of scopes the client has (unexpanded).  Scopes must be composed of
            printable ASCII characters and spaces.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: scopes entry
            SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties/scopes/items
            TYPE_NAME: ScopesEntry
            description: Scope
            pattern: ^[ -~]*$
            type: string
          type: array
          uniqueItems: true
      SortedPropertyNames:
      - clientId
      - created
      - deleteOnExpiration
      - description
      - disabled
      - expandedScopes
      - expires
      - lastDateUsed
      - lastModified
      - lastRotated
      - scopes
      SourceURL: http://schemas.taskcluster.net/auth/v1/get-client-response.json#/properties
    required:
    - clientId
    - expires
    - description
    - created
    - lastModified
    - lastDateUsed
    - lastRotated
    - scopes
    - expandedScopes
    - disabled
    - deleteOnExpiration
    title: Get Client Response
    type: object
  SOURCE_URL: http://schemas.taskcluster.net/auth/v1/list-clients-response.json#/items
  TYPE_NAME: Entry
title: List Client Response
type: array


http://schemas.taskcluster.net/auth/v1/list-roles-response.json#
================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/list-roles-response.json#
TYPE_NAME: GetRoleResponse[]
description: |
  List of roles
id: http://schemas.taskcluster.net/auth/v1/list-roles-response.json#
items:
  $ref: http://schemas.taskcluster.net/auth/v1/get-role-response.json#
  IS_REQUIRED: false
  PROPERTY_NAME: ' entry'
  REF_SUBSCHEMA:
    $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#
    TYPE_NAME: GetRoleResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Get all details about a role
    id: http://schemas.taskcluster.net/auth/v1/get-role-response.json#
    properties:
      MemberNames:
        created: created
        description: description
        expandedScopes: expandedScopes
        lastModified: lastModified
        roleId: roleId
        scopes: scopes
      Properties:
        created:
          IS_REQUIRED: true
          PROPERTY_NAME: created
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/created
          TYPE_NAME: Created
          description: |
            Date and time when this role was created
          format: date-time
          type: string
        description:
          IS_REQUIRED: true
          PROPERTY_NAME: description
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/description
          TYPE_NAME: Description
          description: |
            Description of what this role is used for in markdown.
            Should include who is the owner, point of contact.
          maxLength: 10240
          type: string
        expandedScopes:
          IS_REQUIRED: true
          PROPERTY_NAME: expandedScopes
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/expandedScopes
          TYPE_NAME: ExpandedScopes
          description: |
            List of scopes granted anyone who assumes this role, including anything
            granted by roles that can be assumed when you have this role.
            Hence, this includes any scopes in-directly granted as well.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: expandedScopes entry
            SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/expandedScopes/items
            TYPE_NAME: ExpandedScopesEntry
            description: |
              Scope this role grants
            pattern: ^[ -~]*$
            type: string
          type: array
        lastModified:
          IS_REQUIRED: true
          PROPERTY_NAME: lastModified
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/lastModified
          TYPE_NAME: LastModified
          description: |
            Date and time of last modification
          format: date-time
          type: string
        roleId:
          IS_REQUIRED: true
          PROPERTY_NAME: roleId
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/roleId
          TYPE_NAME: RoleId
          description: |
            roleId of the role requested
          pattern: ^[\x20-\x7e]+$
          type: string
        scopes:
          IS_REQUIRED: true
          PROPERTY_NAME: scopes
          SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/scopes
          TYPE_NAME: Scopes
          description: |
            List of scopes the role grants access to.  Scopes must be composed of
            printable ASCII characters and spaces.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: scopes entry
            SOURCE_URL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties/scopes/items
            TYPE_NAME: ScopesEntry
            description: |
              Scope the role grants access to
            pattern: ^[ -~]*$
            type: string
          type: array
      SortedPropertyNames:
      - created
      - description
      - expandedScopes
      - lastModified
      - roleId
      - scopes
      SourceURL: http://schemas.taskcluster.net/auth/v1/get-role-response.json#/properties
    required:
    - roleId
    - scopes
    - description
    - created
    - lastModified
    - expandedScopes
    title: Get Role Response
    type: object
  SOURCE_URL: http://schemas.taskcluster.net/auth/v1/list-roles-response.json#/items
  TYPE_NAME: Entry1
title: List Roles Response
type: array


http://schemas.taskcluster.net/auth/v1/scopeset.json#
=====================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/scopeset.json#
TYPE_NAME: SetOfScopes
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A set of scopes
id: http://schemas.taskcluster.net/auth/v1/scopeset.json#
properties:
  MemberNames:
    scopes: scopes
  Properties:
    scopes:
      IS_REQUIRED: false
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/scopeset.json#/properties/scopes
      TYPE_NAME: Scopes
      description: |
        List of scopes.  Scopes must be composed of printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/scopeset.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - scopes
  SourceURL: http://schemas.taskcluster.net/auth/v1/scopeset.json#/properties
title: Set of scopes
type: object


http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#
================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#
TYPE_NAME: SentryDSNResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Sentry DSN for submitting errors.
id: http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#
properties:
  MemberNames:
    dsn: dsn
    expires: expires
    project: project
  Properties:
    dsn:
      IS_REQUIRED: true
      PROPERTY_NAME: dsn
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#/properties/dsn
      TYPE_NAME: Dsn
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Access credentials and urls for the Sentry project.
        Credentials will expire in 24-48 hours, you should refresh them within
        24 hours.
      properties:
        MemberNames:
          public: public1
          secret: secret
        Properties:
          public:
            IS_REQUIRED: true
            PROPERTY_NAME: public
            SOURCE_URL: http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#/properties/dsn/properties/public
            TYPE_NAME: Public
            description: |
              Access credential and URL for public error reports.
              These credentials can be used for up-to 24 hours.
              This is for use in client-side applications only.
            format: uri
            type: string
          secret:
            IS_REQUIRED: true
            PROPERTY_NAME: secret
            SOURCE_URL: http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#/properties/dsn/properties/secret
            TYPE_NAME: Secret
            description: |
              Access credential and URL for private error reports.
              These credentials can be used for up-to 24 hours.
              This is for use in serser-side applications and should **not** be
              leaked.
            format: uri
            type: string
        SortedPropertyNames:
        - public
        - secret
        SourceURL: http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#/properties/dsn/properties
      required:
      - secret
      - public
      type: object
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#/properties/expires
      TYPE_NAME: Expires
      description: |
        Expiration time for the credentials. The credentials should not be used
        after this time. They might not be revoked immediately, but will be at
        some arbitrary point after this date-time.
      format: date-time
      type: string
    project:
      IS_REQUIRED: true
      PROPERTY_NAME: project
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#/properties/project
      TYPE_NAME: Project
      description: |
        Project name that the DSN grants access to.
      title: Project
      type: string
  SortedPropertyNames:
  - dsn
  - expires
  - project
  SourceURL: http://schemas.taskcluster.net/auth/v1/sentry-dsn-response.json#/properties
required:
- project
- dsn
- expires
title: Sentry DSN Response
type: object


http://schemas.taskcluster.net/auth/v1/statsum-token-response.json#
===================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/statsum-token-response.json#
TYPE_NAME: StatsumTokenResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Token for submitting statistics to statsum.
id: http://schemas.taskcluster.net/auth/v1/statsum-token-response.json#
properties:
  MemberNames:
    baseUrl: baseUrl
    expires: expires
    project: project
    token: token
  Properties:
    baseUrl:
      IS_REQUIRED: true
      PROPERTY_NAME: baseUrl
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/statsum-token-response.json#/properties/baseUrl
      TYPE_NAME: BaseUrl
      description: |
        Base URL for the statsum server this project is allocated on.
      format: uri
      title: BaseUrl
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/statsum-token-response.json#/properties/expires
      TYPE_NAME: TokenExpiration
      description: |
        Time at which the token expires and should not be used anymore.
      format: date-time
      title: Token Expiration
      type: string
    project:
      IS_REQUIRED: true
      PROPERTY_NAME: project
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/statsum-token-response.json#/properties/project
      TYPE_NAME: Project
      description: |
        Project name that the token grants access to.
      title: Project
      type: string
    token:
      IS_REQUIRED: true
      PROPERTY_NAME: token
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/statsum-token-response.json#/properties/token
      TYPE_NAME: AccessToken
      description: |
        JWT token to be used as `Bearer <token>` when submitting data to statsum.
      title: Access Token
      type: string
  SortedPropertyNames:
  - baseUrl
  - expires
  - project
  - token
  SourceURL: http://schemas.taskcluster.net/auth/v1/statsum-token-response.json#/properties
required:
- project
- token
- expires
- baseUrl
title: Statsum Token Response
type: object


http://schemas.taskcluster.net/auth/v1/test-authenticate-request.json#
======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/test-authenticate-request.json#
TYPE_NAME: TestAuthenticateRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Details on how the test request should be authenticated.
id: http://schemas.taskcluster.net/auth/v1/test-authenticate-request.json#
properties:
  MemberNames:
    clientScopes: clientScopes
    requiredScopes: requiredScopes
  Properties:
    clientScopes:
      IS_REQUIRED: false
      PROPERTY_NAME: clientScopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/test-authenticate-request.json#/properties/clientScopes
      TYPE_NAME: ClientScopes
      default: []
      description: |
        List of scopes that should be client used should be given.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: clientScopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/test-authenticate-request.json#/properties/clientScopes/items
        TYPE_NAME: ClientScopesEntry
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
    requiredScopes:
      IS_REQUIRED: false
      PROPERTY_NAME: requiredScopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/test-authenticate-request.json#/properties/requiredScopes
      TYPE_NAME: RequiredScopes
      default: []
      description: |
        List of scopes the request should require.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: requiredScopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/test-authenticate-request.json#/properties/requiredScopes/items
        TYPE_NAME: RequiredScopesEntry
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - clientScopes
  - requiredScopes
  SourceURL: http://schemas.taskcluster.net/auth/v1/test-authenticate-request.json#/properties
title: Test Authenticate Request
type: object


http://schemas.taskcluster.net/auth/v1/test-authenticate-response.json#
=======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/test-authenticate-response.json#
TYPE_NAME: TestAuthenticateResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Details on how the test request was authenticated.
id: http://schemas.taskcluster.net/auth/v1/test-authenticate-response.json#
properties:
  MemberNames:
    clientId: clientId
    scopes: scopes
  Properties:
    clientId:
      IS_REQUIRED: false
      PROPERTY_NAME: clientId
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/test-authenticate-response.json#/properties/clientId
      TYPE_NAME: ClientId
      description: |
        ClientId from the request as it will be logged
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
    scopes:
      IS_REQUIRED: false
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/test-authenticate-response.json#/properties/scopes
      TYPE_NAME: Scopes
      default: []
      description: |
        List of scopes the request was authorized.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/auth/v1/test-authenticate-response.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - clientId
  - scopes
  SourceURL: http://schemas.taskcluster.net/auth/v1/test-authenticate-response.json#/properties
title: Test Authenticate Response
type: object


http://schemas.taskcluster.net/auth/v1/webhooktunnel-token-response.json#
=========================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/webhooktunnel-token-response.json#
TYPE_NAME: WebhooktunnelTokenResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Token for connecting a worker to webhooktunnel proxy
id: http://schemas.taskcluster.net/auth/v1/webhooktunnel-token-response.json#
properties:
  MemberNames:
    proxyUrl: proxyUrl
    token: token
    tunnelId: tunnelId
  Properties:
    proxyUrl:
      IS_REQUIRED: true
      PROPERTY_NAME: proxyUrl
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/webhooktunnel-token-response.json#/properties/proxyUrl
      TYPE_NAME: ProxyURL
      description: |
        websocket url at which proxy is hosted
      title: Proxy URL
      type: string
    token:
      IS_REQUIRED: true
      PROPERTY_NAME: token
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/webhooktunnel-token-response.json#/properties/token
      TYPE_NAME: AuthToken
      description: "jwt token to be used as `Bearer <token>` when connecting to proxy.
        \n"
      title: Auth Token
      type: string
    tunnelId:
      IS_REQUIRED: true
      PROPERTY_NAME: tunnelId
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/webhooktunnel-token-response.json#/properties/tunnelId
      TYPE_NAME: ProxyConnectionID
      description: |
        id for proxy connection
      title: Proxy Connection ID
      type: string
  SortedPropertyNames:
  - proxyUrl
  - token
  - tunnelId
  SourceURL: http://schemas.taskcluster.net/auth/v1/webhooktunnel-token-response.json#/properties
required:
- token
- tunnelId
- proxyUrl
title: Webhooktunnel Token Response
type: object


http://references.taskcluster.net/auth/v1/exchanges.json
========================================================
Version         = '0'
Title           = 'Auth Pulse Exchanges'
Description     = 'The auth service, typically available at `auth.taskcluster.net`
is responsible for storing credentials, managing assignment of scopes,
and validation of request signatures from other services.

These exchanges provides notifications when credentials or roles are
updated. This is mostly so that multiple instances of the auth service
can purge their caches and synchronize state. But you are of course
welcome to use these for other purposes, monitoring changes for example.'
Exchange Prefix = 'exchange/taskcluster-auth/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'client-created'
    Entry Name        = 'clientCreated'
    Entry Title       = 'Client Created Messages'
    Entry Description = 'Message that a new client has been created.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/auth/v1/client-message.json#'
Entry 1     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'client-updated'
    Entry Name        = 'clientUpdated'
    Entry Title       = 'Client Updated Messages'
    Entry Description = 'Message that a new client has been updated.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/auth/v1/client-message.json#'
Entry 2     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'client-deleted'
    Entry Name        = 'clientDeleted'
    Entry Title       = 'Client Deleted Messages'
    Entry Description = 'Message that a new client has been deleted.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/auth/v1/client-message.json#'
Entry 3     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'role-created'
    Entry Name        = 'roleCreated'
    Entry Title       = 'Role Created Messages'
    Entry Description = 'Message that a new role has been created.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/auth/v1/role-message.json#'
Entry 4     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'role-updated'
    Entry Name        = 'roleUpdated'
    Entry Title       = 'Role Updated Messages'
    Entry Description = 'Message that a new role has been updated.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/auth/v1/role-message.json#'
Entry 5     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'role-deleted'
    Entry Name        = 'roleDeleted'
    Entry Title       = 'Role Deleted Messages'
    Entry Description = 'Message that a new role has been deleted.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/auth/v1/role-message.json#'


http://schemas.taskcluster.net/auth/v1/client-message.json#
===========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/client-message.json#
TYPE_NAME: ClientMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a client has changed
id: http://schemas.taskcluster.net/auth/v1/client-message.json#
properties:
  MemberNames:
    clientId: clientId
    version: version
  Properties:
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/client-message.json#/properties/clientId
      TYPE_NAME: ClientId
      description: |
        `clientId` of the client that was changed
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/client-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version number
      enum:
      - 1
  SortedPropertyNames:
  - clientId
  - version
  SourceURL: http://schemas.taskcluster.net/auth/v1/client-message.json#/properties
required:
- version
- clientId
title: Client Message
type: object


http://schemas.taskcluster.net/auth/v1/role-message.json#
=========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/auth/v1/role-message.json#
TYPE_NAME: RoleMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a role has changed
id: http://schemas.taskcluster.net/auth/v1/role-message.json#
properties:
  MemberNames:
    roleId: roleId
    version: version
  Properties:
    roleId:
      IS_REQUIRED: true
      PROPERTY_NAME: roleId
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/role-message.json#/properties/roleId
      TYPE_NAME: RoleId
      description: |
        `roleId` of the role that was changed
      pattern: ^[\x20-\x7e]+$
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/auth/v1/role-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version number
      enum:
      - 1
  SortedPropertyNames:
  - roleId
  - version
  SourceURL: http://schemas.taskcluster.net/auth/v1/role-message.json#/properties
required:
- version
- roleId
title: Role Message
type: object


http://references.taskcluster.net/aws-provisioner/v1/api.json
=============================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'AWS Provisioner API Documentation'
Description = 'The AWS Provisioner is responsible for provisioning instances on EC2 for use in
Taskcluster.  The provisioner maintains a set of worker configurations which
can be managed with an API that is typically available at
aws-provisioner.taskcluster.net/v1.  This API can also perform basic instance
management tasks in addition to maintaining the internal state of worker type
configuration information.

The Provisioner runs at a configurable interval.  Each iteration of the
provisioner fetches a current copy the state that the AWS EC2 api reports.  In
each iteration, we ask the Queue how many tasks are pending for that worker
type.  Based on the number of tasks pending and the scaling ratio, we may
submit requests for new instances.  We use pricing information, capacity and
utility factor information to decide which instance type in which region would
be the optimal configuration.

Each EC2 instance type will declare a capacity and utility factor.  Capacity is
the number of tasks that a given machine is capable of running concurrently.
Utility factor is a relative measure of performance between two instance types.
We multiply the utility factor by the spot price to compare instance types and
regions when making the bidding choices.

When a new EC2 instance is instantiated, its user data contains a token in
`securityToken` that can be used with the `getSecret` method to retrieve
the worker's credentials and any needed passwords or other restricted
information.  The worker is responsible for deleting the secret after
retrieving it, to prevent dissemination of the secret to other proceses
which can read the instance user data.
'
Base URL    = 'https://aws-provisioner.taskcluster.net/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/list-worker-type-summaries'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'listWorkerTypeSummaries'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/aws-provisioner/v1/list-worker-types-summaries-response.json#'
    Entry Title       = 'List worker types with details'
    Entry Description = 'Return a list of worker types, including some summary information about
current capacity for each.  While this list includes all defined worker types,
there may be running EC2 instances for deleted worker types that are not
included here.  The list is unordered.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/worker-type/<workerType>'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'createWorkerType'
    Entry Stability   = 'stable'
    Entry Scopes      = 'aws-provisioner:manage-worker-type:<workerType>'
    Entry Input       = 'http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#'
    Entry Title       = 'Create new Worker Type'
    Entry Description = 'Create a worker type.  A worker type contains all the configuration
needed for the provisioner to manage the instances.  Each worker type
knows which regions and which instance types are allowed for that
worker type.  Remember that Capacity is the number of concurrent tasks
that can be run on a given EC2 resource and that Utility is the relative
performance rate between different instance types.  There is no way to
configure different regions to have different sets of instance types
so ensure that all instance types are available in all regions.
This function is idempotent.

Once a worker type is in the provisioner, a back ground process will
begin creating instances for it based on its capacity bounds and its
pending task count from the Queue.  It is the worker's responsibility
to shut itself down.  The provisioner has a limit (currently 96hours)
for all instances to prevent zombie instances from running indefinitely.

The provisioner will ensure that all instances created are tagged with
aws resource tags containing the provisioner id and the worker type.

If provided, the secrets in the global, region and instance type sections
are available using the secrets api.  If specified, the scopes provided
will be used to generate a set of temporary credentials available with
the other secrets.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/worker-type/<workerType>/update'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'updateWorkerType'
    Entry Stability   = 'stable'
    Entry Scopes      = 'aws-provisioner:manage-worker-type:<workerType>'
    Entry Input       = 'http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#'
    Entry Title       = 'Update Worker Type'
    Entry Description = 'Provide a new copy of a worker type to replace the existing one.
This will overwrite the existing worker type definition if there
is already a worker type of that name.  This method will return a
200 response along with a copy of the worker type definition created
Note that if you are using the result of a GET on the worker-type
end point that you will need to delete the lastModified and workerType
keys from the object returned, since those fields are not allowed
the request body for this method

Otherwise, all input requirements and actions are the same as the
create method.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/worker-type-last-modified/<workerType>'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'workerTypeLastModified'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-last-modified.json#'
    Entry Title       = 'Get Worker Type Last Modified Time'
    Entry Description = 'This method is provided to allow workers to see when they were
last modified.  The value provided through UserData can be
compared against this value to see if changes have been made
If the worker type definition has not been changed, the date
should be identical as it is the same stored value.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/worker-type/<workerType>'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'workerType'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- aws-provisioner:view-worker-type:<workerType>
- aws-provisioner:manage-worker-type:<workerType>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#'
    Entry Title       = 'Get Worker Type'
    Entry Description = 'Retrieve a copy of the requested worker type definition.
This copy contains a lastModified field as well as the worker
type name.  As such, it will require manipulation to be able to
use the results of this method to submit date to the update
method.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/worker-type/<workerType>'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'removeWorkerType'
    Entry Stability   = 'stable'
    Entry Scopes      = 'aws-provisioner:manage-worker-type:<workerType>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Delete Worker Type'
    Entry Description = 'Delete a worker type definition.  This method will only delete
the worker type definition from the storage table.  The actual
deletion will be handled by a background worker.  As soon as this
method is called for a worker type, the background worker will
immediately submit requests to cancel all spot requests for this
worker type as well as killing all instances regardless of their
state.  If you want to gracefully remove a worker type, you must
either ensure that no tasks are created with that worker type name
or you could theoretically set maxCapacity to 0, though, this is
not a supported or tested action'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/list-worker-types'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'listWorkerTypes'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/aws-provisioner/v1/list-worker-types-response.json#'
    Entry Title       = 'List Worker Types'
    Entry Description = 'Return a list of string worker type names.  These are the names
of all managed worker types known to the provisioner.  This does
not include worker types which are left overs from a deleted worker
type definition but are still running in AWS.'
Entry 7     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/secret/<token>'
    Entry Args        = '[token]'
    Entry Query        = '[]'
    Entry Name        = 'createSecret'
    Entry Stability   = 'stable'
    Entry Scopes      = 'aws-provisioner:create-secret:<workerType>'
    Entry Input       = 'http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#'
    Entry Output      = ''
    Entry Title       = 'Create new Secret'
    Entry Description = 'Insert a secret into the secret storage.  The supplied secrets will
be provided verbatime via `getSecret`, while the supplied scopes will
be converted into credentials by `getSecret`.

This method is not ordinarily used in production; instead, the provisioner
creates a new secret directly for each spot bid.'
Entry 8     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/secret/<token>'
    Entry Args        = '[token]'
    Entry Query        = '[]'
    Entry Name        = 'getSecret'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#'
    Entry Title       = 'Get a Secret'
    Entry Description = 'Retrieve a secret from storage.  The result contains any passwords or
other restricted information verbatim as well as a temporary credential
based on the scopes specified when the secret was created.

It is important that this secret is deleted by the consumer (`removeSecret`),
or else the secrets will be visible to any process which can access the
user data associated with the instance.'
Entry 9     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/instance-started/<instanceId>/<token>'
    Entry Args        = '[instanceId token]'
    Entry Query        = '[]'
    Entry Name        = 'instanceStarted'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Report an instance starting'
    Entry Description = 'An instance will report in by giving its instance id as well
as its security token.  The token is given and checked to ensure
that it matches a real token that exists to ensure that random
machines do not check in.  We could generate a different token
but that seems like overkill'
Entry 10    =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/secret/<token>'
    Entry Args        = '[token]'
    Entry Query        = '[]'
    Entry Name        = 'removeSecret'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Remove a Secret'
    Entry Description = 'Remove a secret.  After this call, a call to `getSecret` with the given
token will return no information.

It is very important that the consumer of a 
secret delete the secret from storage before handing over control
to untrusted processes to prevent credential and/or secret leakage.'
Entry 11    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/worker-type/<workerType>/launch-specifications'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'getLaunchSpecs'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'Any of:
- aws-provisioner:view-worker-type:<workerType>
- aws-provisioner:manage-worker-type:<workerType>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/aws-provisioner/v1/get-launch-specs-response.json#'
    Entry Title       = 'Get All Launch Specifications for WorkerType'
    Entry Description = 'This method returns a preview of all possible launch specifications
that this worker type definition could submit to EC2.  It is used to
test worker types, nothing more

**This API end-point is experimental and may be subject to change without warning.**'
Entry 12    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/state/<workerType>'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'state'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Get AWS State for a worker type'
    Entry Description = 'Return the state of a given workertype as stored by the provisioner. 
This state is stored as three lists: 1 for running instances, 1 for
pending requests.  The `summary` property contains an updated summary
similar to that returned from `listWorkerTypeSummaries`.'
Entry 13    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/backend-status'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'backendStatus'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/aws-provisioner/v1/backend-status-response.json#'
    Entry Title       = 'Backend Status'
    Entry Description = 'This endpoint is used to show when the last time the provisioner
has checked in.  A check in is done through the deadman's snitch
api.  It is done at the conclusion of a provisioning iteration
and used to tell if the background provisioning process is still
running.

**Warning** this api end-point is **not stable**.'
Entry 14    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/aws-provisioner/v1/backend-status-response.json#
===============================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/backend-status-response.json#
TYPE_NAME: BackendStatusResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Backend Status Response
id: http://schemas.taskcluster.net/aws-provisioner/v1/backend-status-response.json#
properties:
  MemberNames:
    lastCheckedIn: lastCheckedIn
    status: status
  Properties:
    lastCheckedIn:
      IS_REQUIRED: true
      PROPERTY_NAME: lastCheckedIn
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/backend-status-response.json#/properties/lastCheckedIn
      TYPE_NAME: LastCheckedIn
      description: |
        A date when the provisioner backend process last completed an iteration.
        This does not imply success, rather it is to make sure that the process
        is alive
      format: date-time
      type: string
    status:
      IS_REQUIRED: true
      PROPERTY_NAME: status
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/backend-status-response.json#/properties/status
      TYPE_NAME: Status
      description: |
        A string from Deadman's Snitch which describes the status.  See
        https://deadmanssnitch.com/docs/api/v1#listing-your-snitches for an
        explanation of this value
      type: string
  SortedPropertyNames:
  - lastCheckedIn
  - status
  SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/backend-status-response.json#/properties
required:
- status
- lastCheckedIn
title: Backend Status Response
type: object


http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#
=============================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#
TYPE_NAME: GetSecretRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A Secret
id: http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#
properties:
  MemberNames:
    expiration: expiration
    scopes: scopes
    secrets: secrets
    token: token
    workerType: workerType
  Properties:
    expiration:
      IS_REQUIRED: true
      PROPERTY_NAME: expiration
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#/properties/expiration
      TYPE_NAME: Expiration
      description: |
        The date at which the secret is no longer guaranteed to exist
      format: date-time
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#/properties/scopes
      TYPE_NAME: Scopes
      description: |
        List of strings which are scopes for temporary credentials to give
        to the worker through the secret system.  Scopes must be composed of
        printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        pattern: ^[ -~]*$
        type: string
      type: array
    secrets:
      IS_REQUIRED: true
      PROPERTY_NAME: secrets
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#/properties/secrets
      TYPE_NAME: Secrets
      description: |
        Free form object which contains the secrets stored
      type: object
    token:
      IS_REQUIRED: true
      PROPERTY_NAME: token
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#/properties/token
      TYPE_NAME: Token
      description: |
        A Slug ID which is the uniquely addressable token to access this
        set of secrets
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#/properties/workerType
      TYPE_NAME: WorkerType
      description: |
        A string describing what the secret will be used for
      type: string
  SortedPropertyNames:
  - expiration
  - scopes
  - secrets
  - token
  - workerType
  SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/create-secret-request.json#/properties
required:
- workerType
- secrets
- scopes
- token
- expiration
title: Get Secret Request
type: object


http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#
==================================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#
TYPE_NAME: CreateWorkerTypeRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A worker launchSpecification and required metadata
id: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#
properties:
  MemberNames:
    availabilityZones: availabilityZones
    canUseOndemand: canUseOndemand
    canUseSpot: canUseSpot
    description: description
    instanceTypes: instanceTypes
    launchSpec: launchSpec
    maxCapacity: maxCapacity
    maxPrice: maxPrice
    minCapacity: minCapacity
    minPrice: minPrice
    owner: owner
    regions: regions
    scalingRatio: scalingRatio
    scopes: scopes
    secrets: secrets
    userData: userData
  Properties:
    availabilityZones:
      IS_REQUIRED: false
      PROPERTY_NAME: availabilityZones
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/availabilityZones
      TYPE_NAME: AvailabilityZones
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: availabilityZones entry
        SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/availabilityZones/items
        TYPE_NAME: AvailabilityZonesEntry
        additionalProperties:
          Boolean: false
          Properties: null
        description: Availability zone configuration
        properties:
          MemberNames:
            availabilityZone: availabilityZone
            launchSpec: launchSpec
            region: region
            secrets: secrets
            userData: userData
          Properties:
            availabilityZone:
              IS_REQUIRED: true
              PROPERTY_NAME: availabilityZone
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/availabilityZones/items/properties/availabilityZone
              TYPE_NAME: AvailabilityZone
              description: |
                The AWS availability zone being configured.  Example: eu-central-1b
              type: string
            launchSpec:
              IS_REQUIRED: true
              PROPERTY_NAME: launchSpec
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/availabilityZones/items/properties/launchSpec
              TYPE_NAME: LaunchSpec
              description: |
                LaunchSpecification entries unique to this AZ
              type: object
            region:
              IS_REQUIRED: true
              PROPERTY_NAME: region
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/availabilityZones/items/properties/region
              TYPE_NAME: Region
              description: |
                The AWS region containing this availability zone.  Example: eu-central-1
              type: string
            secrets:
              IS_REQUIRED: false
              PROPERTY_NAME: secrets
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/availabilityZones/items/properties/secrets
              TYPE_NAME: Secrets
              default: {}
              description: |
                Static Secrets unique to this AZ
              type: object
            userData:
              IS_REQUIRED: false
              PROPERTY_NAME: userData
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/availabilityZones/items/properties/userData
              TYPE_NAME: UserData
              default: {}
              description: |
                UserData entries unique to this AZ
              type: object
          SortedPropertyNames:
          - availabilityZone
          - launchSpec
          - region
          - secrets
          - userData
          SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/availabilityZones/items/properties
        required:
        - region
        - availabilityZone
        - launchSpec
        type: object
      type: array
    canUseOndemand:
      IS_REQUIRED: false
      PROPERTY_NAME: canUseOndemand
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/canUseOndemand
      TYPE_NAME: CanUseOndemand
      description: |
        True if this worker type is allowed on demand instances.  Currently
        ignored
      type: boolean
    canUseSpot:
      IS_REQUIRED: false
      PROPERTY_NAME: canUseSpot
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/canUseSpot
      TYPE_NAME: CanUseSpot
      description: |
        True if this worker type is allowed spot instances.  Currently ignored
        as all instances are Spot
      type: boolean
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/description
      TYPE_NAME: Description
      description: |
        A string which describes what this image is for and hints on using it
      type: string
    instanceTypes:
      IS_REQUIRED: true
      PROPERTY_NAME: instanceTypes
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes
      TYPE_NAME: InstanceTypes
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: instanceTypes entry
        SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes/items
        TYPE_NAME: InstanceTypesEntry
        additionalProperties:
          Boolean: false
          Properties: null
        description: Instance Type configuration
        properties:
          MemberNames:
            capacity: capacity
            instanceType: instanceType
            launchSpec: launchSpec
            scopes: scopes
            secrets: secrets
            userData: userData
            utility: utility
          Properties:
            capacity:
              IS_REQUIRED: true
              PROPERTY_NAME: capacity
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes/items/properties/capacity
              TYPE_NAME: Capacity
              description: |
                This number represents the number of tasks that this instance type
                is capable of running concurrently.  This is used by the provisioner
                to know how many pending tasks to offset a pending instance of this
                type by
              type: number
            instanceType:
              IS_REQUIRED: true
              PROPERTY_NAME: instanceType
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes/items/properties/instanceType
              TYPE_NAME: InstanceType
              description: |
                InstanceType name for Amazon.
              type: string
            launchSpec:
              IS_REQUIRED: true
              PROPERTY_NAME: launchSpec
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes/items/properties/launchSpec
              TYPE_NAME: LaunchSpec
              description: |
                LaunchSpecification entries unique to this InstanceType
              type: object
            scopes:
              IS_REQUIRED: true
              PROPERTY_NAME: scopes
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes/items/properties/scopes
              TYPE_NAME: Scopes
              description: |
                Scopes which should be included for this InstanceType.  Scopes must
                be composed of printable ASCII characters and spaces.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: scopes entry
                SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes/items/properties/scopes/items
                TYPE_NAME: ScopesEntry
                pattern: ^[ -~]*$
                type: string
              type: array
            secrets:
              IS_REQUIRED: true
              PROPERTY_NAME: secrets
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes/items/properties/secrets
              TYPE_NAME: Secrets
              description: |
                Static Secrets unique to this InstanceType
              type: object
            userData:
              IS_REQUIRED: true
              PROPERTY_NAME: userData
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes/items/properties/userData
              TYPE_NAME: UserData
              description: |
                UserData entries unique to this InstanceType
              type: object
            utility:
              IS_REQUIRED: true
              PROPERTY_NAME: utility
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes/items/properties/utility
              TYPE_NAME: Utility
              description: |
                This number is a relative measure of performance between two instance
                types.  It is multiplied by the spot price from Amazon to figure out
                which instance type is the cheapest one
              type: number
          SortedPropertyNames:
          - capacity
          - instanceType
          - launchSpec
          - scopes
          - secrets
          - userData
          - utility
          SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/instanceTypes/items/properties
        required:
        - instanceType
        - capacity
        - utility
        - launchSpec
        - secrets
        - userData
        - scopes
        type: object
      type: array
    launchSpec:
      IS_REQUIRED: true
      PROPERTY_NAME: launchSpec
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/launchSpec
      TYPE_NAME: LaunchSpec
      description: |
        Launch Specification entries which are used in all regions and all instance types
      type: object
    maxCapacity:
      IS_REQUIRED: true
      PROPERTY_NAME: maxCapacity
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/maxCapacity
      TYPE_NAME: MaxCapacity
      description: |
        Maximum number of capacity units to be provisioned.
      type: number
    maxPrice:
      IS_REQUIRED: true
      PROPERTY_NAME: maxPrice
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/maxPrice
      TYPE_NAME: MaxPrice
      description: |
        Maximum price we'll pay.  Like minPrice, this takes into account the
        utility factor when figuring out what the actual SpotPrice submitted
        to Amazon will be
      type: number
    minCapacity:
      IS_REQUIRED: false
      PROPERTY_NAME: minCapacity
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/minCapacity
      TYPE_NAME: MinCapacity
      description: |
        Minimum number of capacity units to be provisioned.  A capacity unit
        is an abstract unit of capacity, where one capacity unit is roughly
        one task which should be taken off the queue
      type: number
    minPrice:
      IS_REQUIRED: true
      PROPERTY_NAME: minPrice
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/minPrice
      TYPE_NAME: MinPrice
      description: |
        Minimum price to pay for an instance.  A Price is considered to be the
        Amazon Spot Price multiplied by the utility factor of the InstantType
        as specified in the instanceTypes list.  For example, if the minPrice
        is set to $0.5 and the utility factor is 2, the actual minimum bid
        used will be $0.25
      type: number
    owner:
      IS_REQUIRED: true
      PROPERTY_NAME: owner
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/owner
      TYPE_NAME: Owner
      description: |
        A string which identifies the owner of this worker type
      type: string
    regions:
      IS_REQUIRED: true
      PROPERTY_NAME: regions
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions
      TYPE_NAME: Regions
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: regions entry
        SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions/items
        TYPE_NAME: RegionsEntry
        additionalProperties:
          Boolean: false
          Properties: null
        description: Region configuration
        properties:
          MemberNames:
            launchSpec: launchSpec
            region: region
            scopes: scopes
            secrets: secrets
            userData: userData
          Properties:
            launchSpec:
              IS_REQUIRED: true
              PROPERTY_NAME: launchSpec
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions/items/properties/launchSpec
              TYPE_NAME: LaunchSpec
              additionalProperties:
                Boolean: true
                Properties: null
              description: |
                LaunchSpecification entries unique to this Region
              properties:
                MemberNames:
                  ImageId: ImageId
                Properties:
                  ImageId:
                    IS_REQUIRED: true
                    PROPERTY_NAME: ImageId
                    SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions/items/properties/launchSpec/properties/ImageId
                    TYPE_NAME: ImageId
                    description: Per-region AMI ImageId
                    type: string
                SortedPropertyNames:
                - ImageId
                SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions/items/properties/launchSpec/properties
              required:
              - ImageId
              type: object
            region:
              IS_REQUIRED: true
              PROPERTY_NAME: region
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions/items/properties/region
              TYPE_NAME: Region
              description: |
                The Amazon AWS Region being configured.  Example: us-west-1
              enum:
              - us-west-2
              - us-east-1
              - us-east-2
              - us-west-1
              - eu-central-1
              type: string
            scopes:
              IS_REQUIRED: true
              PROPERTY_NAME: scopes
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions/items/properties/scopes
              TYPE_NAME: Scopes
              description: |
                Scopes which should be included for this Region.  Scopes must be
                composed of printable ASCII characters and spaces.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: scopes entry
                SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions/items/properties/scopes/items
                TYPE_NAME: ScopesEntry
                pattern: ^[ -~]*$
                type: string
              type: array
            secrets:
              IS_REQUIRED: true
              PROPERTY_NAME: secrets
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions/items/properties/secrets
              TYPE_NAME: Secrets
              description: |
                Static Secrets unique to this Region
              type: object
            userData:
              IS_REQUIRED: true
              PROPERTY_NAME: userData
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions/items/properties/userData
              TYPE_NAME: UserData
              description: |
                UserData entries unique to this Region
              type: object
          SortedPropertyNames:
          - launchSpec
          - region
          - scopes
          - secrets
          - userData
          SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/regions/items/properties
        required:
        - region
        - launchSpec
        - secrets
        - userData
        - scopes
        type: object
      type: array
    scalingRatio:
      IS_REQUIRED: true
      PROPERTY_NAME: scalingRatio
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/scalingRatio
      TYPE_NAME: ScalingRatio
      description: |
        A scaling ratio of `0.2` means that the provisioner will attempt to keep
        the number of pending tasks around 20% of the provisioned capacity.
        This results in pending tasks waiting 20% of the average task execution
        time before starting to run.
        A higher scaling ratio often results in better utilization and longer
        waiting times. For workerTypes running long tasks a short scaling ratio
        may be preferred, but for workerTypes running quick tasks a higher scaling
        ratio may increase utilization without major delays.
        If using a scaling ratio of 0, the provisioner will attempt to keep the
        capacity of pending spot requests equal to the number of pending tasks.
      type: number
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/scopes
      TYPE_NAME: Scopes
      description: |
        Scopes to issue credentials to for all regions Scopes must be composed of
        printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        pattern: ^[ -~]*$
        type: string
      type: array
    secrets:
      IS_REQUIRED: true
      PROPERTY_NAME: secrets
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/secrets
      TYPE_NAME: Secrets
      description: |
        Static secrets entries which are used in all regions and all instance types
      type: object
    userData:
      IS_REQUIRED: true
      PROPERTY_NAME: userData
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties/userData
      TYPE_NAME: UserData
      description: |
        UserData entries which are used in all regions and all instance types
      type: object
  SortedPropertyNames:
  - availabilityZones
  - canUseOndemand
  - canUseSpot
  - description
  - instanceTypes
  - launchSpec
  - maxCapacity
  - maxPrice
  - minCapacity
  - minPrice
  - owner
  - regions
  - scalingRatio
  - scopes
  - secrets
  - userData
  SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/create-worker-type-request.json#/properties
required:
- launchSpec
- userData
- secrets
- scopes
- maxCapacity
- scalingRatio
- minPrice
- maxPrice
- instanceTypes
- regions
- description
- owner
title: Create Worker Type Request
type: object


http://schemas.taskcluster.net/aws-provisioner/v1/get-launch-specs-response.json#
=================================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-launch-specs-response.json#
TYPE_NAME: Object
description: |
  All of the launch specifications for a worker type
id: http://schemas.taskcluster.net/aws-provisioner/v1/get-launch-specs-response.json#
title: Get All Launch Specs Response
type: object


http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#
===========================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#
TYPE_NAME: GetSecretResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Secrets from the provisioner
id: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#
properties:
  MemberNames:
    credentials: credentials
    data: data
    scopes: scopes
  Properties:
    credentials:
      IS_REQUIRED: true
      PROPERTY_NAME: credentials
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#/properties/credentials
      TYPE_NAME: Credentials
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Generated Temporary credentials from the Provisioner
      properties:
        MemberNames:
          accessToken: accessToken
          certificate: certificate
          clientId: clientId
        Properties:
          accessToken:
            IS_REQUIRED: true
            PROPERTY_NAME: accessToken
            SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#/properties/credentials/properties/accessToken
            TYPE_NAME: AccessToken
            type: string
          certificate:
            IS_REQUIRED: true
            PROPERTY_NAME: certificate
            SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#/properties/credentials/properties/certificate
            TYPE_NAME: Certificate
            type: string
          clientId:
            IS_REQUIRED: true
            PROPERTY_NAME: clientId
            SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#/properties/credentials/properties/clientId
            TYPE_NAME: ClientId
            type: string
        SortedPropertyNames:
        - accessToken
        - certificate
        - clientId
        SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#/properties/credentials/properties
      required:
      - clientId
      - accessToken
      - certificate
      type: object
    data:
      IS_REQUIRED: true
      PROPERTY_NAME: data
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#/properties/data
      TYPE_NAME: Data
      description: |
        Free-form object which contains secrets from the worker type definition
      type: object
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#/properties/scopes
      TYPE_NAME: Scopes
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        type: string
      type: array
  SortedPropertyNames:
  - credentials
  - data
  - scopes
  SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/get-secret-response.json#/properties
required:
- data
- credentials
- scopes
title: Get Secret Response
type: object


http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-last-modified.json#
=====================================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-last-modified.json#
TYPE_NAME: GetWorkerTypeResponse1
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Get the last modified date of a workerType
id: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-last-modified.json#
properties:
  MemberNames:
    lastModified: lastModified
    workerType: workerType
  Properties:
    lastModified:
      IS_REQUIRED: true
      PROPERTY_NAME: lastModified
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-last-modified.json#/properties/lastModified
      TYPE_NAME: LastModified
      description: |
        ISO Date string (e.g. new Date().toISOString()) which represents the time
        when this worker type definition was last altered (inclusive of creation)
      format: date-time
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-last-modified.json#/properties/workerType
      TYPE_NAME: WorkerType
      description: |
        The ID of the workerType
      pattern: ^[A-Za-z0-9+/=_-]{1,22}$
      type: string
  SortedPropertyNames:
  - lastModified
  - workerType
  SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-last-modified.json#/properties
required:
- workerType
- lastModified
title: Get Worker Type Response
type: object


http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#
================================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#
TYPE_NAME: GetWorkerTypeResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A worker launchSpecification and required metadata
id: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#
properties:
  MemberNames:
    availabilityZones: availabilityZones
    canUseOndemand: canUseOndemand
    canUseSpot: canUseSpot
    description: description
    instanceTypes: instanceTypes
    lastModified: lastModified
    launchSpec: launchSpec
    maxCapacity: maxCapacity
    maxPrice: maxPrice
    minCapacity: minCapacity
    minPrice: minPrice
    owner: owner
    regions: regions
    scalingRatio: scalingRatio
    scopes: scopes
    secrets: secrets
    userData: userData
    workerType: workerType
  Properties:
    availabilityZones:
      IS_REQUIRED: false
      PROPERTY_NAME: availabilityZones
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/availabilityZones
      TYPE_NAME: AvailabilityZones
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: availabilityZones entry
        SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/availabilityZones/items
        TYPE_NAME: AvailabilityZonesEntry
        additionalProperties:
          Boolean: false
          Properties: null
        description: Availability zone configuration
        properties:
          MemberNames:
            availabilityZone: availabilityZone
            launchSpec: launchSpec
            region: region
            secrets: secrets
            userData: userData
          Properties:
            availabilityZone:
              IS_REQUIRED: true
              PROPERTY_NAME: availabilityZone
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/availabilityZones/items/properties/availabilityZone
              TYPE_NAME: AvailabilityZone
              description: |
                The AWS availability zone being configured.  Example: eu-central-1b
              type: string
            launchSpec:
              IS_REQUIRED: true
              PROPERTY_NAME: launchSpec
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/availabilityZones/items/properties/launchSpec
              TYPE_NAME: LaunchSpec
              description: |
                LaunchSpecification entries unique to this AZ
              type: object
            region:
              IS_REQUIRED: true
              PROPERTY_NAME: region
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/availabilityZones/items/properties/region
              TYPE_NAME: Region
              description: |
                The AWS region containing this availability zone.  Example: eu-central-1
              type: string
            secrets:
              IS_REQUIRED: false
              PROPERTY_NAME: secrets
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/availabilityZones/items/properties/secrets
              TYPE_NAME: Secrets
              default: {}
              description: |
                Static Secrets unique to this AZ
              type: object
            userData:
              IS_REQUIRED: false
              PROPERTY_NAME: userData
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/availabilityZones/items/properties/userData
              TYPE_NAME: UserData
              default: {}
              description: |
                UserData entries unique to this AZ
              type: object
          SortedPropertyNames:
          - availabilityZone
          - launchSpec
          - region
          - secrets
          - userData
          SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/availabilityZones/items/properties
        required:
        - availabilityZone
        - region
        - launchSpec
        type: object
      type: array
    canUseOndemand:
      IS_REQUIRED: false
      PROPERTY_NAME: canUseOndemand
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/canUseOndemand
      TYPE_NAME: CanUseOndemand
      description: |
        True if this worker type is allowed on demand instances.  Currently
        ignored
      type: boolean
    canUseSpot:
      IS_REQUIRED: false
      PROPERTY_NAME: canUseSpot
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/canUseSpot
      TYPE_NAME: CanUseSpot
      description: |
        True if this worker type is allowed spot instances.  Currently ignored
        as all instances are Spot
      type: boolean
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/description
      TYPE_NAME: Description
      description: |
        A string which describes what this image is for and hints on using it
      type: string
    instanceTypes:
      IS_REQUIRED: true
      PROPERTY_NAME: instanceTypes
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes
      TYPE_NAME: InstanceTypes
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: instanceTypes entry
        SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes/items
        TYPE_NAME: InstanceTypesEntry
        additionalProperties:
          Boolean: false
          Properties: null
        description: Instance Type configuration
        properties:
          MemberNames:
            capacity: capacity
            instanceType: instanceType
            launchSpec: launchSpec
            scopes: scopes
            secrets: secrets
            userData: userData
            utility: utility
          Properties:
            capacity:
              IS_REQUIRED: true
              PROPERTY_NAME: capacity
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes/items/properties/capacity
              TYPE_NAME: Capacity
              description: |
                This number represents the number of tasks that this instance type
                is capable of running concurrently.  This is used by the provisioner
                to know how many pending tasks to offset a pending instance of this
                type by
              type: number
            instanceType:
              IS_REQUIRED: true
              PROPERTY_NAME: instanceType
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes/items/properties/instanceType
              TYPE_NAME: InstanceType
              description: |
                InstanceType name for Amazon.
              type: string
            launchSpec:
              IS_REQUIRED: true
              PROPERTY_NAME: launchSpec
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes/items/properties/launchSpec
              TYPE_NAME: LaunchSpec
              description: |
                LaunchSpecification entries unique to this InstanceType
              type: object
            scopes:
              IS_REQUIRED: true
              PROPERTY_NAME: scopes
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes/items/properties/scopes
              TYPE_NAME: Scopes
              description: |
                Scopes which should be included for this InstanceType.  Scopes must
                be composed of printable ASCII characters and spaces.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: scopes entry
                SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes/items/properties/scopes/items
                TYPE_NAME: ScopesEntry
                pattern: ^[ -~]*$
                type: string
              type: array
            secrets:
              IS_REQUIRED: true
              PROPERTY_NAME: secrets
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes/items/properties/secrets
              TYPE_NAME: Secrets
              description: |
                Static Secrets unique to this InstanceType
              type: object
            userData:
              IS_REQUIRED: true
              PROPERTY_NAME: userData
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes/items/properties/userData
              TYPE_NAME: UserData
              description: |
                UserData entries unique to this InstanceType
              type: object
            utility:
              IS_REQUIRED: true
              PROPERTY_NAME: utility
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes/items/properties/utility
              TYPE_NAME: Utility
              description: |
                This number is a relative measure of performance between two instance
                types.  It is multiplied by the spot price from Amazon to figure out
                which instance type is the cheapest one
              type: number
          SortedPropertyNames:
          - capacity
          - instanceType
          - launchSpec
          - scopes
          - secrets
          - userData
          - utility
          SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/instanceTypes/items/properties
        required:
        - instanceType
        - capacity
        - utility
        - launchSpec
        - secrets
        - userData
        - scopes
        type: object
      type: array
    lastModified:
      IS_REQUIRED: true
      PROPERTY_NAME: lastModified
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/lastModified
      TYPE_NAME: LastModified
      description: |
        ISO Date string (e.g. new Date().toISOString()) which represents the time
        when this worker type definition was last altered (inclusive of creation)
      format: date-time
      type: string
    launchSpec:
      IS_REQUIRED: true
      PROPERTY_NAME: launchSpec
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/launchSpec
      TYPE_NAME: LaunchSpec
      description: |
        Launch Specification entries which are used in all regions and all instance types
      type: object
    maxCapacity:
      IS_REQUIRED: true
      PROPERTY_NAME: maxCapacity
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/maxCapacity
      TYPE_NAME: MaxCapacity
      description: |
        Maximum number of capacity units to be provisioned.
      type: number
    maxPrice:
      IS_REQUIRED: true
      PROPERTY_NAME: maxPrice
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/maxPrice
      TYPE_NAME: MaxPrice
      description: |
        Maximum price we'll pay.  Like minPrice, this takes into account the
        utility factor when figuring out what the actual SpotPrice submitted
        to Amazon will be
      type: number
    minCapacity:
      IS_REQUIRED: true
      PROPERTY_NAME: minCapacity
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/minCapacity
      TYPE_NAME: MinCapacity
      description: |
        Minimum number of capacity units to be provisioned.  A capacity unit
        is an abstract unit of capacity, where one capacity unit is roughly
        one task which should be taken off the queue
      type: number
    minPrice:
      IS_REQUIRED: true
      PROPERTY_NAME: minPrice
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/minPrice
      TYPE_NAME: MinPrice
      description: |
        Minimum price to pay for an instance.  A Price is considered to be the
        Amazon Spot Price multiplied by the utility factor of the InstantType
        as specified in the instanceTypes list.  For example, if the minPrice
        is set to $0.5 and the utility factor is 2, the actual minimum bid
        used will be $0.25
      type: number
    owner:
      IS_REQUIRED: true
      PROPERTY_NAME: owner
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/owner
      TYPE_NAME: Owner
      description: |
        A string which identifies the owner of this worker type
      type: string
    regions:
      IS_REQUIRED: true
      PROPERTY_NAME: regions
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions
      TYPE_NAME: Regions
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: regions entry
        SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions/items
        TYPE_NAME: RegionsEntry
        additionalProperties:
          Boolean: false
          Properties: null
        description: Region configuration
        properties:
          MemberNames:
            launchSpec: launchSpec
            region: region
            scopes: scopes
            secrets: secrets
            userData: userData
          Properties:
            launchSpec:
              IS_REQUIRED: true
              PROPERTY_NAME: launchSpec
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions/items/properties/launchSpec
              TYPE_NAME: LaunchSpec
              additionalProperties:
                Boolean: true
                Properties: null
              description: |
                LaunchSpecification entries unique to this Region
              properties:
                MemberNames:
                  ImageId: ImageId
                Properties:
                  ImageId:
                    IS_REQUIRED: true
                    PROPERTY_NAME: ImageId
                    SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions/items/properties/launchSpec/properties/ImageId
                    TYPE_NAME: ImageId
                    description: Per-region AMI ImageId
                    type: string
                SortedPropertyNames:
                - ImageId
                SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions/items/properties/launchSpec/properties
              required:
              - ImageId
              type: object
            region:
              IS_REQUIRED: true
              PROPERTY_NAME: region
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions/items/properties/region
              TYPE_NAME: Region
              description: |
                The Amazon AWS Region being configured.  Example: us-west-1
              type: string
            scopes:
              IS_REQUIRED: true
              PROPERTY_NAME: scopes
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions/items/properties/scopes
              TYPE_NAME: Scopes
              description: |
                Scopes which should be included for this Region.  Scopes must be
                composed of printable ASCII characters and spaces.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: scopes entry
                SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions/items/properties/scopes/items
                TYPE_NAME: ScopesEntry
                pattern: ^[ -~]*$
                type: string
              type: array
            secrets:
              IS_REQUIRED: true
              PROPERTY_NAME: secrets
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions/items/properties/secrets
              TYPE_NAME: Secrets
              description: |
                Static Secrets unique to this Region
              type: object
            userData:
              IS_REQUIRED: true
              PROPERTY_NAME: userData
              SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions/items/properties/userData
              TYPE_NAME: UserData
              description: |
                UserData entries unique to this Region
              type: object
          SortedPropertyNames:
          - launchSpec
          - region
          - scopes
          - secrets
          - userData
          SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/regions/items/properties
        required:
        - region
        - launchSpec
        - secrets
        - userData
        - scopes
        type: object
      type: array
    scalingRatio:
      IS_REQUIRED: true
      PROPERTY_NAME: scalingRatio
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/scalingRatio
      TYPE_NAME: ScalingRatio
      description: |
        A scaling ratio of `0.2` means that the provisioner will attempt to keep
        the number of pending tasks around 20% of the provisioned capacity.
        This results in pending tasks waiting 20% of the average task execution
        time before starting to run.
        A higher scaling ratio often results in better utilization and longer
        waiting times. For workerTypes running long tasks a short scaling ratio
        may be preferred, but for workerTypes running quick tasks a higher scaling
        ratio may increase utilization without major delays.
        If using a scaling ratio of 0, the provisioner will attempt to keep the
        capacity of pending spot requests equal to the number of pending tasks.
      type: number
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/scopes
      TYPE_NAME: Scopes
      description: |
        Scopes to issue credentials to for all regions.  Scopes must be composed
        of printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/scopes/items
        TYPE_NAME: ScopesEntry
        pattern: ^[ -~]*$
        type: string
      type: array
    secrets:
      IS_REQUIRED: true
      PROPERTY_NAME: secrets
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/secrets
      TYPE_NAME: Secrets
      description: |
        Static secrets entries which are used in all regions and all instance types
      type: object
    userData:
      IS_REQUIRED: true
      PROPERTY_NAME: userData
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/userData
      TYPE_NAME: UserData
      description: |
        UserData entries which are used in all regions and all instance types
      type: object
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties/workerType
      TYPE_NAME: WorkerType
      description: |
        The ID of the workerType
      pattern: ^[A-Za-z0-9+/=_-]{1,22}$
      type: string
  SortedPropertyNames:
  - availabilityZones
  - canUseOndemand
  - canUseSpot
  - description
  - instanceTypes
  - lastModified
  - launchSpec
  - maxCapacity
  - maxPrice
  - minCapacity
  - minPrice
  - owner
  - regions
  - scalingRatio
  - scopes
  - secrets
  - userData
  - workerType
  SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/get-worker-type-response.json#/properties
required:
- workerType
- launchSpec
- userData
- secrets
- scopes
- minCapacity
- maxCapacity
- scalingRatio
- minPrice
- maxPrice
- lastModified
- instanceTypes
- regions
- description
- owner
title: Get Worker Type Response
type: object


http://schemas.taskcluster.net/aws-provisioner/v1/list-worker-types-response.json#
==================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/list-worker-types-response.json#
TYPE_NAME: String[]
id: http://schemas.taskcluster.net/aws-provisioner/v1/list-worker-types-response.json#
items:
  IS_REQUIRED: false
  PROPERTY_NAME: ' entry'
  SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/list-worker-types-response.json#/items
  TYPE_NAME: Entry1
  type: string
title: List Worker Types
type: array
uniqueItems: true


http://schemas.taskcluster.net/aws-provisioner/v1/list-worker-types-summaries-response.json#
============================================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/list-worker-types-summaries-response.json#
TYPE_NAME: WorkerTypeSummary[]
id: http://schemas.taskcluster.net/aws-provisioner/v1/list-worker-types-summaries-response.json#
items:
  $ref: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#
  IS_REQUIRED: false
  PROPERTY_NAME: ' entry'
  REF_SUBSCHEMA:
    $schema: http://json-schema.org/draft-04/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#
    TYPE_NAME: WorkerTypeSummary
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      A summary of a worker type's current state, expresed in terms of capacity.
    id: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#
    properties:
      MemberNames:
        maxCapacity: maxCapacity
        minCapacity: minCapacity
        pendingCapacity: pendingCapacity
        requestedCapacity: requestedCapacity
        runningCapacity: runningCapacity
        workerType: workerType
      Properties:
        maxCapacity:
          IS_REQUIRED: true
          PROPERTY_NAME: maxCapacity
          SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/maxCapacity
          TYPE_NAME: MaximumCapacityOfTheWorkerType
          title: Maximum capacity of the workerType
          type: integer
        minCapacity:
          IS_REQUIRED: true
          PROPERTY_NAME: minCapacity
          SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/minCapacity
          TYPE_NAME: MinimumCapacityOfTheWorkerType
          title: Minimum capacity of the workerType
          type: integer
        pendingCapacity:
          IS_REQUIRED: true
          PROPERTY_NAME: pendingCapacity
          SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/pendingCapacity
          TYPE_NAME: TotalPendingCapacity
          title: Total pending capacity
          type: integer
        requestedCapacity:
          IS_REQUIRED: true
          PROPERTY_NAME: requestedCapacity
          SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/requestedCapacity
          TYPE_NAME: TotalRequestedCapacity
          title: Total requested capacity
          type: integer
        runningCapacity:
          IS_REQUIRED: true
          PROPERTY_NAME: runningCapacity
          SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/runningCapacity
          TYPE_NAME: TotalRunningCapacity
          title: Total running capacity
          type: integer
        workerType:
          IS_REQUIRED: true
          PROPERTY_NAME: workerType
          SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/workerType
          TYPE_NAME: WorkerTypeName
          title: Worker type name
          type: string
      SortedPropertyNames:
      - maxCapacity
      - minCapacity
      - pendingCapacity
      - requestedCapacity
      - runningCapacity
      - workerType
      SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties
    required:
    - workerType
    - minCapacity
    - maxCapacity
    - requestedCapacity
    - pendingCapacity
    - runningCapacity
    title: Worker Type Summary
    type: object
  SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/list-worker-types-summaries-response.json#/items
  TYPE_NAME: Entry
title: List Worker Type Summaries Response
type: array
uniqueItems: true


http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#
===========================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#
TYPE_NAME: WorkerTypeSummary
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A summary of a worker type's current state, expresed in terms of capacity.
id: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#
properties:
  MemberNames:
    maxCapacity: maxCapacity
    minCapacity: minCapacity
    pendingCapacity: pendingCapacity
    requestedCapacity: requestedCapacity
    runningCapacity: runningCapacity
    workerType: workerType
  Properties:
    maxCapacity:
      IS_REQUIRED: true
      PROPERTY_NAME: maxCapacity
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/maxCapacity
      TYPE_NAME: MaximumCapacityOfTheWorkerType
      title: Maximum capacity of the workerType
      type: integer
    minCapacity:
      IS_REQUIRED: true
      PROPERTY_NAME: minCapacity
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/minCapacity
      TYPE_NAME: MinimumCapacityOfTheWorkerType
      title: Minimum capacity of the workerType
      type: integer
    pendingCapacity:
      IS_REQUIRED: true
      PROPERTY_NAME: pendingCapacity
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/pendingCapacity
      TYPE_NAME: TotalPendingCapacity
      title: Total pending capacity
      type: integer
    requestedCapacity:
      IS_REQUIRED: true
      PROPERTY_NAME: requestedCapacity
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/requestedCapacity
      TYPE_NAME: TotalRequestedCapacity
      title: Total requested capacity
      type: integer
    runningCapacity:
      IS_REQUIRED: true
      PROPERTY_NAME: runningCapacity
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/runningCapacity
      TYPE_NAME: TotalRunningCapacity
      title: Total running capacity
      type: integer
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties/workerType
      TYPE_NAME: WorkerTypeName
      title: Worker type name
      type: string
  SortedPropertyNames:
  - maxCapacity
  - minCapacity
  - pendingCapacity
  - requestedCapacity
  - runningCapacity
  - workerType
  SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-summary.json#/properties
required:
- workerType
- minCapacity
- maxCapacity
- requestedCapacity
- pendingCapacity
- runningCapacity
title: Worker Type Summary
type: object


http://references.taskcluster.net/aws-provisioner/v1/exchanges.json
===================================================================
Version         = '0'
Title           = 'AWS Provisioner Pulse Exchanges'
Description     = 'Exchanges from the provisioner... more docs later'
Exchange Prefix = 'exchange/taskcluster-aws-provisioner/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'worker-type-created'
    Entry Name        = 'workerTypeCreated'
    Entry Title       = 'WorkerType Created Message'
    Entry Description = 'When a new `workerType` is created a message will be published to this
exchange.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'workerType'
        Element Summary   = 'WorkerType that this message concerns.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#'
Entry 1     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'worker-type-updated'
    Entry Name        = 'workerTypeUpdated'
    Entry Title       = 'WorkerType Updated Message'
    Entry Description = 'When a `workerType` is updated a message will be published to this
exchange.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'workerType'
        Element Summary   = 'WorkerType that this message concerns.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#'
Entry 2     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'worker-type-removed'
    Entry Name        = 'workerTypeRemoved'
    Entry Title       = 'WorkerType Removed Message'
    Entry Description = 'When a `workerType` is removed a message will be published to this
exchange.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'workerType'
        Element Summary   = 'WorkerType that this message concerns.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#'


http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#
===========================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#
TYPE_NAME: WorkerTypeMessage
additionalProperties:
  Boolean: false
  Properties: null
description: Message reporting that an action occured to a worker type
id: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#
properties:
  MemberNames:
    version: version
    workerType: workerType
  Properties:
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#/properties/version
      TYPE_NAME: Version
      type: number
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#/properties/workerType
      TYPE_NAME: WorkerType
      description: |
        Name of the worker type which was created
      type: string
  SortedPropertyNames:
  - version
  - workerType
  SourceURL: http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#/properties
required:
- workerType
- version
title: Worker Type Message
type: object


http://references.taskcluster.net/github/v1/api.json
====================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'Taskcluster GitHub API Documentation'
Description = 'The github service, typically available at
`github.taskcluster.net`, is responsible for publishing pulse
messages in response to GitHub events.

This document describes the API end-point for consuming GitHub
web hooks, as well as some useful consumer APIs.

When Github forbids an action, this service returns an HTTP 403
with code ForbiddenByGithub.'
Base URL    = 'https://github.taskcluster.net/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/github'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'githubWebHookConsumer'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Consume GitHub WebHook'
    Entry Description = 'Capture a GitHub event and publish it via pulse, if it's a push,
release or pull request.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/builds'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit organization repository sha]'
    Entry Name        = 'builds'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/github/v1/build-list.json#'
    Entry Title       = 'List of Builds'
    Entry Description = 'A paginated list of builds that have been run in
Taskcluster. Can be filtered on various git-specific
fields.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/repository/<owner>/<repo>/<branch>/badge.svg'
    Entry Args        = '[owner repo branch]'
    Entry Query        = '[]'
    Entry Name        = 'badge'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Latest Build Status Badge'
    Entry Description = 'Checks the status of the latest build of a given branch
and returns corresponding badge svg.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/repository/<owner>/<repo>'
    Entry Args        = '[owner repo]'
    Entry Query        = '[]'
    Entry Name        = 'repository'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/github/v1/repository.json'
    Entry Title       = 'Get Repository Info'
    Entry Description = 'Returns any repository metadata that is
useful within Taskcluster related services.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/repository/<owner>/<repo>/<branch>/latest'
    Entry Args        = '[owner repo branch]'
    Entry Query        = '[]'
    Entry Name        = 'latest'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Latest Status for Branch'
    Entry Description = 'For a given branch of a repository, this will always point
to a status page for the most recent task triggered by that
branch.

Note: This is a redirect rather than a direct link.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/repository/<owner>/<repo>/statuses/<sha>'
    Entry Args        = '[owner repo sha]'
    Entry Query        = '[]'
    Entry Name        = 'createStatus'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'github:create-status:<owner>/<repo>'
    Entry Input       = 'http://schemas.taskcluster.net/github/v1/create-status.json'
    Entry Output      = ''
    Entry Title       = 'Post a status against a given changeset'
    Entry Description = 'For a given changeset (SHA) of a repository, this will attach a "commit status"
on github. These statuses are links displayed next to each revision.
The status is either OK (green check) or FAILURE (red cross), 
made of a custom title and link.'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/repository/<owner>/<repo>/issues/<number>/comments'
    Entry Args        = '[owner repo number]'
    Entry Query        = '[]'
    Entry Name        = 'createComment'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'github:create-comment:<owner>/<repo>'
    Entry Input       = 'http://schemas.taskcluster.net/github/v1/create-comment.json'
    Entry Output      = ''
    Entry Title       = 'Post a comment on a given GitHub Issue or Pull Request'
    Entry Description = 'For a given Issue or Pull Request of a repository, this will write a new message.'
Entry 7     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/github/v1/build-list.json#
=========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#
TYPE_NAME: BuildsResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A paginated list of builds
id: http://schemas.taskcluster.net/github/v1/build-list.json#
properties:
  MemberNames:
    builds: builds
    continuationToken: continuationToken
  Properties:
    builds:
      IS_REQUIRED: true
      PROPERTY_NAME: builds
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds
      TYPE_NAME: Builds
      description: |
        A simple list of builds.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: builds entry
        SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items
        TYPE_NAME: Build
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            created: created
            eventId: eventId
            eventType: eventType
            organization: organization
            repository: repository
            sha: sha
            state: state
            taskGroupId: taskGroupId
            updated: updated
          Properties:
            created:
              IS_REQUIRED: true
              PROPERTY_NAME: created
              SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/created
              TYPE_NAME: Created
              description: |
                The initial creation time of the build. This is when it became pending.
              format: date-time
              type: string
            eventId:
              IS_REQUIRED: true
              PROPERTY_NAME: eventId
              SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/eventId
              TYPE_NAME: EventId
              description: |
                The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
              oneOf:
                Items:
                - IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[0]
                  TYPE_NAME: String
                  description: |
                    The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
                  pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
                  title: Github GUID
                  type: string
                - IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[1]
                  TYPE_NAME: String
                  description: |
                    The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
                  enum:
                  - Unknown
                  title: Unknown Github GUID
                  type: string
                SourceURL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf
              type: string
            eventType:
              IS_REQUIRED: true
              PROPERTY_NAME: eventType
              SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/eventType
              TYPE_NAME: EventType
              description: Type of Github event that triggered the build (i.e. push,
                pull_request.opened).
              type: string
            organization:
              IS_REQUIRED: true
              PROPERTY_NAME: organization
              SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/organization
              TYPE_NAME: Organization
              description: Github organization associated with the build.
              maxLength: 100
              minLength: 1
              pattern: ^([a-zA-Z0-9-_%]*)$
              type: string
            repository:
              IS_REQUIRED: true
              PROPERTY_NAME: repository
              SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/repository
              TYPE_NAME: Repository
              description: Github repository associated with the build.
              maxLength: 100
              minLength: 1
              pattern: ^([a-zA-Z0-9-_%]*)$
              type: string
            sha:
              IS_REQUIRED: true
              PROPERTY_NAME: sha
              SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/sha
              TYPE_NAME: Sha
              description: Github revision associated with the build.
              maxLength: 40
              minLength: 40
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/state
              TYPE_NAME: State
              description: Github status associated with the build.
              enum:
              - pending
              - success
              - error
              - failure
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/taskGroupId
              TYPE_NAME: TaskGroupId
              description: Taskcluster task-group associated with the build.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              type: string
            updated:
              IS_REQUIRED: true
              PROPERTY_NAME: updated
              SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/updated
              TYPE_NAME: Updated
              description: |
                The last updated of the build. If it is done, this is when it finished.
              format: date-time
              type: string
          SortedPropertyNames:
          - created
          - eventId
          - eventType
          - organization
          - repository
          - sha
          - state
          - taskGroupId
          - updated
          SourceURL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties
        required:
        - organization
        - repository
        - sha
        - state
        - taskGroupId
        - eventType
        - eventId
        - created
        - updated
        title: Build
        type: object
      type: array
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: Passed back from Azure to allow us to page through long result
        sets.
      type: string
  SortedPropertyNames:
  - builds
  - continuationToken
  SourceURL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties
required:
- builds
title: Builds Response
type: object


http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[0]
=============================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[0]
TYPE_NAME: String
description: |
  The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
title: Github GUID
type: string


http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[1]
=============================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[1]
TYPE_NAME: String
description: |
  The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
enum:
- Unknown
title: Unknown Github GUID
type: string


http://schemas.taskcluster.net/github/v1/create-comment.json#
=============================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/github/v1/create-comment.json#
TYPE_NAME: CreateCommentRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Write a new comment on a GitHub Issue or Pull Request.
  Full specification on [GitHub docs](https://developer.github.com/v3/issues/comments/#create-a-comment)
id: http://schemas.taskcluster.net/github/v1/create-comment.json#
properties:
  MemberNames:
    body: body
  Properties:
    body:
      IS_REQUIRED: true
      PROPERTY_NAME: body
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/create-comment.json#/properties/body
      TYPE_NAME: Body
      description: The contents of the comment.
      type: string
  SortedPropertyNames:
  - body
  SourceURL: http://schemas.taskcluster.net/github/v1/create-comment.json#/properties
required:
- body
title: Create Comment Request
type: object


http://schemas.taskcluster.net/github/v1/create-status.json#
============================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/github/v1/create-status.json#
TYPE_NAME: CreateStatusRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Create a commit status on GitHub.
  Full specification on [GitHub docs](https://developer.github.com/v3/repos/statuses/#create-a-status)
id: http://schemas.taskcluster.net/github/v1/create-status.json#
properties:
  MemberNames:
    context: context
    description: description
    state: state
    target_url: target_url
  Properties:
    context:
      IS_REQUIRED: false
      PROPERTY_NAME: context
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/create-status.json#/properties/context
      TYPE_NAME: Context
      description: A string label to differentiate this status from the status of
        other systems.
      type: string
    description:
      IS_REQUIRED: false
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/create-status.json#/properties/description
      TYPE_NAME: Description
      description: A short description of the status.
      type: string
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/create-status.json#/properties/state
      TYPE_NAME: State
      description: The state of the status.
      enum:
      - pending
      - success
      - error
      - failure
      type: string
    target_url:
      IS_REQUIRED: false
      PROPERTY_NAME: target_url
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/create-status.json#/properties/target_url
      TYPE_NAME: Target_url
      description: The target URL to associate with this status. This URL will be
        linked from the GitHub UI to allow users to easily see the 'source' of the
        Status.
      type: string
  SortedPropertyNames:
  - context
  - description
  - state
  - target_url
  SourceURL: http://schemas.taskcluster.net/github/v1/create-status.json#/properties
required:
- state
title: Create Status Request
type: object


http://schemas.taskcluster.net/github/v1/repository.json#
=========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/github/v1/repository.json#
TYPE_NAME: RepositoryResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Any Taskcluster-specific Github repository information.
id: http://schemas.taskcluster.net/github/v1/repository.json#
properties:
  MemberNames:
    installed: installed
  Properties:
    installed:
      IS_REQUIRED: true
      PROPERTY_NAME: installed
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/repository.json#/properties/installed
      TYPE_NAME: Installed
      description: |
        True if integration is installed, False otherwise.
      type: boolean
  SortedPropertyNames:
  - installed
  SourceURL: http://schemas.taskcluster.net/github/v1/repository.json#/properties
required:
- installed
title: Repository Response
type: object


http://references.taskcluster.net/github/v1/exchanges.json
==========================================================
Version         = '0'
Title           = 'Taskcluster-Github Exchanges'
Description     = 'The github service, typically available at
`github.taskcluster.net`, is responsible for publishing a pulse
message for supported github events.

This document describes the exchange offered by the taskcluster
github service'
Exchange Prefix = 'exchange/taskcluster-github/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'pull-request'
    Entry Name        = 'pullRequest'
    Entry Title       = 'GitHub Pull Request Event'
    Entry Description = 'When a GitHub pull request event is posted it will be broadcast on this
exchange with the designated `organization` and `repository`
in the routing-key along with event specific metadata in the payload.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `"primary"` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'organization'
        Element Summary   = 'The GitHub `organization` which had an event. All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'repository'
        Element Summary   = 'The GitHub `repository` which had an event.All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'action'
        Element Summary   = 'The GitHub `action` which triggered an event. See for possible values see the payload actions property.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Entry Schema      = 'http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#'
Entry 1     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'push'
    Entry Name        = 'push'
    Entry Title       = 'GitHub push Event'
    Entry Description = 'When a GitHub push event is posted it will be broadcast on this
exchange with the designated `organization` and `repository`
in the routing-key along with event specific metadata in the payload.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `"primary"` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'organization'
        Element Summary   = 'The GitHub `organization` which had an event. All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'repository'
        Element Summary   = 'The GitHub `repository` which had an event.All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Entry Schema      = 'http://schemas.taskcluster.net/github/v1/github-push-message.json#'
Entry 2     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'release'
    Entry Name        = 'release'
    Entry Title       = 'GitHub release Event'
    Entry Description = 'When a GitHub release event is posted it will be broadcast on this
exchange with the designated `organization` and `repository`
in the routing-key along with event specific metadata in the payload.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `"primary"` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'organization'
        Element Summary   = 'The GitHub `organization` which had an event. All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'repository'
        Element Summary   = 'The GitHub `repository` which had an event.All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Entry Schema      = 'http://schemas.taskcluster.net/github/v1/github-release-message.json#'


http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#
==========================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#
TYPE_NAME: GitHubPullRequestMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a GitHub pull request has occurred
id: http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#
properties:
  MemberNames:
    action: action
    details: details
    eventId: eventId
    installationId: installationId
    organization: organization
    repository: repository
    version: version
  Properties:
    action:
      IS_REQUIRED: true
      PROPERTY_NAME: action
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#/properties/action
      TYPE_NAME: Action
      description: |
        The GitHub `action` which triggered an event.
      enum:
      - assigned
      - unassigned
      - labeled
      - unlabeled
      - opened
      - edited
      - closed
      - reopened
      - synchronize
      - review_requested
      - review_request_removed
    details:
      IS_REQUIRED: false
      PROPERTY_NAME: details
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#/properties/details
      TYPE_NAME: Details
      description: |
        Metadata describing the pull request.
      type: object
    eventId:
      IS_REQUIRED: true
      PROPERTY_NAME: eventId
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#/properties/eventId
      TYPE_NAME: EventId
      description: |
        The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
      pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
      type: string
    installationId:
      IS_REQUIRED: true
      PROPERTY_NAME: installationId
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#/properties/installationId
      TYPE_NAME: InstallationId
      description: |
        The installation which had an event.
      maximum: 10000000000
      minimum: 0
      type: integer
    organization:
      IS_REQUIRED: true
      PROPERTY_NAME: organization
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#/properties/organization
      TYPE_NAME: Organization
      description: |
        The GitHub `organization` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    repository:
      IS_REQUIRED: true
      PROPERTY_NAME: repository
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#/properties/repository
      TYPE_NAME: Repository
      description: |
        The GitHub `repository` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
  SortedPropertyNames:
  - action
  - details
  - eventId
  - installationId
  - organization
  - repository
  - version
  SourceURL: http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#/properties
required:
- version
- organization
- repository
- action
- installationId
- eventId
title: GitHub Pull Request Message
type: object


http://schemas.taskcluster.net/github/v1/github-push-message.json#
==================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-push-message.json#
TYPE_NAME: GitHubPushMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a GitHub push has occurred
id: http://schemas.taskcluster.net/github/v1/github-push-message.json#
properties:
  MemberNames:
    details: details
    eventId: eventId
    installationId: installationId
    organization: organization
    repository: repository
    version: version
  Properties:
    details:
      IS_REQUIRED: false
      PROPERTY_NAME: details
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-push-message.json#/properties/details
      TYPE_NAME: Details
      description: |
        Metadata describing the push.
      type: object
    eventId:
      IS_REQUIRED: true
      PROPERTY_NAME: eventId
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-push-message.json#/properties/eventId
      TYPE_NAME: EventId
      description: |
        The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
      pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
      type: string
    installationId:
      IS_REQUIRED: true
      PROPERTY_NAME: installationId
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-push-message.json#/properties/installationId
      TYPE_NAME: InstallationId
      description: |
        The installation which had an event.
      maxLength: 10000000000
      minLength: 0
      type: integer
    organization:
      IS_REQUIRED: true
      PROPERTY_NAME: organization
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-push-message.json#/properties/organization
      TYPE_NAME: Organization
      description: |
        The GitHub `organization` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    repository:
      IS_REQUIRED: true
      PROPERTY_NAME: repository
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-push-message.json#/properties/repository
      TYPE_NAME: Repository
      description: |
        The GitHub `repository` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-push-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
  SortedPropertyNames:
  - details
  - eventId
  - installationId
  - organization
  - repository
  - version
  SourceURL: http://schemas.taskcluster.net/github/v1/github-push-message.json#/properties
required:
- version
- organization
- repository
- installationId
- eventId
title: GitHub Push Message
type: object


http://schemas.taskcluster.net/github/v1/github-release-message.json#
=====================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-release-message.json#
TYPE_NAME: GitHubReleaseMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a GitHub release has occurred
id: http://schemas.taskcluster.net/github/v1/github-release-message.json#
properties:
  MemberNames:
    details: details
    eventId: eventId
    installationId: installationId
    organization: organization
    repository: repository
    version: version
  Properties:
    details:
      IS_REQUIRED: false
      PROPERTY_NAME: details
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-release-message.json#/properties/details
      TYPE_NAME: Details
      description: |
        Metadata describing the release.
      type: object
    eventId:
      IS_REQUIRED: true
      PROPERTY_NAME: eventId
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-release-message.json#/properties/eventId
      TYPE_NAME: EventId
      description: |
        The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
      pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
      type: string
    installationId:
      IS_REQUIRED: true
      PROPERTY_NAME: installationId
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-release-message.json#/properties/installationId
      TYPE_NAME: InstallationId
      description: |
        The installation which had an event.
      maximum: 10000000000
      minimum: 0
      type: integer
    organization:
      IS_REQUIRED: true
      PROPERTY_NAME: organization
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-release-message.json#/properties/organization
      TYPE_NAME: Organization
      description: |
        The GitHub `organization` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    repository:
      IS_REQUIRED: true
      PROPERTY_NAME: repository
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-release-message.json#/properties/repository
      TYPE_NAME: Repository
      description: |
        The GitHub `repository` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/github/v1/github-release-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
  SortedPropertyNames:
  - details
  - eventId
  - installationId
  - organization
  - repository
  - version
  SourceURL: http://schemas.taskcluster.net/github/v1/github-release-message.json#/properties
required:
- version
- organization
- repository
- installationId
- eventId
title: GitHub Release Message
type: object


http://references.taskcluster.net/hooks/v1/api.json
===================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'Hooks API Documentation'
Description = 'Hooks are a mechanism for creating tasks in response to events.

Hooks are identified with a `hookGroupId` and a `hookId`.

When an event occurs, the resulting task is automatically created.  The
task is created using the scope `assume:hook-id:<hookGroupId>/<hookId>`,
which must have scopes to make the createTask call, including satisfying all
scopes in `task.scopes`.  The new task has a `taskGroupId` equal to its
`taskId`, as is the convention for decision tasks.

Hooks can have a "schedule" indicating specific times that new tasks should
be created.  Each schedule is in a simple cron format, per 
https://www.npmjs.com/package/cron-parser.  For example:
 * `['0 0 1 * * *']` -- daily at 1:00 UTC
 * `['0 0 9,21 * * 1-5', '0 0 12 * * 0,6']` -- weekdays at 9:00 and 21:00 UTC, weekends at noon

The task definition is used as a JSON-e template, with a context depending on how it is fired.  See
https://docs.taskcluster.net/reference/core/taskcluster-hooks/docs/firing-hooks
for more information.'
Base URL    = 'https://hooks.taskcluster.net/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'listHookGroups'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/list-hook-groups-response.json'
    Entry Title       = 'List hook groups'
    Entry Description = 'This endpoint will return a list of all hook groups with at least one hook.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks/<hookGroupId>'
    Entry Args        = '[hookGroupId]'
    Entry Query        = '[]'
    Entry Name        = 'listHooks'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/list-hooks-response.json'
    Entry Title       = 'List hooks in a given group'
    Entry Description = 'This endpoint will return a list of all the hook definitions within a
given hook group.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'hook'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/hook-definition.json'
    Entry Title       = 'Get hook definition'
    Entry Description = 'This endpoint will return the hook definition for the given `hookGroupId`
and hookId.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/status'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'getHookStatus'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/hook-status.json'
    Entry Title       = 'Get hook status'
    Entry Description = 'This endpoint will return the current status of the hook.  This represents a
snapshot in time and may vary from one call to the next.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/schedule'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'getHookSchedule'
    Entry Stability   = 'deprecated'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/hook-schedule.json'
    Entry Title       = 'Get hook schedule'
    Entry Description = 'This endpoint will return the schedule and next scheduled creation time
for the given hook.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'createHook'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'All of:
* hooks:modify-hook:<hookGroupId>/<hookId>
* assume:hook-id:<hookGroupId>/<hookId>'
    Entry Input       = 'http://schemas.taskcluster.net/hooks/v1/create-hook-request.json'
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/hook-definition.json'
    Entry Title       = 'Create a hook'
    Entry Description = 'This endpoint will create a new hook.

The caller's credentials must include the role that will be used to
create the task.  That role must satisfy task.scopes as well as the
necessary scopes to add the task to the queue.
'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'updateHook'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'All of:
* hooks:modify-hook:<hookGroupId>/<hookId>
* assume:hook-id:<hookGroupId>/<hookId>'
    Entry Input       = 'http://schemas.taskcluster.net/hooks/v1/create-hook-request.json'
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/hook-definition.json'
    Entry Title       = 'Update a hook'
    Entry Description = 'This endpoint will update an existing hook.  All fields except
`hookGroupId` and `hookId` can be modified.'
Entry 7     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'removeHook'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'hooks:modify-hook:<hookGroupId>/<hookId>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Delete a hook'
    Entry Description = 'This endpoint will remove a hook definition.'
Entry 8     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/trigger'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'triggerHook'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'hooks:trigger-hook:<hookGroupId>/<hookId>'
    Entry Input       = 'http://schemas.taskcluster.net/hooks/v1/trigger-context.json'
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/task-status.json'
    Entry Title       = 'Trigger a hook'
    Entry Description = 'This endpoint will trigger the creation of a task from a hook definition.

The HTTP payload must match the hooks `triggerSchema`.  If it does, it is
provided as the `payload` property of the JSON-e context used to render the
task template.'
Entry 9     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/token'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'getTriggerToken'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'hooks:get-trigger-token:<hookGroupId>/<hookId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/trigger-token-response.json'
    Entry Title       = 'Get a trigger token'
    Entry Description = 'Retrieve a unique secret token for triggering the specified hook. This
token can be deactivated with `resetTriggerToken`.'
Entry 10    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/token'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'resetTriggerToken'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'hooks:reset-trigger-token:<hookGroupId>/<hookId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/trigger-token-response.json'
    Entry Title       = 'Reset a trigger token'
    Entry Description = 'Reset the token for triggering a given hook. This invalidates token that
may have been issued via getTriggerToken with a new token.'
Entry 11    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/trigger/<token>'
    Entry Args        = '[hookGroupId hookId token]'
    Entry Query        = '[]'
    Entry Name        = 'triggerHookWithToken'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = 'http://schemas.taskcluster.net/hooks/v1/trigger-context.json'
    Entry Output      = 'http://schemas.taskcluster.net/hooks/v1/task-status.json'
    Entry Title       = 'Trigger a hook with a token'
    Entry Description = 'This endpoint triggers a defined hook with a valid token.

The HTTP payload must match the hooks `triggerSchema`.  If it does, it is
provided as the `payload` property of the JSON-e context used to render the
task template.'
Entry 12    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#
=================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#
TYPE_NAME: HookCreationRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Definition of a hook that can create tasks at defined times.
id: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#
properties:
  MemberNames:
    deadline: deadline
    expires: expires
    hookGroupId: hookGroupId
    hookId: hookId
    metadata: metadata
    schedule: schedule
    task: task
    triggerSchema: triggerSchema
  Properties:
    deadline:
      IS_REQUIRED: false
      PROPERTY_NAME: deadline
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/deadline
      TYPE_NAME: Deadline
      default: 1 day
      description: |
        Use of this field is deprecated; use `deadline: {$fromNow: ..}` in the task template instead.
      title: Deadline
      type: string
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/expires
      TYPE_NAME: Expiration
      default: 3 months
      description: |
        Use of this field is deprecated; use `expires: {$fromNow: ..}` in the task template instead.
      title: Expiration
      type: string
    hookGroupId:
      IS_REQUIRED: false
      PROPERTY_NAME: hookGroupId
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/hookGroupId
      TYPE_NAME: HookGroupId
      maxLength: 64
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    hookId:
      IS_REQUIRED: false
      PROPERTY_NAME: hookId
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/hookId
      TYPE_NAME: HookId
      maxLength: 64
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    metadata:
      IS_REQUIRED: true
      PROPERTY_NAME: metadata
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/metadata
      TYPE_NAME: Metadata
      additionalProperties:
        Boolean: false
        Properties: null
      properties:
        MemberNames:
          description: description
          emailOnError: emailOnError
          name: name
          owner: owner
        Properties:
          description:
            IS_REQUIRED: true
            PROPERTY_NAME: description
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/metadata/properties/description
            TYPE_NAME: Description
            description: Long-form of the hook's purpose and behavior
            maxLength: 32768
            title: Description
            type: string
          emailOnError:
            IS_REQUIRED: false
            PROPERTY_NAME: emailOnError
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/metadata/properties/emailOnError
            TYPE_NAME: EmailOnError
            default: true
            description: Whether to email the owner on an error creating the task.
            title: Email on error
            type: boolean
          name:
            IS_REQUIRED: true
            PROPERTY_NAME: name
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/metadata/properties/name
            TYPE_NAME: Name
            description: Human readable name of the hook
            maxLength: 255
            title: Name
            type: string
          owner:
            IS_REQUIRED: true
            PROPERTY_NAME: owner
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/metadata/properties/owner
            TYPE_NAME: Owner
            description: Email of the person or group responsible for this hook.
            maxLength: 255
            title: Owner
            type: string
        SortedPropertyNames:
        - description
        - emailOnError
        - name
        - owner
        SourceURL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/metadata/properties
      required:
      - name
      - description
      - owner
      type: object
    schedule:
      IS_REQUIRED: false
      PROPERTY_NAME: schedule
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/schedule
      TYPE_NAME: Schedule
      default: []
      description: |
        Definition of the times at which a hook will result in creation of a task.
        If several patterns are specified, tasks will be created at any time
        specified by one or more patterns.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: schedule entry
        SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/schedule/items
        TYPE_NAME: CronPattern
        description: |
          Cron-like specification for when tasks should be created.  The pattern is
          parsed in a UTC context.
          See [cron-parser on npm](https://www.npmjs.com/package/cron-parser).
          Note that tasks may not be created at exactly the time specified.
        title: Cron Pattern
        type: string
      type: array
      uniqueItems: true
    task:
      IS_REQUIRED: true
      PROPERTY_NAME: task
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/task
      TYPE_NAME: TaskTemplate
      description: |
        Template for the task definition.  This is rendered using [JSON-e](https://taskcluster.github.io/json-e/)
        as described in https://docs.taskcluster.net/reference/core/taskcluster-hooks/docs/firing-hooks to produce
        a task definition that is submitted to the Queue service.
      title: Task Template
      type: object
    triggerSchema:
      IS_REQUIRED: false
      PROPERTY_NAME: triggerSchema
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties/triggerSchema
      TYPE_NAME: TriggerSchema
      default:
        additionalProperties: false
        type: object
      type: object
  SortedPropertyNames:
  - deadline
  - expires
  - hookGroupId
  - hookId
  - metadata
  - schedule
  - task
  - triggerSchema
  SourceURL: http://schemas.taskcluster.net/hooks/v1/create-hook-request.json#/properties
required:
- metadata
- task
title: Hook creation request
type: object


http://schemas.taskcluster.net/hooks/v1/hook-definition.json#
=============================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#
TYPE_NAME: HookDefinition
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Definition of a hook that will create tasks when defined events occur.
id: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#
properties:
  MemberNames:
    deadline: deadline
    expires: expires
    hookGroupId: hookGroupId
    hookId: hookId
    metadata: metadata
    schedule: schedule
    task: task
    triggerSchema: triggerSchema
  Properties:
    deadline:
      IS_REQUIRED: true
      PROPERTY_NAME: deadline
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/deadline
      TYPE_NAME: Deadline
      default: 1 day
      description: |
        Use of this field is deprecated; use `deadline: {$fromNow: ..}` in the task template instead.
      title: Deadline
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/expires
      TYPE_NAME: Expiration
      default: 3 months
      description: |
        Use of this field is deprecated; use `expires: {$fromNow: ..}` in the task template instead.
      title: Expiration
      type: string
    hookGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: hookGroupId
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/hookGroupId
      TYPE_NAME: HookGroupId
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    hookId:
      IS_REQUIRED: true
      PROPERTY_NAME: hookId
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/hookId
      TYPE_NAME: HookId
      maxLength: 255
      type: string
    metadata:
      IS_REQUIRED: true
      PROPERTY_NAME: metadata
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata
      TYPE_NAME: Metadata
      additionalProperties:
        Boolean: false
        Properties: null
      properties:
        MemberNames:
          description: description
          emailOnError: emailOnError
          name: name
          owner: owner
        Properties:
          description:
            IS_REQUIRED: true
            PROPERTY_NAME: description
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata/properties/description
            TYPE_NAME: Description
            description: Long-form of the hook's purpose and behavior
            maxLength: 32768
            title: Description
            type: string
          emailOnError:
            IS_REQUIRED: false
            PROPERTY_NAME: emailOnError
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata/properties/emailOnError
            TYPE_NAME: EmailOnError
            default: true
            description: Whether to email the owner on an error creating the task.
            title: Email on error
            type: boolean
          name:
            IS_REQUIRED: true
            PROPERTY_NAME: name
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata/properties/name
            TYPE_NAME: Name
            description: Human readable name of the hook
            maxLength: 255
            title: Name
            type: string
          owner:
            IS_REQUIRED: true
            PROPERTY_NAME: owner
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata/properties/owner
            TYPE_NAME: Owner
            description: Email of the person or group responsible for this hook.
            maxLength: 255
            title: Owner
            type: string
        SortedPropertyNames:
        - description
        - emailOnError
        - name
        - owner
        SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata/properties
      required:
      - name
      - description
      - owner
      type: object
    schedule:
      IS_REQUIRED: true
      PROPERTY_NAME: schedule
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/schedule
      TYPE_NAME: Schedule
      description: |
        Definition of the times at which a hook will result in creation of a task.
        If several patterns are specified, tasks will be created at any time
        specified by one or more patterns.  Note that tasks may not be created
        at exactly the time specified.
                            {$ref: "http://schemas.taskcluster.net/hooks/v1/schedule.json"}
    task:
      IS_REQUIRED: true
      PROPERTY_NAME: task
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/task
      TYPE_NAME: TaskTemplate
      description: |
        Template for the task definition.  This is rendered using [JSON-e](https://taskcluster.github.io/json-e/)
        as described in https://docs.taskcluster.net/reference/core/taskcluster-hooks/docs/firing-hooks to produce
        a task definition that is submitted to the Queue service.
      title: Task Template
      type: object
    triggerSchema:
      IS_REQUIRED: true
      PROPERTY_NAME: triggerSchema
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/triggerSchema
      TYPE_NAME: TriggerSchema
      type: object
  SortedPropertyNames:
  - deadline
  - expires
  - hookGroupId
  - hookId
  - metadata
  - schedule
  - task
  - triggerSchema
  SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties
required:
- hookGroupId
- hookId
- metadata
- task
- schedule
- expires
- deadline
- triggerSchema
title: Hook definition
type: object


http://schemas.taskcluster.net/hooks/v1/hook-schedule.json#
===========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-schedule.json#
TYPE_NAME: HookScheduleResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A description of when a hook's task will be created, and the next scheduled time
id: http://schemas.taskcluster.net/hooks/v1/hook-schedule.json#
properties:
  MemberNames:
    nextScheduledDate: nextScheduledDate
    schedule: schedule
  Properties:
    nextScheduledDate:
      IS_REQUIRED: false
      PROPERTY_NAME: nextScheduledDate
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-schedule.json#/properties/nextScheduledDate
      TYPE_NAME: NextScheduledDate
      description: |
        The next time this hook's task is scheduled to be created. This property
        is only present if there is a scheduled next time. Some hooks don't have
        any schedules.
      format: date-time
      type: string
    schedule:
      $ref: http://schemas.taskcluster.net/hooks/v1/schedule.json
      IS_REQUIRED: true
      PROPERTY_NAME: schedule
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/schedule.json#
        TYPE_NAME: String[]
        default: []
        description: |
          A list of cron-style definitions to represent a set of moments in (UTC) time.
          If several patterns are specified, a given moment in time represented by
          more than one pattern is considered only to be counted once, in other words
          it is allowed for the cron patterns to overlap; duplicates are redundant.
        id: http://schemas.taskcluster.net/hooks/v1/schedule.json#
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ' entry'
          SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/schedule.json#/items
          TYPE_NAME: CronPattern
          description: |
            Cron-like specification for when tasks should be created.  The pattern is
            parsed in a UTC context.
            See [cron-parser on npm](https://www.npmjs.com/package/cron-parser).
          title: Cron Pattern
          type: string
        title: Schedule
        type: array
        uniqueItems: true
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-schedule.json#/properties/schedule
      TYPE_NAME: Schedule
  SortedPropertyNames:
  - nextScheduledDate
  - schedule
  SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-schedule.json#/properties
required:
- schedule
title: Hook schedule response
type: object


http://schemas.taskcluster.net/hooks/v1/hook-status.json#
=========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#
TYPE_NAME: HookStatusResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A snapshot of the current status of a hook.
id: http://schemas.taskcluster.net/hooks/v1/hook-status.json#
properties:
  MemberNames:
    lastFire: lastFire
    nextScheduledDate: nextScheduledDate
  Properties:
    lastFire:
      IS_REQUIRED: true
      PROPERTY_NAME: lastFire
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire
      TYPE_NAME: LastFire
      description: |
        Information about the last time this hook fired.  This property is only present
        if the hook has fired at least once.
      oneOf:
        Items:
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]
          TYPE_NAME: SuccessfulFire
          additionalProperties:
            Boolean: false
            Properties: null
          description: Information about a successful firing of the hook
          properties:
            MemberNames:
              result: result
              taskId: taskId
              time: time
            Properties:
              result:
                IS_REQUIRED: true
                PROPERTY_NAME: result
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/result
                TYPE_NAME: Result
                enum:
                - success
                type: string
              taskId:
                IS_REQUIRED: true
                PROPERTY_NAME: taskId
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/taskId
                TYPE_NAME: TaskId
                description: The task created
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                type: string
              time:
                IS_REQUIRED: true
                PROPERTY_NAME: time
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/time
                TYPE_NAME: Time
                description: |
                  The time the task was created.  This will not necessarily match `task.created`.
                format: date-time
                type: string
            SortedPropertyNames:
            - result
            - taskId
            - time
            SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties
          required:
          - result
          - taskId
          - time
          title: Successful Fire
          type: object
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]
          TYPE_NAME: FailedFire
          additionalProperties:
            Boolean: false
            Properties: null
          description: Information about an unsuccessful firing of the hook
          properties:
            MemberNames:
              error: error
              result: result
              time: time
            Properties:
              error:
                IS_REQUIRED: true
                PROPERTY_NAME: error
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/error
                TYPE_NAME: Error
                description: |
                  The error that occurred when firing the task.  This is typically,
                  but not always, an API error message.
                type: object
              result:
                IS_REQUIRED: true
                PROPERTY_NAME: result
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/result
                TYPE_NAME: Result
                enum:
                - error
                type: string
              time:
                IS_REQUIRED: true
                PROPERTY_NAME: time
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/time
                TYPE_NAME: Time
                description: |
                  The time the task was created.  This will not necessarily match `task.created`.
                format: date-time
                type: string
            SortedPropertyNames:
            - error
            - result
            - time
            SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties
          required:
          - result
          - error
          - time
          title: Failed Fire
          type: object
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]
          TYPE_NAME: NoFire
          additionalProperties:
            Boolean: false
            Properties: null
          description: Information about no firing of the hook (e.g., a new hook)
          properties:
            MemberNames:
              result: result
            Properties:
              result:
                IS_REQUIRED: true
                PROPERTY_NAME: result
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]/properties/result
                TYPE_NAME: Result
                enum:
                - no-fire
                type: string
            SortedPropertyNames:
            - result
            SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]/properties
          required:
          - result
          title: No Fire
          type: object
        SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf
    nextScheduledDate:
      IS_REQUIRED: false
      PROPERTY_NAME: nextScheduledDate
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/nextScheduledDate
      TYPE_NAME: NextScheduledDate
      description: |
        The next time this hook's task is scheduled to be created. This property
        is only present if there is a scheduled next time. Some hooks don't have
        any schedules.
      format: date-time
      type: string
  SortedPropertyNames:
  - lastFire
  - nextScheduledDate
  SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties
required:
- lastFire
title: Hook status response
type: object


http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]
======================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]
TYPE_NAME: SuccessfulFire
additionalProperties:
  Boolean: false
  Properties: null
description: Information about a successful firing of the hook
properties:
  MemberNames:
    result: result
    taskId: taskId
    time: time
  Properties:
    result:
      IS_REQUIRED: true
      PROPERTY_NAME: result
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/result
      TYPE_NAME: Result
      enum:
      - success
      type: string
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/taskId
      TYPE_NAME: TaskId
      description: The task created
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      type: string
    time:
      IS_REQUIRED: true
      PROPERTY_NAME: time
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/time
      TYPE_NAME: Time
      description: |
        The time the task was created.  This will not necessarily match `task.created`.
      format: date-time
      type: string
  SortedPropertyNames:
  - result
  - taskId
  - time
  SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties
required:
- result
- taskId
- time
title: Successful Fire
type: object


http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]
======================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]
TYPE_NAME: FailedFire
additionalProperties:
  Boolean: false
  Properties: null
description: Information about an unsuccessful firing of the hook
properties:
  MemberNames:
    error: error
    result: result
    time: time
  Properties:
    error:
      IS_REQUIRED: true
      PROPERTY_NAME: error
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/error
      TYPE_NAME: Error
      description: |
        The error that occurred when firing the task.  This is typically,
        but not always, an API error message.
      type: object
    result:
      IS_REQUIRED: true
      PROPERTY_NAME: result
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/result
      TYPE_NAME: Result
      enum:
      - error
      type: string
    time:
      IS_REQUIRED: true
      PROPERTY_NAME: time
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/time
      TYPE_NAME: Time
      description: |
        The time the task was created.  This will not necessarily match `task.created`.
      format: date-time
      type: string
  SortedPropertyNames:
  - error
  - result
  - time
  SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties
required:
- result
- error
- time
title: Failed Fire
type: object


http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]
======================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]
TYPE_NAME: NoFire
additionalProperties:
  Boolean: false
  Properties: null
description: Information about no firing of the hook (e.g., a new hook)
properties:
  MemberNames:
    result: result
  Properties:
    result:
      IS_REQUIRED: true
      PROPERTY_NAME: result
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]/properties/result
      TYPE_NAME: Result
      enum:
      - no-fire
      type: string
  SortedPropertyNames:
  - result
  SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]/properties
required:
- result
title: No Fire
type: object


http://schemas.taskcluster.net/hooks/v1/list-hook-groups-response.json#
=======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/list-hook-groups-response.json#
TYPE_NAME: HookGroups
additionalProperties:
  Boolean: false
  Properties: null
description: |
  List of `hookGroupIds`.
id: http://schemas.taskcluster.net/hooks/v1/list-hook-groups-response.json#
properties:
  MemberNames:
    groups: groups
  Properties:
    groups:
      IS_REQUIRED: true
      PROPERTY_NAME: groups
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/list-hook-groups-response.json#/properties/groups
      TYPE_NAME: Groups
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: groups entry
        SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/list-hook-groups-response.json#/properties/groups/items
        TYPE_NAME: GroupsEntry
        type: string
      title: Groups
      type: array
  SortedPropertyNames:
  - groups
  SourceURL: http://schemas.taskcluster.net/hooks/v1/list-hook-groups-response.json#/properties
required:
- groups
title: Hook groups
type: object


http://schemas.taskcluster.net/hooks/v1/list-hooks-response.json#
=================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/list-hooks-response.json#
TYPE_NAME: HookList
additionalProperties:
  Boolean: false
  Properties: null
description: |
  List of hooks
id: http://schemas.taskcluster.net/hooks/v1/list-hooks-response.json#
properties:
  MemberNames:
    hooks: hooks
  Properties:
    hooks:
      IS_REQUIRED: true
      PROPERTY_NAME: hooks
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/list-hooks-response.json#/properties/hooks
      TYPE_NAME: Hooks
      items:
        $ref: http://schemas.taskcluster.net/hooks/v1/hook-definition.json
        IS_REQUIRED: false
        PROPERTY_NAME: hooks entry
        REF_SUBSCHEMA:
          $schema: http://json-schema.org/draft-06/schema#
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#
          TYPE_NAME: HookDefinition
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Definition of a hook that will create tasks when defined events occur.
          id: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#
          properties:
            MemberNames:
              deadline: deadline
              expires: expires
              hookGroupId: hookGroupId
              hookId: hookId
              metadata: metadata
              schedule: schedule
              task: task
              triggerSchema: triggerSchema
            Properties:
              deadline:
                IS_REQUIRED: true
                PROPERTY_NAME: deadline
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/deadline
                TYPE_NAME: Deadline
                default: 1 day
                description: |
                  Use of this field is deprecated; use `deadline: {$fromNow: ..}` in the task template instead.
                title: Deadline
                type: string
              expires:
                IS_REQUIRED: true
                PROPERTY_NAME: expires
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/expires
                TYPE_NAME: Expiration
                default: 3 months
                description: |
                  Use of this field is deprecated; use `expires: {$fromNow: ..}` in the task template instead.
                title: Expiration
                type: string
              hookGroupId:
                IS_REQUIRED: true
                PROPERTY_NAME: hookGroupId
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/hookGroupId
                TYPE_NAME: HookGroupId
                maxLength: 22
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                type: string
              hookId:
                IS_REQUIRED: true
                PROPERTY_NAME: hookId
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/hookId
                TYPE_NAME: HookId
                maxLength: 255
                type: string
              metadata:
                IS_REQUIRED: true
                PROPERTY_NAME: metadata
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata
                TYPE_NAME: Metadata
                additionalProperties:
                  Boolean: false
                  Properties: null
                properties:
                  MemberNames:
                    description: description
                    emailOnError: emailOnError
                    name: name
                    owner: owner
                  Properties:
                    description:
                      IS_REQUIRED: true
                      PROPERTY_NAME: description
                      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata/properties/description
                      TYPE_NAME: Description
                      description: Long-form of the hook's purpose and behavior
                      maxLength: 32768
                      title: Description
                      type: string
                    emailOnError:
                      IS_REQUIRED: false
                      PROPERTY_NAME: emailOnError
                      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata/properties/emailOnError
                      TYPE_NAME: EmailOnError
                      default: true
                      description: Whether to email the owner on an error creating
                        the task.
                      title: Email on error
                      type: boolean
                    name:
                      IS_REQUIRED: true
                      PROPERTY_NAME: name
                      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata/properties/name
                      TYPE_NAME: Name
                      description: Human readable name of the hook
                      maxLength: 255
                      title: Name
                      type: string
                    owner:
                      IS_REQUIRED: true
                      PROPERTY_NAME: owner
                      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata/properties/owner
                      TYPE_NAME: Owner
                      description: Email of the person or group responsible for this
                        hook.
                      maxLength: 255
                      title: Owner
                      type: string
                  SortedPropertyNames:
                  - description
                  - emailOnError
                  - name
                  - owner
                  SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/metadata/properties
                required:
                - name
                - description
                - owner
                type: object
              schedule:
                IS_REQUIRED: true
                PROPERTY_NAME: schedule
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/schedule
                TYPE_NAME: Schedule
                description: |
                  Definition of the times at which a hook will result in creation of a task.
                  If several patterns are specified, tasks will be created at any time
                  specified by one or more patterns.  Note that tasks may not be created
                  at exactly the time specified.
                                      {$ref: "http://schemas.taskcluster.net/hooks/v1/schedule.json"}
              task:
                IS_REQUIRED: true
                PROPERTY_NAME: task
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/task
                TYPE_NAME: TaskTemplate
                description: |
                  Template for the task definition.  This is rendered using [JSON-e](https://taskcluster.github.io/json-e/)
                  as described in https://docs.taskcluster.net/reference/core/taskcluster-hooks/docs/firing-hooks to produce
                  a task definition that is submitted to the Queue service.
                title: Task Template
                type: object
              triggerSchema:
                IS_REQUIRED: true
                PROPERTY_NAME: triggerSchema
                SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties/triggerSchema
                TYPE_NAME: TriggerSchema
                type: object
            SortedPropertyNames:
            - deadline
            - expires
            - hookGroupId
            - hookId
            - metadata
            - schedule
            - task
            - triggerSchema
            SourceURL: http://schemas.taskcluster.net/hooks/v1/hook-definition.json#/properties
          required:
          - hookGroupId
          - hookId
          - metadata
          - task
          - schedule
          - expires
          - deadline
          - triggerSchema
          title: Hook definition
          type: object
        SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/list-hooks-response.json#/properties/hooks/items
        TYPE_NAME: HooksEntry
      title: Hooks
      type: array
  SortedPropertyNames:
  - hooks
  SourceURL: http://schemas.taskcluster.net/hooks/v1/list-hooks-response.json#/properties
required:
- hooks
title: Hook list
type: object


http://schemas.taskcluster.net/hooks/v1/schedule.json#
======================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/schedule.json#
TYPE_NAME: String[]
default: []
description: |
  A list of cron-style definitions to represent a set of moments in (UTC) time.
  If several patterns are specified, a given moment in time represented by
  more than one pattern is considered only to be counted once, in other words
  it is allowed for the cron patterns to overlap; duplicates are redundant.
id: http://schemas.taskcluster.net/hooks/v1/schedule.json#
items:
  IS_REQUIRED: false
  PROPERTY_NAME: ' entry'
  SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/schedule.json#/items
  TYPE_NAME: CronPattern
  description: |
    Cron-like specification for when tasks should be created.  The pattern is
    parsed in a UTC context.
    See [cron-parser on npm](https://www.npmjs.com/package/cron-parser).
  title: Cron Pattern
  type: string
title: Schedule
type: array
uniqueItems: true


http://schemas.taskcluster.net/hooks/v1/task-status.json#
=========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#
TYPE_NAME: TaskStatusStructure
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A representation of **task status** as known by the queue
id: http://schemas.taskcluster.net/hooks/v1/task-status.json#
properties:
  MemberNames:
    status: status
  Properties:
    status:
      IS_REQUIRED: true
      PROPERTY_NAME: status
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status
      TYPE_NAME: Status
      additionalProperties:
        Boolean: false
        Properties: null
      properties:
        MemberNames:
          deadline: deadline
          expires: expires
          provisionerId: provisionerId
          retriesLeft: retriesLeft
          runs: runs
          schedulerId: schedulerId
          state: state
          taskGroupId: taskGroupId
          taskId: taskId
          workerType: workerType
        Properties:
          deadline:
            IS_REQUIRED: true
            PROPERTY_NAME: deadline
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/deadline
            TYPE_NAME: Deadline
            default: 1 day
            description: |
              Use of this field is deprecated; use `deadline: {$fromNow: ..}` in the task template instead.
            title: Deadline
            type: string
          expires:
            IS_REQUIRED: true
            PROPERTY_NAME: expires
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/expires
            TYPE_NAME: Expiration
            default: 3 months
            description: |
              Use of this field is deprecated; use `expires: {$fromNow: ..}` in the task template instead.
            title: Expiration
            type: string
          provisionerId:
            IS_REQUIRED: true
            PROPERTY_NAME: provisionerId
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/provisionerId
            TYPE_NAME: ProvisionerId
            description: |
              Unique identifier for the provisioner that this task must be scheduled on
            maxLength: 22
            minLength: 1
            pattern: ^([a-zA-Z0-9-_]*)$
            title: Provisioner Id
            type: string
          retriesLeft:
            IS_REQUIRED: true
            PROPERTY_NAME: retriesLeft
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/retriesLeft
            TYPE_NAME: RetriesLeft
            description: |
              Number of retries left for the task in case of infrastructure issues
            maximum: 999
            minimum: 0
            title: Retries Left
            type: integer
          runs:
            IS_REQUIRED: true
            PROPERTY_NAME: runs
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs
            TYPE_NAME: ListOfRuns
            description: |
              List of runs, ordered so that index `i` has `runId == i`
            items:
              IS_REQUIRED: false
              PROPERTY_NAME: runs entry
              SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items
              TYPE_NAME: RunInformation
              additionalProperties:
                Boolean: false
                Properties: null
              description: |
                JSON object with information about a run
              properties:
                MemberNames:
                  reasonCreated: reasonCreated
                  reasonResolved: reasonResolved
                  resolved: resolved
                  runId: runId
                  scheduled: scheduled
                  started: started
                  state: state
                  takenUntil: takenUntil
                  workerGroup: workerGroup
                  workerId: workerId
                Properties:
                  reasonCreated:
                    IS_REQUIRED: true
                    PROPERTY_NAME: reasonCreated
                    SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/reasonCreated
                    TYPE_NAME: ReasonCreated
                    description: |
                      Reason for the creation of this run,
                      **more reasons may be added in the future**.
                    enum:
                    - scheduled
                    - retry
                    - task-retry
                    - rerun
                    - exception
                    title: Reason Created
                    type: string
                  reasonResolved:
                    IS_REQUIRED: false
                    PROPERTY_NAME: reasonResolved
                    SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/reasonResolved
                    TYPE_NAME: ReasonResolved
                    description: |
                      Reason that run was resolved, this is mainly
                      useful for runs resolved as `exception`.
                      Note, **more reasons may be added in the future**, also this
                      property is only available after the run is resolved.
                    enum:
                    - completed
                    - failed
                    - deadline-exceeded
                    - canceled
                    - superseded
                    - claim-expired
                    - worker-shutdown
                    - malformed-payload
                    - resource-unavailable
                    - internal-error
                    - intermittent-task
                    title: Reason Resolved
                    type: string
                  resolved:
                    IS_REQUIRED: false
                    PROPERTY_NAME: resolved
                    SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/resolved
                    TYPE_NAME: Resolved
                    description: |
                      Date-time at which this run was resolved, ie. when the run changed
                      state from `running` to either `completed`, `failed` or `exception`.
                      This property is only present after the run as been resolved.
                    format: date-time
                    title: Resolved
                    type: string
                  runId:
                    IS_REQUIRED: true
                    PROPERTY_NAME: runId
                    SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/runId
                    TYPE_NAME: RunIdentifier
                    description: |
                      Id of this task run, `run-id`s always starts from `0`
                    maximum: 1000
                    minimum: 0
                    title: Run Identifier
                    type: integer
                  scheduled:
                    IS_REQUIRED: true
                    PROPERTY_NAME: scheduled
                    SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/scheduled
                    TYPE_NAME: Scheduled
                    description: |
                      Date-time at which this run was scheduled, ie. when the run was
                      created in state `pending`.
                    format: date-time
                    title: Scheduled
                    type: string
                  started:
                    IS_REQUIRED: false
                    PROPERTY_NAME: started
                    SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/started
                    TYPE_NAME: Started
                    description: |
                      Date-time at which this run was claimed, ie. when the run changed
                      state from `pending` to `running`. This property is only present
                      after the run has been claimed.
                    format: date-time
                    title: Started
                    type: string
                  state:
                    IS_REQUIRED: true
                    PROPERTY_NAME: state
                    SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/state
                    TYPE_NAME: RunState
                    description: |
                      State of this run
                    enum:
                    - pending
                    - running
                    - completed
                    - failed
                    - exception
                    title: Run State
                    type: string
                  takenUntil:
                    IS_REQUIRED: false
                    PROPERTY_NAME: takenUntil
                    SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/takenUntil
                    TYPE_NAME: TakenUntil
                    description: |
                      Time at which the run expires and is resolved as `failed`, if the
                      run isn't reclaimed. Note, only present after the run has been
                      claimed.
                    format: date-time
                    title: Taken Until
                    type: string
                  workerGroup:
                    IS_REQUIRED: false
                    PROPERTY_NAME: workerGroup
                    SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/workerGroup
                    TYPE_NAME: WorkerGroup
                    description: |
                      Identifier for group that worker who executes this run is a part of,
                      this identifier is mainly used for efficient routing.
                      Note, this property is only present after the run is claimed.
                    maxLength: 22
                    minLength: 1
                    pattern: ^([a-zA-Z0-9-_]*)$
                    title: Worker Group
                    type: string
                  workerId:
                    IS_REQUIRED: false
                    PROPERTY_NAME: workerId
                    SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/workerId
                    TYPE_NAME: WorkerIdentifier
                    description: |
                      Identifier for worker evaluating this run within given
                      `workerGroup`. Note, this property is only available after the run
                      has been claimed.
                    maxLength: 22
                    minLength: 1
                    pattern: ^([a-zA-Z0-9-_]*)$
                    title: Worker Identifier
                    type: string
                SortedPropertyNames:
                - reasonCreated
                - reasonResolved
                - resolved
                - runId
                - scheduled
                - started
                - state
                - takenUntil
                - workerGroup
                - workerId
                SourceURL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties
              required:
              - runId
              - state
              - reasonCreated
              - scheduled
              title: Run Information
              type: object
            title: List of Runs
            type: array
          schedulerId:
            IS_REQUIRED: true
            PROPERTY_NAME: schedulerId
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/schedulerId
            TYPE_NAME: SchedulerIdentifier
            description: |
              Identifier for the scheduler that _defined_ this task.
            maxLength: 22
            minLength: 1
            pattern: ^([a-zA-Z0-9-_]*)$
            title: Scheduler Identifier
            type: string
          state:
            IS_REQUIRED: true
            PROPERTY_NAME: state
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/state
            TYPE_NAME: State
            description: |
              State of this task. This is just an auxiliary property derived from state
              of latests run, or `unscheduled` if none.
            enum:
            - unscheduled
            - pending
            - running
            - completed
            - failed
            - exception
            title: State
            type: string
          taskGroupId:
            IS_REQUIRED: true
            PROPERTY_NAME: taskGroupId
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/taskGroupId
            TYPE_NAME: TaskGroupIdentifier
            description: |
              Identifier for a group of tasks scheduled together with this task, by
              scheduler identified by `schedulerId`. For tasks scheduled by the
              task-graph scheduler, this is the `taskGraphId`.
            pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
            title: Task-Group Identifier
            type: string
          taskId:
            IS_REQUIRED: true
            PROPERTY_NAME: taskId
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/taskId
            TYPE_NAME: TaskIdentifier
            description: |
              Unique task identifier, this is UUID encoded as
              [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
              stripped of `=` padding.
            pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
            title: Task Identifier
            type: string
          workerType:
            IS_REQUIRED: true
            PROPERTY_NAME: workerType
            SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties/workerType
            TYPE_NAME: WorkerType
            description: |
              Identifier for worker type within the specified provisioner
            maxLength: 22
            minLength: 1
            pattern: ^([a-zA-Z0-9-_]*)$
            title: Worker Type
            type: string
        SortedPropertyNames:
        - deadline
        - expires
        - provisionerId
        - retriesLeft
        - runs
        - schedulerId
        - state
        - taskGroupId
        - taskId
        - workerType
        SourceURL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties/status/properties
      required:
      - taskId
      - provisionerId
      - workerType
      - schedulerId
      - taskGroupId
      - deadline
      - expires
      - retriesLeft
      - state
      - runs
      type: object
  SortedPropertyNames:
  - status
  SourceURL: http://schemas.taskcluster.net/hooks/v1/task-status.json#/properties
required:
- status
title: Task Status Structure
type: object


http://schemas.taskcluster.net/hooks/v1/trigger-context.json#
=============================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/trigger-context.json#
TYPE_NAME: Object
description: |
  Trigger context
id: http://schemas.taskcluster.net/hooks/v1/trigger-context.json#
title: trigger context
type: object


http://schemas.taskcluster.net/hooks/v1/trigger-token-response.json#
====================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/trigger-token-response.json#
TYPE_NAME: TriggerTokenResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Secret token for a trigger
id: http://schemas.taskcluster.net/hooks/v1/trigger-token-response.json#
properties:
  MemberNames:
    token: token
  Properties:
    token:
      IS_REQUIRED: true
      PROPERTY_NAME: token
      SOURCE_URL: http://schemas.taskcluster.net/hooks/v1/trigger-token-response.json#/properties/token
      TYPE_NAME: Token
      title: Token
      type: string
  SortedPropertyNames:
  - token
  SourceURL: http://schemas.taskcluster.net/hooks/v1/trigger-token-response.json#/properties
required:
- token
title: trigger token response
type: object


http://references.taskcluster.net/index/v1/api.json
===================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'Task Index API Documentation'
Description = 'The task index, typically available at `index.taskcluster.net`, is
responsible for indexing tasks. The service ensures that tasks can be
located by recency and/or arbitrary strings. Common use-cases include:

 * Locate tasks by git or mercurial `<revision>`, or
 * Locate latest task from given `<branch>`, such as a release.

**Index hierarchy**, tasks are indexed in a dot (`.`) separated hierarchy
called a namespace. For example a task could be indexed with the index path
`some-app.<revision>.linux-64.release-build`. In this case the following
namespaces is created.

 1. `some-app`,
 1. `some-app.<revision>`, and,
 2. `some-app.<revision>.linux-64`

Inside the namespace `some-app.<revision>` you can find the namespace
`some-app.<revision>.linux-64` inside which you can find the indexed task
`some-app.<revision>.linux-64.release-build`. This is an example of indexing
builds for a given platform and revision.

**Task Rank**, when a task is indexed, it is assigned a `rank` (defaults
to `0`). If another task is already indexed in the same namespace with
lower or equal `rank`, the index for that task will be overwritten. For example
consider index path `mozilla-central.linux-64.release-build`. In
this case one might choose to use a UNIX timestamp or mercurial revision
number as `rank`. This way the latest completed linux 64 bit release
build is always available at `mozilla-central.linux-64.release-build`.

Note that this does mean index paths are not immutable: the same path may
point to a different task now than it did a moment ago.

**Indexed Data**, when a task is retrieved from the index the result includes
a `taskId` and an additional user-defined JSON blob that was indexed with
the task.

**Entry Expiration**, all indexed entries must have an expiration date.
Typically this defaults to one year, if not specified. If you are
indexing tasks to make it easy to find artifacts, consider using the
artifact's expiration date.

**Valid Characters**, all keys in a namespace `<key1>.<key2>` must be
in the form `/[a-zA-Z0-9_!~*'()%-]+/`. Observe that this is URL-safe and
that if you strictly want to put another character you can URL encode it.

**Indexing Routes**, tasks can be indexed using the API below, but the
most common way to index tasks is adding a custom route to `task.routes` of the
form `index.<namespace>`. In order to add this route to a task you'll
need the scope `queue:route:index.<namespace>`. When a task has
this route, it will be indexed when the task is **completed successfully**.
The task will be indexed with `rank`, `data` and `expires` as specified
in `task.extra.index`. See the example below:

```js
{
  payload:  { /* ... */ },
  routes: [
    // index.<namespace> prefixed routes, tasks CC'ed such a route will
    // be indexed under the given <namespace>
    "index.mozilla-central.linux-64.release-build",
    "index.<revision>.linux-64.release-build"
  ],
  extra: {
    // Optional details for indexing service
    index: {
      // Ordering, this taskId will overwrite any thing that has
      // rank <= 4000 (defaults to zero)
      rank:       4000,

      // Specify when the entries expire (Defaults to 1 year)
      expires:          new Date().toJSON(),

      // A little informal data to store along with taskId
      // (less 16 kb when encoded as JSON)
      data: {
        hgRevision:   "...",
        commitMessae: "...",
        whatever...
      }
    },
    // Extra properties for other services...
  }
  // Other task properties...
}
```

**Remark**, when indexing tasks using custom routes, it's also possible
to listen for messages about these tasks. For
example one could bind to `route.index.some-app.*.release-build`,
and pick up all messages about release builds. Hence, it is a
good idea to document task index hierarchies, as these make up extension
points in their own.'
Base URL    = 'https://index.taskcluster.net/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<indexPath>'
    Entry Args        = '[indexPath]'
    Entry Query        = '[]'
    Entry Name        = 'findTask'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/index/v1/indexed-task-response.json#'
    Entry Title       = 'Find Indexed Task'
    Entry Description = 'Find a task by index path, returning the highest-rank task with that path. If no
task exists for the given path, this API end-point will respond with a 404 status.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/namespaces/<namespace>'
    Entry Args        = '[namespace]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listNamespaces'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#'
    Entry Title       = 'List Namespaces'
    Entry Description = 'List the namespaces immediately under a given namespace.

This endpoint
lists up to 1000 namespaces. If more namespaces are present, a
`continuationToken` will be returned, which can be given in the next
request. For the initial request, the payload should be an empty JSON
object.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/tasks/<namespace>'
    Entry Args        = '[namespace]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listTasks'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/index/v1/list-tasks-response.json#'
    Entry Title       = 'List Tasks'
    Entry Description = 'List the tasks immediately under a given namespace.

This endpoint
lists up to 1000 tasks. If more tasks are present, a
`continuationToken` will be returned, which can be given in the next
request. For the initial request, the payload should be an empty JSON
object.

**Remark**, this end-point is designed for humans browsing for tasks, not
services, as that makes little sense.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/task/<namespace>'
    Entry Args        = '[namespace]'
    Entry Query        = '[]'
    Entry Name        = 'insertTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'index:insert-task:<namespace>'
    Entry Input       = 'http://schemas.taskcluster.net/index/v1/insert-task-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/index/v1/indexed-task-response.json#'
    Entry Title       = 'Insert Task into Index'
    Entry Description = 'Insert a task into the index.  If the new rank is less than the existing rank
at the given index path, the task is not indexed but the response is still 200 OK.

Please see the introduction above for information
about indexing successfully completed tasks automatically using custom routes.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<indexPath>/artifacts/<name>'
    Entry Args        = '[indexPath name]'
    Entry Query        = '[]'
    Entry Name        = 'findArtifactFromTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If private:
  queue:get-artifact:<name>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Get Artifact From Indexed Task'
    Entry Description = 'Find a task by index path and redirect to the artifact on the most recent
run with the given `name`.

Note that multiple calls to this endpoint may return artifacts from differen tasks
if a new task is inserted into the index between calls. Avoid using this method as
a stable link to multiple, connected files if the index path does not contain a
unique identifier.  For example, the following two links may return unrelated files:
* https://index.taskcluster.net/task/some-app.win64.latest.installer/artifacts/public/installer.exe`
* https://index.taskcluster.net/task/some-app.win64.latest.installer/artifacts/public/debug-symbols.zip`

This problem be remedied by including the revision in the index path or by bundling both
installer and debug symbols into a single artifact.

If no task exists for the given index path, this API end-point responds with 404.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/index/v1/indexed-task-response.json#
===================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/index/v1/indexed-task-response.json#
TYPE_NAME: IndexedTaskResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Representation of an indexed task.
id: http://schemas.taskcluster.net/index/v1/indexed-task-response.json#
properties:
  MemberNames:
    data: data
    expires: expires
    namespace: namespace
    rank: rank
    taskId: taskId
  Properties:
    data:
      IS_REQUIRED: true
      PROPERTY_NAME: data
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/indexed-task-response.json#/properties/data
      TYPE_NAME: TaskSpecificData
      description: |
        Data that was reported with the task. This is an arbitrary JSON object.
      title: Task Specific Data
      type: object
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/indexed-task-response.json#/properties/expires
      TYPE_NAME: Expiration
      description: |
        Date at which this entry expires from the task index.
      format: date-time
      title: Expiration
      type: string
    namespace:
      IS_REQUIRED: true
      PROPERTY_NAME: namespace
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/indexed-task-response.json#/properties/namespace
      TYPE_NAME: Namespace
      description: |
        Namespace of the indexed task, used to find the indexed task in the index.
      maxLength: 255
      title: Namespace
      type: string
    rank:
      IS_REQUIRED: true
      PROPERTY_NAME: rank
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/indexed-task-response.json#/properties/rank
      TYPE_NAME: Rank
      description: |
        If multiple tasks are indexed with the same `namespace` the task with the
        highest `rank` will be stored and returned in later requests. If two tasks
        has the same `rank` the latest task will be stored.
      title: Rank
      type: number
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/indexed-task-response.json#/properties/taskId
      TYPE_NAME: TaskIdentifier
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
  SortedPropertyNames:
  - data
  - expires
  - namespace
  - rank
  - taskId
  SourceURL: http://schemas.taskcluster.net/index/v1/indexed-task-response.json#/properties
required:
- namespace
- taskId
- rank
- data
- expires
title: Indexed Task Response
type: object


http://schemas.taskcluster.net/index/v1/insert-task-request.json#
=================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/index/v1/insert-task-request.json#
TYPE_NAME: InsertTaskRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Representation of the index entry to insert.
id: http://schemas.taskcluster.net/index/v1/insert-task-request.json#
properties:
  MemberNames:
    data: data
    expires: expires
    rank: rank
    taskId: taskId
  Properties:
    data:
      IS_REQUIRED: true
      PROPERTY_NAME: data
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/insert-task-request.json#/properties/data
      TYPE_NAME: TaskSpecificData
      description: |
        This is an arbitrary JSON object. Feel free to put whatever data you want
        here, but do limit it, you'll get errors if you store more than 32KB.
        So stay well, below that limit.
      title: Task Specific Data
      type: object
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/insert-task-request.json#/properties/expires
      TYPE_NAME: Expiration
      description: |
        Date at which this entry expires from the task index.
      format: date-time
      title: Expiration
      type: string
    rank:
      IS_REQUIRED: true
      PROPERTY_NAME: rank
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/insert-task-request.json#/properties/rank
      TYPE_NAME: Rank
      description: |
        If multiple tasks are indexed with the same `namespace` the task with the
        highest `rank` will be stored and returned in later requests. If two tasks
        has the same `rank` the latest task will be stored.
      title: Rank
      type: number
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/insert-task-request.json#/properties/taskId
      TYPE_NAME: TaskIdentifier
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
  SortedPropertyNames:
  - data
  - expires
  - rank
  - taskId
  SourceURL: http://schemas.taskcluster.net/index/v1/insert-task-request.json#/properties
required:
- taskId
- rank
- data
- expires
title: Insert Task Request
type: object


http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#
======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#
TYPE_NAME: ListNamespacesResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a request to list namespaces within a given namespace.
id: http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#
properties:
  MemberNames:
    continuationToken: continuationToken
    namespaces: namespaces
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        A continuation token is returned if there are more results than listed
        here. You can optionally provide the token in the request payload to
        load the additional results.
      title: Continuation Token
      type: string
    namespaces:
      IS_REQUIRED: true
      PROPERTY_NAME: namespaces
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#/properties/namespaces
      TYPE_NAME: Namespaces
      description: |
        List of namespaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: namespaces entry
        SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#/properties/namespaces/items
        TYPE_NAME: Namespace
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Representation of a namespace that contains indexed tasks.
        properties:
          MemberNames:
            expires: expires
            name: name
            namespace: namespace
          Properties:
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties/expires
              TYPE_NAME: Expiration
              description: |
                Date at which this entry, and by implication all entries below it,
                expires from the task index.
              format: date-time
              title: Expiration
              type: string
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties/name
              TYPE_NAME: Name
              description: |
                Name of namespace within it's parent namespace.
              title: Name
              type: string
            namespace:
              IS_REQUIRED: true
              PROPERTY_NAME: namespace
              SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties/namespace
              TYPE_NAME: Namespace
              description: |
                Fully qualified name of the namespace, you can use this to list
                namespaces or tasks under this namespace.
              maxLength: 255
              title: Namespace
              type: string
          SortedPropertyNames:
          - expires
          - name
          - namespace
          SourceURL: http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties
        required:
        - namespace
        - name
        - expires
        title: Namespace
        type: object
      title: Namespaces
      type: array
  SortedPropertyNames:
  - continuationToken
  - namespaces
  SourceURL: http://schemas.taskcluster.net/index/v1/list-namespaces-response.json#/properties
required:
- namespaces
title: List Namespaces Response
type: object


http://schemas.taskcluster.net/index/v1/list-tasks-response.json#
=================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#
TYPE_NAME: ListTasksResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Representation of an indexed task.
id: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#
properties:
  MemberNames:
    continuationToken: continuationToken
    tasks: tasks
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        A continuation token is returned if there are more results than listed
        here. You can optionally provide the token in the request payload to
        load the additional results.
      title: Continuation Token
      type: string
    tasks:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks
      SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#/properties/tasks
      TYPE_NAME: Tasks
      description: |
        List of tasks.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: tasks entry
        SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#/properties/tasks/items
        TYPE_NAME: Task
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Representation of a task.
        properties:
          MemberNames:
            data: data
            expires: expires
            namespace: namespace
            rank: rank
            taskId: taskId
          Properties:
            data:
              IS_REQUIRED: true
              PROPERTY_NAME: data
              SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#/properties/tasks/items/properties/data
              TYPE_NAME: TaskSpecificData
              description: |
                Data that was reported with the task. This is an arbitrary JSON
                object.
              title: Task Specific Data
              type: object
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#/properties/tasks/items/properties/expires
              TYPE_NAME: Expiration
              description: |
                Date at which this entry expires from the task index.
              format: date-time
              title: Expiration
              type: string
            namespace:
              IS_REQUIRED: true
              PROPERTY_NAME: namespace
              SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#/properties/tasks/items/properties/namespace
              TYPE_NAME: Namespace
              description: |
                Index path of the task.
              maxLength: 255
              title: Namespace
              type: string
            rank:
              IS_REQUIRED: true
              PROPERTY_NAME: rank
              SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#/properties/tasks/items/properties/rank
              TYPE_NAME: Rank
              description: |
                If multiple tasks are indexed with the same `namespace` the task
                with the highest `rank` will be stored and returned in later
                requests. If two tasks has the same `rank` the latest task will be
                stored.
              title: Rank
              type: number
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#/properties/tasks/items/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier for the task currently indexed at `namespace`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
          SortedPropertyNames:
          - data
          - expires
          - namespace
          - rank
          - taskId
          SourceURL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#/properties/tasks/items/properties
        required:
        - namespace
        - taskId
        - rank
        - data
        - expires
        title: Task
        type: object
      title: Tasks
      type: array
  SortedPropertyNames:
  - continuationToken
  - tasks
  SourceURL: http://schemas.taskcluster.net/index/v1/list-tasks-response.json#/properties
required:
- tasks
title: List Tasks Response
type: object


http://references.taskcluster.net/login/v1/api.json
===================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'Login API'
Description = 'The Login service serves as the interface between external authentication
systems and Taskcluster credentials.'
Base URL    = 'https://login.taskcluster.net/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/oidc-credentials/<provider>'
    Entry Args        = '[provider]'
    Entry Query        = '[]'
    Entry Name        = 'oidcCredentials'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json'
    Entry Title       = 'Get Taskcluster credentials given a suitable `access_token`'
    Entry Description = 'Given an OIDC `access_token` from a trusted OpenID provider, return a
set of Taskcluster credentials for use on behalf of the identified
user.

This method is typically not called with a Taskcluster client library
and does not accept Hawk credentials. The `access_token` should be
given in an `Authorization` header:
```
Authorization: Bearer abc.xyz
```

The `access_token` is first verified against the named
:provider, then passed to the provider's API to retrieve a user
profile. That profile is then used to generate Taskcluster credentials
appropriate to the user. Note that the resulting credentials may or may
not include a `certificate` property. Callers should be prepared for either
alternative.

The given credentials will expire in a relatively short time. Callers should
monitor this expiration and refresh the credentials if necessary, by calling
this endpoint again, if they have expired.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json#
=======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json#
TYPE_NAME: CredentialsResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A response containing credentials corresponding to a supplied OIDC `access_token`.
id: http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json#
properties:
  MemberNames:
    credentials: credentials
    expires: expires
  Properties:
    credentials:
      IS_REQUIRED: false
      PROPERTY_NAME: credentials
      SOURCE_URL: http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json#/properties/credentials
      TYPE_NAME: TaskclusterCredentials
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Taskcluster credentials. Note that the credentials may not contain a certificate!
      properties:
        MemberNames:
          accessToken: accessToken
          certificate: certificate
          clientId: clientId
        Properties:
          accessToken:
            IS_REQUIRED: true
            PROPERTY_NAME: accessToken
            SOURCE_URL: http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json#/properties/credentials/properties/accessToken
            TYPE_NAME: AccessToken
            pattern: ^[a-zA-Z0-9_-]{22,66}$
            type: string
          certificate:
            IS_REQUIRED: false
            PROPERTY_NAME: certificate
            SOURCE_URL: http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json#/properties/credentials/properties/certificate
            TYPE_NAME: Certificate
            type: string
          clientId:
            IS_REQUIRED: true
            PROPERTY_NAME: clientId
            SOURCE_URL: http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json#/properties/credentials/properties/clientId
            TYPE_NAME: ClientId
            pattern: ^[A-Za-z0-9!@/:.+|_-]+$
            type: string
        SortedPropertyNames:
        - accessToken
        - certificate
        - clientId
        SourceURL: http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json#/properties/credentials/properties
      required:
      - clientId
      - accessToken
      title: Taskcluster Credentials
      type: object
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json#/properties/expires
      TYPE_NAME: Expires
      description: |
        Time after which the credentials are no longer valid.  Callers should
        call `oidcCredentials` again to get fresh credentials before this time.
      format: date-time
      type: string
  SortedPropertyNames:
  - credentials
  - expires
  SourceURL: http://schemas.taskcluster.net/login/v1/oidc-credentials-response.json#/properties
title: Credentials Response
type: object


http://references.taskcluster.net/notify/v1/api.json
====================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'Notification Service'
Description = 'The notification service, typically available at `notify.taskcluster.net`
listens for tasks with associated notifications and handles requests to
send emails and post pulse messages.'
Base URL    = 'https://notify.taskcluster.net/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/email'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'email'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'notify:email:<address>'
    Entry Input       = 'http://schemas.taskcluster.net/notify/v1/email-request.json'
    Entry Output      = ''
    Entry Title       = 'Send an Email'
    Entry Description = 'Send an email to `address`. The content is markdown and will be rendered
to HTML, but both the HTML and raw markdown text will be sent in the
email. If a link is included, it will be rendered to a nice button in the
HTML version of the email'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/pulse'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'pulse'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'notify:pulse:<routingKey>'
    Entry Input       = 'http://schemas.taskcluster.net/notify/v1/pulse-request.json'
    Entry Output      = ''
    Entry Title       = 'Publish a Pulse Message'
    Entry Description = 'Publish a message on pulse with the given `routingKey`.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/irc'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'irc'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'If channelRequest:
  notify:irc-channel:<channel>'
    Entry Input       = 'http://schemas.taskcluster.net/notify/v1/irc-request.json'
    Entry Output      = ''
    Entry Title       = 'Post IRC Message'
    Entry Description = 'Post a message on IRC to a specific channel or user, or a specific user
on a specific channel.

Success of this API method does not imply the message was successfully
posted. This API method merely inserts the IRC message into a queue
that will be processed by a background process.
This allows us to re-send the message in face of connection issues.

However, if the user isn't online the message will be dropped without
error. We maybe improve this behavior in the future. For now just keep
in mind that IRC is a best-effort service.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/notify/v1/email-request.json#
============================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/notify/v1/email-request.json#
TYPE_NAME: SendEmailRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to send an email
id: http://schemas.taskcluster.net/notify/v1/email-request.json#
properties:
  MemberNames:
    address: address
    content: content
    link: link
    replyTo: replyTo
    subject: subject
    template: template
  Properties:
    address:
      IS_REQUIRED: true
      PROPERTY_NAME: address
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/email-request.json#/properties/address
      TYPE_NAME: Address
      description: |
        E-mail address to which the message should be sent
      format: email
      type: string
    content:
      IS_REQUIRED: true
      PROPERTY_NAME: content
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/email-request.json#/properties/content
      TYPE_NAME: Content
      description: |
        Content of the e-mail as **markdown**, will be rendered to HTML before
        the email is sent. Notice that markdown allows for a few HTML tags, but
        won't allow inclusion of script tags and other unpleasantries.
      maxLength: 102400
      minLength: 1
      type: string
    link:
      IS_REQUIRED: false
      PROPERTY_NAME: link
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/email-request.json#/properties/link
      TYPE_NAME: Link
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Optional link that can be added as a button to the email.
      properties:
        MemberNames:
          href: href
          text: text
        Properties:
          href:
            IS_REQUIRED: true
            PROPERTY_NAME: href
            SOURCE_URL: http://schemas.taskcluster.net/notify/v1/email-request.json#/properties/link/properties/href
            TYPE_NAME: Href
            description: |
              Where the link should point to.
            format: uri
            maxLength: 1024
            minLength: 1
            type: string
          text:
            IS_REQUIRED: true
            PROPERTY_NAME: text
            SOURCE_URL: http://schemas.taskcluster.net/notify/v1/email-request.json#/properties/link/properties/text
            TYPE_NAME: Text
            description: |
              Text to display on link.
            maxLength: 40
            minLength: 1
            type: string
        SortedPropertyNames:
        - href
        - text
        SourceURL: http://schemas.taskcluster.net/notify/v1/email-request.json#/properties/link/properties
      required:
      - text
      - href
      type: object
    replyTo:
      IS_REQUIRED: false
      PROPERTY_NAME: replyTo
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/email-request.json#/properties/replyTo
      TYPE_NAME: ReplyTo
      description: |
        Reply-to e-mail (this property is optional)
      format: email
      type: string
    subject:
      IS_REQUIRED: true
      PROPERTY_NAME: subject
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/email-request.json#/properties/subject
      TYPE_NAME: Subject
      description: |
        Subject line of the e-mail, this is plain-text
      maxLength: 255
      minLength: 1
      type: string
    template:
      IS_REQUIRED: false
      PROPERTY_NAME: template
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/email-request.json#/properties/template
      TYPE_NAME: Template
      default: simple
      description: |
        E-mail html template used to format your content.
      enum:
      - simple
      - fullscreen
      type: string
  SortedPropertyNames:
  - address
  - content
  - link
  - replyTo
  - subject
  - template
  SourceURL: http://schemas.taskcluster.net/notify/v1/email-request.json#/properties
required:
- address
- subject
- content
title: Send Email Request
type: object


http://schemas.taskcluster.net/notify/v1/irc-request.json#
==========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#
TYPE_NAME: Object
definitions:
  MemberNames:
    message: message
  Properties:
    message:
      IS_REQUIRED: false
      PROPERTY_NAME: message
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
      TYPE_NAME: String
      description: |
        IRC message to send as plain text.
      maxLength: 510
      minLength: 1
      title: IRC Message Text
      type: string
  SortedPropertyNames:
  - message
  SourceURL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/definitions
description: |
  Request to post a message on IRC.
id: http://schemas.taskcluster.net/notify/v1/irc-request.json#
oneOf:
  Items:
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]
    TYPE_NAME: ChannelMessage
    additionalProperties:
      Boolean: false
      Properties: null
    definitions:
      MemberNames:
        message: message
      Properties:
        message:
          IS_REQUIRED: false
          PROPERTY_NAME: message
          SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
          TYPE_NAME: String
          description: |
            IRC message to send as plain text.
          maxLength: 510
          minLength: 1
          title: IRC Message Text
          type: string
      SortedPropertyNames:
      - message
      SourceURL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]/definitions
    description: |
      Request to post a message on IRC.
    properties:
      MemberNames:
        channel: channel
        message: message
      Properties:
        channel:
          IS_REQUIRED: true
          PROPERTY_NAME: channel
          SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]/properties/channel
          TYPE_NAME: ChannelName
          description: |
            Channel to post the message in.
          minLength: 1
          pattern: ^[#&][^ ,\u0007]{1,199}$
          title: Channel Name
          type: string
        message:
          $ref: '#/definitions/message'
          IS_REQUIRED: true
          PROPERTY_NAME: message
          REF_SUBSCHEMA:
            IS_REQUIRED: false
            PROPERTY_NAME: message
            SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
            TYPE_NAME: String
            description: |
              IRC message to send as plain text.
            maxLength: 510
            minLength: 1
            title: IRC Message Text
            type: string
          SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]/properties/message
          TYPE_NAME: Message
      SortedPropertyNames:
      - channel
      - message
      SourceURL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]/properties
    required:
    - channel
    - message
    title: Channel Message
    type: object
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]
    TYPE_NAME: PrivateMessage
    additionalProperties:
      Boolean: false
      Properties: null
    definitions:
      MemberNames:
        message: message
      Properties:
        message:
          IS_REQUIRED: false
          PROPERTY_NAME: message
          SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
          TYPE_NAME: String
          description: |
            IRC message to send as plain text.
          maxLength: 510
          minLength: 1
          title: IRC Message Text
          type: string
      SortedPropertyNames:
      - message
      SourceURL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions
    description: |
      Request to post a message on IRC.
    properties:
      MemberNames:
        message: message
        user: user
      Properties:
        message:
          $ref: '#/definitions/message'
          IS_REQUIRED: true
          PROPERTY_NAME: message
          REF_SUBSCHEMA:
            IS_REQUIRED: false
            PROPERTY_NAME: message
            SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
            TYPE_NAME: String
            description: |
              IRC message to send as plain text.
            maxLength: 510
            minLength: 1
            title: IRC Message Text
            type: string
          SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/properties/message
          TYPE_NAME: Message
        user:
          IS_REQUIRED: true
          PROPERTY_NAME: user
          SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/properties/user
          TYPE_NAME: IRCHandle
          description: |
            User to post the message to.
          maxLength: 255
          minLength: 1
          pattern: ^[A-Za-z\[\]\\~_\^{|}][A-Za-z0-9\-\[\]\\~_\^{|}]{0,254}$
          title: IRC Handle
          type: string
      SortedPropertyNames:
      - message
      - user
      SourceURL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/properties
    required:
    - user
    - message
    title: Private Message
    type: object
  SourceURL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf
title: Post IRC Message Request


http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]
===================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]
TYPE_NAME: ChannelMessage
additionalProperties:
  Boolean: false
  Properties: null
definitions:
  MemberNames:
    message: message
  Properties:
    message:
      IS_REQUIRED: false
      PROPERTY_NAME: message
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
      TYPE_NAME: String
      description: |
        IRC message to send as plain text.
      maxLength: 510
      minLength: 1
      title: IRC Message Text
      type: string
  SortedPropertyNames:
  - message
  SourceURL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]/definitions
description: |
  Request to post a message on IRC.
properties:
  MemberNames:
    channel: channel
    message: message
  Properties:
    channel:
      IS_REQUIRED: true
      PROPERTY_NAME: channel
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]/properties/channel
      TYPE_NAME: ChannelName
      description: |
        Channel to post the message in.
      minLength: 1
      pattern: ^[#&][^ ,\u0007]{1,199}$
      title: Channel Name
      type: string
    message:
      $ref: '#/definitions/message'
      IS_REQUIRED: true
      PROPERTY_NAME: message
      REF_SUBSCHEMA:
        IS_REQUIRED: false
        PROPERTY_NAME: message
        SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
        TYPE_NAME: String
        description: |
          IRC message to send as plain text.
        maxLength: 510
        minLength: 1
        title: IRC Message Text
        type: string
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]/properties/message
      TYPE_NAME: Message
  SortedPropertyNames:
  - channel
  - message
  SourceURL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[0]/properties
required:
- channel
- message
title: Channel Message
type: object


http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]
===================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]
TYPE_NAME: PrivateMessage
additionalProperties:
  Boolean: false
  Properties: null
definitions:
  MemberNames:
    message: message
  Properties:
    message:
      IS_REQUIRED: false
      PROPERTY_NAME: message
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
      TYPE_NAME: String
      description: |
        IRC message to send as plain text.
      maxLength: 510
      minLength: 1
      title: IRC Message Text
      type: string
  SortedPropertyNames:
  - message
  SourceURL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions
description: |
  Request to post a message on IRC.
properties:
  MemberNames:
    message: message
    user: user
  Properties:
    message:
      $ref: '#/definitions/message'
      IS_REQUIRED: true
      PROPERTY_NAME: message
      REF_SUBSCHEMA:
        IS_REQUIRED: false
        PROPERTY_NAME: message
        SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
        TYPE_NAME: String
        description: |
          IRC message to send as plain text.
        maxLength: 510
        minLength: 1
        title: IRC Message Text
        type: string
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/properties/message
      TYPE_NAME: Message
    user:
      IS_REQUIRED: true
      PROPERTY_NAME: user
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/properties/user
      TYPE_NAME: IRCHandle
      description: |
        User to post the message to.
      maxLength: 255
      minLength: 1
      pattern: ^[A-Za-z\[\]\\~_\^{|}][A-Za-z0-9\-\[\]\\~_\^{|}]{0,254}$
      title: IRC Handle
      type: string
  SortedPropertyNames:
  - message
  - user
  SourceURL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/properties
required:
- user
- message
title: Private Message
type: object


http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
=======================================================================================
IS_REQUIRED: false
PROPERTY_NAME: message
SOURCE_URL: http://schemas.taskcluster.net/notify/v1/irc-request.json#/oneOf[1]/definitions/message
TYPE_NAME: String
description: |
  IRC message to send as plain text.
maxLength: 510
minLength: 1
title: IRC Message Text
type: string


http://schemas.taskcluster.net/notify/v1/pulse-request.json#
============================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/notify/v1/pulse-request.json#
TYPE_NAME: PostPulseMessageRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to post a message on pulse.
id: http://schemas.taskcluster.net/notify/v1/pulse-request.json#
properties:
  MemberNames:
    message: message
    routingKey: routingKey
  Properties:
    message:
      IS_REQUIRED: true
      PROPERTY_NAME: message
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/pulse-request.json#/properties/message
      TYPE_NAME: Message
      description: |
        IRC message to send as plain text.
      type: object
    routingKey:
      IS_REQUIRED: true
      PROPERTY_NAME: routingKey
      SOURCE_URL: http://schemas.taskcluster.net/notify/v1/pulse-request.json#/properties/routingKey
      TYPE_NAME: RoutingKey
      description: |
        Routing-key to use when posting the message.
      maxLength: 255
      type: string
  SortedPropertyNames:
  - message
  - routingKey
  SourceURL: http://schemas.taskcluster.net/notify/v1/pulse-request.json#/properties
required:
- routingKey
- message
title: Post Pulse Message Request
type: object


http://references.taskcluster.net/purge-cache/v1/api.json
=========================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'Purge Cache API Documentation'
Description = 'The purge-cache service, typically available at
`purge-cache.taskcluster.net`, is responsible for publishing a pulse
message for workers, so they can purge cache upon request.

This document describes the API end-point for publishing the pulse
message. This is mainly intended to be used by tools.'
Base URL    = 'https://purge-cache.taskcluster.net/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/purge-cache/<provisionerId>/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'purgeCache'
    Entry Stability   = 'stable'
    Entry Scopes      = 'purge-cache:<provisionerId>/<workerType>:<cacheName>'
    Entry Input       = 'http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request.json#'
    Entry Output      = ''
    Entry Title       = 'Purge Worker Cache'
    Entry Description = 'Publish a purge-cache message to purge caches named `cacheName` with
`provisionerId` and `workerType` in the routing-key. Workers should
be listening for this message and purge caches when they see it.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/purge-cache/list'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'allPurgeRequests'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#'
    Entry Title       = 'All Open Purge Requests'
    Entry Description = 'This is useful mostly for administors to view
the set of open purge requests. It should not
be used by workers. They should use the purgeRequests
endpoint that is specific to their workerType and
provisionerId.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/purge-cache/<provisionerId>/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[since]'
    Entry Name        = 'purgeRequests'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#'
    Entry Title       = 'Open Purge Requests for a provisionerId/workerType pair'
    Entry Description = 'List of caches that need to be purged if they are from before
a certain time. This is safe to be used in automation from
workers.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#
================================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#
TYPE_NAME: OpenAllPurgeRequestsList
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A list of currently open purge-cache requests. Should not be used by workers.
id: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#
properties:
  MemberNames:
    continuationToken: continuationToken
    requests: requests
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: Passed back from Azure to allow us to page through long result
        sets.
      type: string
    requests:
      IS_REQUIRED: true
      PROPERTY_NAME: requests
      SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#/properties/requests
      TYPE_NAME: Requests
      description: |
        A simple list of purge-cache requests.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: requests entry
        SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#/properties/requests/items
        TYPE_NAME: RequestsEntry
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            before: before
            cacheName: cacheName
            provisionerId: provisionerId
            workerType: workerType
          Properties:
            before:
              IS_REQUIRED: true
              PROPERTY_NAME: before
              SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#/properties/requests/items/properties/before
              TYPE_NAME: Before
              description: |
                All caches that match this provisionerId, workerType, and cacheName must be destroyed if they were created _before_ this time.
              format: date-time
              type: string
            cacheName:
              IS_REQUIRED: true
              PROPERTY_NAME: cacheName
              SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#/properties/requests/items/properties/cacheName
              TYPE_NAME: CacheName
              description: Name of cache to purge.
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#/properties/requests/items/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: ProvisionerId associated with the workerType.
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#/properties/requests/items/properties/workerType
              TYPE_NAME: WorkerType
              description: Workertype cache exists on.
              type: string
          SortedPropertyNames:
          - before
          - cacheName
          - provisionerId
          - workerType
          SourceURL: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#/properties/requests/items/properties
        required:
        - provisionerId
        - workerType
        - cacheName
        - before
        type: object
      type: array
  SortedPropertyNames:
  - continuationToken
  - requests
  SourceURL: http://schemas.taskcluster.net/purge-cache/v1/all-purge-cache-request-list.json#/properties
required:
- requests
title: Open All Purge Requests List
type: object


http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#
============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#
TYPE_NAME: OpenPurgeRequestList
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A list of currently open purge-cache requests.
id: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#
properties:
  MemberNames:
    cacheHit: cacheHit
    requests: requests
  Properties:
    cacheHit:
      IS_REQUIRED: true
      PROPERTY_NAME: cacheHit
      SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#/properties/cacheHit
      TYPE_NAME: CacheHit
      description: True if the cache has been used in this request.
      type: boolean
    requests:
      IS_REQUIRED: true
      PROPERTY_NAME: requests
      SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#/properties/requests
      TYPE_NAME: Requests
      description: |
        A simple list of purge-cache requests.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: requests entry
        SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#/properties/requests/items
        TYPE_NAME: RequestsEntry
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            before: before
            cacheName: cacheName
            provisionerId: provisionerId
            workerType: workerType
          Properties:
            before:
              IS_REQUIRED: true
              PROPERTY_NAME: before
              SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#/properties/requests/items/properties/before
              TYPE_NAME: Before
              description: |
                All caches that match this provisionerId, workerType, and cacheName must be destroyed if they were created _before_ this time.
              format: date-time
              type: string
            cacheName:
              IS_REQUIRED: true
              PROPERTY_NAME: cacheName
              SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#/properties/requests/items/properties/cacheName
              TYPE_NAME: CacheName
              description: Name of cache to purge.
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#/properties/requests/items/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: ProvisionerId associated with the workerType.
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#/properties/requests/items/properties/workerType
              TYPE_NAME: WorkerType
              description: Workertype cache exists on.
              type: string
          SortedPropertyNames:
          - before
          - cacheName
          - provisionerId
          - workerType
          SourceURL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#/properties/requests/items/properties
        required:
        - provisionerId
        - workerType
        - cacheName
        - before
        type: object
      type: array
  SortedPropertyNames:
  - cacheHit
  - requests
  SourceURL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request-list.json#/properties
required:
- requests
- cacheHit
title: Open Purge Request List
type: object


http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request.json#
=======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request.json#
TYPE_NAME: PurgeCacheRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request that a message be published to purge a specific cache.
id: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request.json#
properties:
  MemberNames:
    cacheName: cacheName
  Properties:
    cacheName:
      IS_REQUIRED: true
      PROPERTY_NAME: cacheName
      SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request.json#/properties/cacheName
      TYPE_NAME: CacheName
      description: |
        Name of cache to purge. Notice that if a `workerType` have multiple kinds
        of caches (with independent names), it should purge all caches identified
        by `cacheName` regardless of cache type.
      type: string
  SortedPropertyNames:
  - cacheName
  SourceURL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-request.json#/properties
required:
- cacheName
title: Purge Cache Request
type: object


http://references.taskcluster.net/purge-cache/v1/exchanges.json
===============================================================
Version         = '0'
Title           = 'Purge-Cache Exchanges'
Description     = 'The purge-cache service, typically available at
`purge-cache.taskcluster.net`, is responsible for publishing a pulse
message for workers, so they can purge cache upon request.

This document describes the exchange offered for workers by the
cache-purge service.'
Exchange Prefix = 'exchange/taskcluster-purge-cache/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'purge-cache'
    Entry Name        = 'purgeCache'
    Entry Title       = 'Purge Cache Messages'
    Entry Description = 'When a cache purge is requested  a message will be posted on this
exchange with designated `provisionerId` and `workerType` in the
routing-key and the name of the `cacheFolder` as payload'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` under which to purge cache.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` for which to purge cache.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Entry Schema      = 'http://schemas.taskcluster.net/purge-cache/v1/purge-cache-message.json#'


http://schemas.taskcluster.net/purge-cache/v1/purge-cache-message.json#
=======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-message.json#
TYPE_NAME: PurgeCacheMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a specific cache should be purged
id: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-message.json#
properties:
  MemberNames:
    cacheName: cacheName
    provisionerId: provisionerId
    version: version
    workerType: workerType
  Properties:
    cacheName:
      IS_REQUIRED: true
      PROPERTY_NAME: cacheName
      SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-message.json#/properties/cacheName
      TYPE_NAME: CacheName
      description: |
        Name of cache to purge. Notice that if a `workerType` have multiple kinds
        of caches (with independent names), it should purge all caches identified
        by `cacheName` regardless of cache type.
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-message.json#/properties/provisionerId
      TYPE_NAME: ProvisionerId
      description: |
        `provisionerId` under which the `workerType` we want to purge for exists.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
      type: integer
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-message.json#/properties/workerType
      TYPE_NAME: WorkerType
      description: |
        `workerType` we wish to purge cache for.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - cacheName
  - provisionerId
  - version
  - workerType
  SourceURL: http://schemas.taskcluster.net/purge-cache/v1/purge-cache-message.json#/properties
required:
- version
- provisionerId
- workerType
- cacheName
title: Purge Cache Message
type: object


http://references.taskcluster.net/queue/v1/api.json
===================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'Queue API Documentation'
Description = 'The queue, typically available at `queue.taskcluster.net`, is responsible
for accepting tasks and track their state as they are executed by
workers. In order ensure they are eventually resolved.

This document describes the API end-points offered by the queue. These 
end-points targets the following audience:
 * Schedulers, who create tasks to be executed,
 * Workers, who execute tasks, and
 * Tools, that wants to inspect the state of a task.'
Base URL    = 'https://queue.taskcluster.net/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'task'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task.json#'
    Entry Title       = 'Get Task Definition'
    Entry Description = 'This end-point will return the task-definition. Notice that the task
definition may have been modified by queue, if an optional property is
not specified the queue may provide a default value.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/status'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'status'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-status-response.json#'
    Entry Title       = 'Get task status'
    Entry Description = 'Get task status structure from `taskId`'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task-group/<taskGroupId>/list'
    Entry Args        = '[taskGroupId]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listTaskGroup'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#'
    Entry Title       = 'List Task Group'
    Entry Description = 'List tasks sharing the same `taskGroupId`.

As a task-group may contain an unbounded number of tasks, this end-point
may return a `continuationToken`. To continue listing tasks you must call
the `listTaskGroup` again with the `continuationToken` as the
query-string option `continuationToken`.

By default this end-point will try to return up to 1000 members in one
request. But it **may return less**, even if more tasks are available.
It may also return a `continuationToken` even though there are no more
results. However, you can only be sure to have seen all results if you
keep calling `listTaskGroup` with the last `continuationToken` until you
get a result without a `continuationToken`.

If you are not interested in listing all the members at once, you may
use the query-string option `limit` to return fewer.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/dependents'
    Entry Args        = '[taskId]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listDependentTasks'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#'
    Entry Title       = 'List Dependent Tasks'
    Entry Description = 'List tasks that depend on the given `taskId`.

As many tasks from different task-groups may dependent on a single tasks,
this end-point may return a `continuationToken`. To continue listing
tasks you must call `listDependentTasks` again with the
`continuationToken` as the query-string option `continuationToken`.

By default this end-point will try to return up to 1000 tasks in one
request. But it **may return less**, even if more tasks are available.
It may also return a `continuationToken` even though there are no more
results. However, you can only be sure to have seen all results if you
keep calling `listDependentTasks` with the last `continuationToken` until
you get a result without a `continuationToken`.

If you are not interested in listing all the tasks at once, you may
use the query-string option `limit` to return fewer.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/task/<taskId>'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'createTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* For scope in scopes each <scope>
* For route in routes each queue:route:<route>
* Any of:
  - All of:
    * queue:scheduler-id:<schedulerId>
    * For priority in priorities each queue:create-task:<priority>:<provisionerId>/<workerType>
  - If legacyScopes:
      Any of:
      - queue:create-task:<provisionerId>/<workerType>
      - All of:
        * queue:define-task:<provisionerId>/<workerType>
        * queue:task-group-id:<schedulerId>/<taskGroupId>
        * queue:schedule-task:<schedulerId>/<taskGroupId>/<taskId>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/create-task-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-status-response.json#'
    Entry Title       = 'Create New Task'
    Entry Description = 'Create a new task, this is an **idempotent** operation, so repeat it if
you get an internal server error or network connection is dropped.

**Task `deadline´**, the deadline property can be no more than 5 days
into the future. This is to limit the amount of pending tasks not being
taken care of. Ideally, you should use a much shorter deadline.

**Task expiration**, the `expires` property must be greater than the
task `deadline`. If not provided it will default to `deadline` + one
year. Notice, that artifacts created by task must expire before the task.

**Task specific routing-keys**, using the `task.routes` property you may
define task specific routing-keys. If a task has a task specific 
routing-key: `<route>`, then when the AMQP message about the task is
published, the message will be CC'ed with the routing-key: 
`route.<route>`. This is useful if you want another component to listen
for completed tasks you have posted.  The caller must have scope
`queue:route:<route>` for each route.

**Dependencies**, any tasks referenced in `task.dependencies` must have
already been created at the time of this call.

**Important** Any scopes the task requires are also required for creating
the task. Please see the Request Payload (Task Definition) for details.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/define'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'defineTask'
    Entry Stability   = 'deprecated'
    Entry Scopes      = 'All of:
* For scope in scopes each <scope>
* For route in routes each queue:route:<route>
* Any of:
  - All of:
    * queue:scheduler-id:<schedulerId>
    * For priority in priorities each queue:create-task:<priority>:<provisionerId>/<workerType>
  - If legacyScopes:
      Any of:
      - queue:define-task:<provisionerId>/<workerType>
      - queue:create-task:<provisionerId>/<workerType>
      - All of:
        * queue:define-task:<provisionerId>/<workerType>
        * queue:task-group-id:<schedulerId>/<taskGroupId>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/create-task-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-status-response.json#'
    Entry Title       = 'Define Task'
    Entry Description = '**Deprecated**, this is the same as `createTask` with a **self-dependency**.
This is only present for legacy.'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/schedule'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'scheduleTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:schedule-task:<schedulerId>/<taskGroupId>/<taskId>
- All of:
  * queue:schedule-task
  * assume:scheduler-id:<schedulerId>/<taskGroupId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-status-response.json#'
    Entry Title       = 'Schedule Defined Task'
    Entry Description = 'scheduleTask will schedule a task to be executed, even if it has
unresolved dependencies. A task would otherwise only be scheduled if
its dependencies were resolved.

This is useful if you have defined a task that depends on itself or on
some other task that has not been resolved, but you wish the task to be
scheduled immediately.

This will announce the task as pending and workers will be allowed to
claim it and resolve the task.

**Note** this operation is **idempotent** and will not fail or complain
if called with a `taskId` that is already scheduled, or even resolved.
To reschedule a task previously resolved, use `rerunTask`.'
Entry 7     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/rerun'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'rerunTask'
    Entry Stability   = 'deprecated'
    Entry Scopes      = 'Any of:
- queue:rerun-task:<schedulerId>/<taskGroupId>/<taskId>
- All of:
  * queue:rerun-task
  * assume:scheduler-id:<schedulerId>/<taskGroupId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-status-response.json#'
    Entry Title       = 'Rerun a Resolved Task'
    Entry Description = 'This method _reruns_ a previously resolved task, even if it was
_completed_. This is useful if your task completes unsuccessfully, and
you just want to run it from scratch again. This will also reset the
number of `retries` allowed.

Remember that `retries` in the task status counts the number of runs that
the queue have started because the worker stopped responding, for example
because a spot node died.

**Remark** this operation is idempotent, if you try to rerun a task that
is not either `failed` or `completed`, this operation will just return
the current task status.'
Entry 8     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/cancel'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'cancelTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:cancel-task:<schedulerId>/<taskGroupId>/<taskId>
- All of:
  * queue:cancel-task
  * assume:scheduler-id:<schedulerId>/<taskGroupId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-status-response.json#'
    Entry Title       = 'Cancel Task'
    Entry Description = 'This method will cancel a task that is either `unscheduled`, `pending` or
`running`. It will resolve the current run as `exception` with
`reasonResolved` set to `canceled`. If the task isn't scheduled yet, ie.
it doesn't have any runs, an initial run will be added and resolved as
described above. Hence, after canceling a task, it cannot be scheduled
with `queue.scheduleTask`, but a new run can be created with
`queue.rerun`. These semantics is equivalent to calling
`queue.scheduleTask` immediately followed by `queue.cancelTask`.

**Remark** this operation is idempotent, if you try to cancel a task that
isn't `unscheduled`, `pending` or `running`, this operation will just
return the current task status.'
Entry 9     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/poll-task-url/<provisionerId>/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'pollTaskUrls'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:poll-task-urls:<provisionerId>/<workerType>
- All of:
  * queue:poll-task-urls
  * assume:worker-type:<provisionerId>/<workerType>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#'
    Entry Title       = 'Get Urls to Poll Pending Tasks'
    Entry Description = 'Get a signed URLs to get and delete messages from azure queue.
Once messages are polled from here, you can claim the referenced task
with `claimTask`, and afterwards you should always delete the message.'
Entry 10    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/claim-work/<provisionerId>/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'claimWork'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* queue:claim-work:<provisionerId>/<workerType>
* queue:worker-id:<workerGroup>/<workerId>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/claim-work-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/claim-work-response.json#'
    Entry Title       = 'Claim Work'
    Entry Description = 'Claim any task, more to be added later... long polling up to 20s.'
Entry 11    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/claim'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[]'
    Entry Name        = 'claimTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- All of:
  * queue:claim-task:<provisionerId>/<workerType>
  * queue:worker-id:<workerGroup>/<workerId>
- All of:
  * queue:claim-task
  * assume:worker-type:<provisionerId>/<workerType>
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/task-claim-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-claim-response.json#'
    Entry Title       = 'Claim Task'
    Entry Description = 'claim a task, more to be added later...'
Entry 12    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/reclaim'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[]'
    Entry Name        = 'reclaimTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:reclaim-task:<taskId>/<runId>
- All of:
  * queue:claim-task
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#'
    Entry Title       = 'Reclaim task'
    Entry Description = 'Refresh the claim for a specific `runId` for given `taskId`. This updates
the `takenUntil` property and returns a new set of temporary credentials
for performing requests on behalf of the task. These credentials should
be used in-place of the credentials returned by `claimWork`.

The `reclaimTask` requests serves to:
 * Postpone `takenUntil` preventing the queue from resolving
   `claim-expired`,
 * Refresh temporary credentials used for processing the task, and
 * Abort execution if the task/run have been resolved.

If the `takenUntil` timestamp is exceeded the queue will resolve the run
as _exception_ with reason `claim-expired`, and proceeded to retry to the
task. This ensures that tasks are retried, even if workers disappear
without warning.

If the task is resolved, this end-point will return `409` reporting
`RequestConflict`. This typically happens if the task have been canceled
or the `task.deadline` have been exceeded. If reclaiming fails, workers
should abort the task and forget about the given `runId`. There is no
need to resolve the run or upload artifacts.'
Entry 13    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/completed'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[]'
    Entry Name        = 'reportCompleted'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:resolve-task:<taskId>/<runId>
- All of:
  * queue:resolve-task
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-status-response.json#'
    Entry Title       = 'Report Run Completed'
    Entry Description = 'Report a task completed, resolving the run as `completed`.'
Entry 14    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/failed'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[]'
    Entry Name        = 'reportFailed'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:resolve-task:<taskId>/<runId>
- All of:
  * queue:resolve-task
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-status-response.json#'
    Entry Title       = 'Report Run Failed'
    Entry Description = 'Report a run failed, resolving the run as `failed`. Use this to resolve
a run that failed because the task specific code behaved unexpectedly.
For example the task exited non-zero, or didn't produce expected output.

Do not use this if the task couldn't be run because if malformed
payload, or other unexpected condition. In these cases we have a task
exception, which should be reported with `reportException`.'
Entry 15    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/exception'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[]'
    Entry Name        = 'reportException'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:resolve-task:<taskId>/<runId>
- All of:
  * queue:resolve-task
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/task-exception-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/task-status-response.json#'
    Entry Title       = 'Report Task Exception'
    Entry Description = 'Resolve a run as _exception_. Generally, you will want to report tasks as
failed instead of exception. You should `reportException` if,

  * The `task.payload` is invalid,
  * Non-existent resources are referenced,
  * Declared actions cannot be executed due to unavailable resources,
  * The worker had to shutdown prematurely,
  * The worker experienced an unknown error, or,
  * The task explicitly requested a retry.

Do not use this to signal that some user-specified code crashed for any
reason specific to this code. If user-specific code hits a resource that
is temporarily unavailable worker should report task _failed_.'
Entry 16    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/artifacts/<name>'
    Entry Args        = '[taskId runId name]'
    Entry Query        = '[]'
    Entry Name        = 'createArtifact'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:create-artifact:<taskId>/<runId>
- All of:
  * queue:create-artifact:<name>
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#'
    Entry Title       = 'Create Artifact'
    Entry Description = 'This API end-point creates an artifact for a specific run of a task. This
should **only** be used by a worker currently operating on this task, or
from a process running within the task (ie. on the worker).

All artifacts must specify when they `expires`, the queue will
automatically take care of deleting artifacts past their
expiration point. This features makes it feasible to upload large
intermediate artifacts from data processing applications, as the
artifacts can be set to expire a few days later.

We currently support 3 different `storageType`s, each storage type have
slightly different features and in some cases difference semantics.
We also have 2 deprecated `storageType`s which are only maintained for
backwards compatiability and should not be used in new implementations

**Blob artifacts**, are useful for storing large files.  Currently, these
are all stored in S3 but there are facilities for adding support for other
backends in futre.  A call for this type of artifact must provide information
about the file which will be uploaded.  This includes sha256 sums and sizes.
This method will return a list of general form HTTP requests which are signed
by AWS S3 credentials managed by the Queue.  Once these requests are completed
the list of `ETag` values returned by the requests must be passed to the
queue `completeArtifact` method

**S3 artifacts**, DEPRECATED is useful for static files which will be
stored on S3. When creating an S3 artifact the queue will return a
pre-signed URL to which you can do a `PUT` request to upload your
artifact. Note that `PUT` request **must** specify the `content-length`
header and **must** give the `content-type` header the same value as in
the request to `createArtifact`.

**Azure artifacts**, DEPRECATED are stored in _Azure Blob Storage_ service
which given the consistency guarantees and API interface offered by Azure
is more suitable for artifacts that will be modified during the execution
of the task. For example docker-worker has a feature that persists the
task log to Azure Blob Storage every few seconds creating a somewhat
live log. A request to create an Azure artifact will return a URL
featuring a [Shared-Access-Signature](http://msdn.microsoft.com/en-us/library/azure/dn140256.aspx),
refer to MSDN for further information on how to use these.
**Warning: azure artifact is currently an experimental feature subject
to changes and data-drops.**

**Reference artifacts**, only consists of meta-data which the queue will
store for you. These artifacts really only have a `url` property and
when the artifact is requested the client will be redirect the URL
provided with a `303` (See Other) redirect. Please note that we cannot
delete artifacts you upload to other service, we can only delete the
reference to the artifact, when it expires.

**Error artifacts**, only consists of meta-data which the queue will
store for you. These artifacts are only meant to indicate that you the
worker or the task failed to generate a specific artifact, that you
would otherwise have uploaded. For example docker-worker will upload an
error artifact, if the file it was supposed to upload doesn't exists or
turns out to be a directory. Clients requesting an error artifact will
get a `403` (Forbidden) response. This is mainly designed to ensure that
dependent tasks can distinguish between artifacts that were suppose to
be generated and artifacts for which the name is misspelled.

**Artifact immutability**, generally speaking you cannot overwrite an
artifact when created. But if you repeat the request with the same
properties the request will succeed as the operation is idempotent.
This is useful if you need to refresh a signed URL while uploading.
Do not abuse this to overwrite artifacts created by another entity!
Such as worker-host overwriting artifact created by worker-code.

As a special case the `url` property on _reference artifacts_ can be
updated. You should only use this to update the `url` property for
reference artifacts your process has created.'
Entry 17    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/task/<taskId>/runs/<runId>/artifacts/<name>'
    Entry Args        = '[taskId runId name]'
    Entry Query        = '[]'
    Entry Name        = 'completeArtifact'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'Any of:
- queue:create-artifact:<taskId>/<runId>
- All of:
  * queue:create-artifact:<name>
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/put-artifact-request.json#'
    Entry Output      = ''
    Entry Title       = 'Complete Artifact'
    Entry Description = 'This endpoint finalises an upload done through the blob `storageType`.
The queue will ensure that the task/run is still allowing artifacts
to be uploaded.  For single-part S3 blob artifacts, this endpoint
will simply ensure the artifact is present in S3.  For multipart S3
artifacts, the endpoint will perform the commit step of the multipart
upload flow.  As the final step for both multi and single part artifacts,
the `present` entity field will be set to `true` to reflect that the
artifact is now present and a message published to pulse.  NOTE: This
endpoint *must* be called for all artifacts of storageType 'blob''
Entry 18    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/runs/<runId>/artifacts/<name>'
    Entry Args        = '[taskId runId name]'
    Entry Query        = '[]'
    Entry Name        = 'getArtifact'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If private:
  queue:get-artifact:<name>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Get Artifact from Run'
    Entry Description = 'Get artifact by `<name>` from a specific run.

**Public Artifacts**, in-order to get an artifact you need the scope
`queue:get-artifact:<name>`, where `<name>` is the name of the artifact.
But if the artifact `name` starts with `public/`, authentication and
authorization is not necessary to fetch the artifact.

**API Clients**, this method will redirect you to the artifact, if it is
stored externally. Either way, the response may not be JSON. So API
client users might want to generate a signed URL for this end-point and
use that URL with a normal HTTP client.

**Caching**, artifacts may be cached in data centers closer to the
workers in-order to reduce bandwidth costs. This can lead to longer
response times. Caching can be skipped by setting the header
`x-taskcluster-skip-cache: true`, this should only be used for resources
where request volume is known to be low, and caching not useful.
(This feature may be disabled in the future, use is sparingly!)'
Entry 19    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/artifacts/<name>'
    Entry Args        = '[taskId name]'
    Entry Query        = '[]'
    Entry Name        = 'getLatestArtifact'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If private:
  queue:get-artifact:<name>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Get Artifact from Latest Run'
    Entry Description = 'Get artifact by `<name>` from the last run of a task.

**Public Artifacts**, in-order to get an artifact you need the scope
`queue:get-artifact:<name>`, where `<name>` is the name of the artifact.
But if the artifact `name` starts with `public/`, authentication and
authorization is not necessary to fetch the artifact.

**API Clients**, this method will redirect you to the artifact, if it is
stored externally. Either way, the response may not be JSON. So API
client users might want to generate a signed URL for this end-point and
use that URL with a normal HTTP client.

**Remark**, this end-point is slightly slower than
`queue.getArtifact`, so consider that if you already know the `runId` of
the latest run. Otherwise, just us the most convenient API end-point.'
Entry 20    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/runs/<runId>/artifacts'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listArtifacts'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#'
    Entry Title       = 'Get Artifacts from Run'
    Entry Description = 'Returns a list of artifacts and associated meta-data for a given run.

As a task may have many artifacts paging may be necessary. If this
end-point returns a `continuationToken`, you should call the end-point
again with the `continuationToken` as the query-string option:
`continuationToken`.

By default this end-point will list up-to 1000 artifacts in a single page
you may limit this with the query-string parameter `limit`.'
Entry 21    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/artifacts'
    Entry Args        = '[taskId]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listLatestArtifacts'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#'
    Entry Title       = 'Get Artifacts from Latest Run'
    Entry Description = 'Returns a list of artifacts and associated meta-data for the latest run
from the given task.

As a task may have many artifacts paging may be necessary. If this
end-point returns a `continuationToken`, you should call the end-point
again with the `continuationToken` as the query-string option:
`continuationToken`.

By default this end-point will list up-to 1000 artifacts in a single page
you may limit this with the query-string parameter `limit`.'
Entry 22    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listProvisioners'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#'
    Entry Title       = 'Get a list of all active provisioners'
    Entry Description = 'Get all active provisioners.

The term "provisioner" is taken broadly to mean anything with a provisionerId.
This does not necessarily mean there is an associated service performing any
provisioning activity.

The response is paged. If this end-point returns a `continuationToken`, you
should call the end-point again with the `continuationToken` as a query-string
option. By default this end-point will list up to 1000 provisioners in a single
page. You may limit this with the query-string parameter `limit`.'
Entry 23    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners/<provisionerId>'
    Entry Args        = '[provisionerId]'
    Entry Query        = '[]'
    Entry Name        = 'getProvisioner'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/provisioner-response.json#'
    Entry Title       = 'Get an active provisioner'
    Entry Description = 'Get an active provisioner.

The term "provisioner" is taken broadly to mean anything with a provisionerId.
This does not necessarily mean there is an associated service performing any
provisioning activity.'
Entry 24    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/provisioners/<provisionerId>'
    Entry Args        = '[provisionerId]'
    Entry Query        = '[]'
    Entry Name        = 'declareProvisioner'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'For property in properties each queue:declare-provisioner:<provisionerId>#<property>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/update-provisioner-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/provisioner-response.json#'
    Entry Title       = 'Update a provisioner'
    Entry Description = 'Declare a provisioner, supplying some details about it.

`declareProvisioner` allows updating one or more properties of a provisioner as long as the required scopes are
possessed. For example, a request to update the `aws-provisioner-v1`
provisioner with a body `{description: 'This provisioner is great'}` would require you to have the scope
`queue:declare-provisioner:aws-provisioner-v1#description`.

The term "provisioner" is taken broadly to mean anything with a provisionerId.
This does not necessarily mean there is an associated service performing any
provisioning activity.'
Entry 25    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/pending/<provisionerId>/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'pendingTasks'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/pending-tasks-response.json#'
    Entry Title       = 'Get Number of Pending Tasks'
    Entry Description = 'Get an approximate number of pending tasks for the given `provisionerId`
and `workerType`.

The underlying Azure Storage Queues only promises to give us an estimate.
Furthermore, we cache the result in memory for 20 seconds. So consumers
should be no means expect this to be an accurate number.
It is, however, a solid estimate of the number of pending tasks.'
Entry 26    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners/<provisionerId>/worker-types'
    Entry Args        = '[provisionerId]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listWorkerTypes'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#'
    Entry Title       = 'Get a list of all active worker-types'
    Entry Description = 'Get all active worker-types for the given provisioner.

The response is paged. If this end-point returns a `continuationToken`, you
should call the end-point again with the `continuationToken` as a query-string
option. By default this end-point will list up to 1000 worker-types in a single
page. You may limit this with the query-string parameter `limit`.'
Entry 27    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'getWorkerType'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/workertype-response.json#'
    Entry Title       = 'Get a worker-type'
    Entry Description = 'Get a worker-type from a provisioner.'
Entry 28    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'declareWorkerType'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'For property in properties each queue:declare-worker-type:<provisionerId>/<workerType>#<property>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/update-workertype-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/workertype-response.json#'
    Entry Title       = 'Update a worker-type'
    Entry Description = 'Declare a workerType, supplying some details about it.

`declareWorkerType` allows updating one or more properties of a worker-type as long as the required scopes are
possessed. For example, a request to update the `gecko-b-1-w2008` worker-type within the `aws-provisioner-v1`
provisioner with a body `{description: 'This worker type is great'}` would require you to have the scope
`queue:declare-worker-type:aws-provisioner-v1/gecko-b-1-w2008#description`.'
Entry 29    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>/workers'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[continuationToken limit quarantined]'
    Entry Name        = 'listWorkers'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/list-workers-response.json#'
    Entry Title       = 'Get a list of all active workers of a workerType'
    Entry Description = 'Get a list of all active workers of a workerType.

`listWorkers` allows a response to be filtered by quarantined and non quarantined workers.
To filter the query, you should call the end-point with `quarantined` as a query-string option with a
true or false value.

The response is paged. If this end-point returns a `continuationToken`, you
should call the end-point again with the `continuationToken` as a query-string
option. By default this end-point will list up to 1000 workers in a single
page. You may limit this with the query-string parameter `limit`.'
Entry 30    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>/workers/<workerGroup>/<workerId>'
    Entry Args        = '[provisionerId workerType workerGroup workerId]'
    Entry Query        = '[]'
    Entry Name        = 'getWorker'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/worker-response.json#'
    Entry Title       = 'Get a worker-type'
    Entry Description = 'Get a worker from a worker-type.'
Entry 31    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>/workers/<workerGroup>/<workerId>'
    Entry Args        = '[provisionerId workerType workerGroup workerId]'
    Entry Query        = '[]'
    Entry Name        = 'quarantineWorker'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'queue:quarantine-worker:<provisionerId>/<workerType>/<workerGroup>/<workerId>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/quarantine-worker-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/worker-response.json#'
    Entry Title       = 'Quarantine a worker'
    Entry Description = 'Quarantine a worker'
Entry 32    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>/<workerGroup>/<workerId>'
    Entry Args        = '[provisionerId workerType workerGroup workerId]'
    Entry Query        = '[]'
    Entry Name        = 'declareWorker'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'For property in properties each queue:declare-worker:<provisionerId>/<workerType>/<workerGroup>/<workerId>#<property>'
    Entry Input       = 'http://schemas.taskcluster.net/queue/v1/update-worker-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/queue/v1/worker-response.json#'
    Entry Title       = 'Declare a worker'
    Entry Description = 'Declare a worker, supplying some details about it.

`declareWorker` allows updating one or more properties of a worker as long as the required scopes are
possessed.'
Entry 33    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/queue/v1/actions.json#
=====================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#
TYPE_NAME: Actions1[]
description: |
  See taskcluster [actions](https://docs.taskcluster.net/reference/platform/taskcluster-queue/docs/actions) documentation.
id: http://schemas.taskcluster.net/queue/v1/actions.json#
items:
  IS_REQUIRED: false
  PROPERTY_NAME: ' entry'
  SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items
  TYPE_NAME: Actions1
  additionalProperties:
    Boolean: false
    Properties: null
  description: |
    Actions provide a generic mechanism to expose additional features of a
    provisioner, worker type, or worker to Taskcluster clients.

    An action is comprised of metadata describing the feature it exposes,
    together with a webhook for triggering it.

    The Taskcluster tools site, for example, retrieves actions when displaying
    provisioners, worker types and workers. It presents the provisioner/worker
    type/worker specific actions to the user. When the user triggers an action,
    the web client takes the registered webhook, substitutes parameters into the
    URL (see `url`), signs the requests with the Taskcluster credentials of the
    user operating the web interface, and issues the HTTP request.

    The level to which the action relates (provisioner, worker type, worker) is
    called the action context. All actions, regardless of the action contexts,
    are registered against the provisioner when calling
    `queue.declareProvisioner`.

    The action context is used by the web client to determine where in the web
    interface to present the action to the user as follows:

    | `context`   | Tool where action is displayed |
    |-------------|--------------------------------|
    | provisioner | Provisioner Explorer           |
    | worker-type | Workers Explorer               |
    | worker      | Worker Explorer                |

    See [actions docs](https://docs.taskcluster.net/reference/platform/taskcluster-queue/docs/actions)
    for more information.
  properties:
    MemberNames:
      context: context
      description: description
      method: method
      name: name
      title: title
      url: url
    Properties:
      context:
        IS_REQUIRED: true
        PROPERTY_NAME: context
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/context
        TYPE_NAME: Context
        description: |
          Actions have a "context" that is one of provisioner, worker-type, or worker, indicating
          which it applies to. `context` is used by the front-end to know where to display the action.

          | `context`   | Page displayed        |
          |-------------|-----------------------|
          | provisioner | Provisioner Explorer  |
          | worker-type | Workers Explorer      |
          | worker      | Worker Explorer       |
        enum:
        - provisioner
        - worker-type
        - worker
        title: Context
        type: string
      description:
        IS_REQUIRED: true
        PROPERTY_NAME: description
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/description
        TYPE_NAME: Description
        description: |
          Description of the provisioner.
        title: Description
        type: string
      method:
        IS_REQUIRED: true
        PROPERTY_NAME: method
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/method
        TYPE_NAME: Method
        description: |
          Method to indicate the desired action to be performed for a given resource.
        enum:
        - POST
        - PUT
        - DELETE
        - PATCH
        title: Method
        type: string
      name:
        IS_REQUIRED: true
        PROPERTY_NAME: name
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/name
        TYPE_NAME: Name
        description: |
          Short names for things like logging/error messages.
        title: Name
        type: string
      title:
        IS_REQUIRED: true
        PROPERTY_NAME: title
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/title
        TYPE_NAME: Title
        description: |
          Appropriate title for any sort of Modal prompt.
        title: Title
      url:
        IS_REQUIRED: true
        PROPERTY_NAME: url
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/url
        TYPE_NAME: URL
        description: |
          When an action is triggered, a request is made using the `url` and `method`.
          Depending on the `context`, the following parameters will be substituted in the url:

          | `context`   | Path parameters                                          |
          |-------------|----------------------------------------------------------|
          | provisioner | <provisionerId>                                          |
          | worker-type | <provisionerId>, <workerType>                            |
          | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

          _Note: The request needs to be signed with the user's Taskcluster credentials._
        title: URL
        type: string
    SortedPropertyNames:
    - context
    - description
    - method
    - name
    - title
    - url
    SourceURL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties
  required:
  - name
  - title
  - context
  - url
  - method
  - description
  title: Actions
  type: object
title: Actions
type: array


http://schemas.taskcluster.net/queue/v1/claim-work-request.json#
================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-request.json#
TYPE_NAME: ClaimWorkRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to claim a task for a worker to process.
id: http://schemas.taskcluster.net/queue/v1/claim-work-request.json#
properties:
  MemberNames:
    tasks: tasks
    workerGroup: workerGroup
    workerId: workerId
  Properties:
    tasks:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-request.json#/properties/tasks
      TYPE_NAME: Tasks
      default: 1
      description: |
        Number of tasks to attempt to claim.
      maximum: 32
      minimum: 1
      type: integer
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-request.json#/properties/workerGroup
      TYPE_NAME: WorkerGroup
      description: |
        Identifier for group that worker claiming the task is a part of.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-request.json#/properties/workerId
      TYPE_NAME: WorkerId
      description: |
        Identifier for worker within the given workerGroup
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - tasks
  - workerGroup
  - workerId
  SourceURL: http://schemas.taskcluster.net/queue/v1/claim-work-request.json#/properties
required:
- workerGroup
- workerId
- tasks
title: Claim Work Request
type: object


http://schemas.taskcluster.net/queue/v1/claim-work-response.json#
=================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#
TYPE_NAME: ClaimWorkResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to an attempt to claim tasks for a worker to process.
id: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#
properties:
  MemberNames:
    tasks: tasks
  Properties:
    tasks:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks
      TYPE_NAME: Tasks
      description: |
        List of task claims, may be empty if no tasks was claimed, in which case
        the worker should sleep a tiny bit before polling again.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: tasks entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items
        TYPE_NAME: TasksEntry
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            credentials: credentials
            runId: runId
            status: status
            takenUntil: takenUntil
            task: task
            workerGroup: workerGroup
            workerId: workerId
          Properties:
            credentials:
              IS_REQUIRED: true
              PROPERTY_NAME: credentials
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/credentials
              TYPE_NAME: Credentials
              additionalProperties:
                Boolean: false
                Properties: null
              description: |
                Temporary credentials granting `task.scopes` and the scope:
                `queue:claim-task:<taskId>/<runId>` which allows the worker to reclaim
                the task, upload artifacts and report task resolution.

                The temporary credentials are set to expire after `takenUntil`. They
                won't expire exactly at `takenUntil` but shortly after, hence, requests
                coming close `takenUntil` won't have problems even if there is a little
                clock drift.

                Workers should use these credentials when making requests on behalf of
                a task. This includes requests to create artifacts, reclaiming the task
                reporting the task `completed`, `failed` or `exception`.

                Note, a new set of temporary credentials is issued when the worker
                reclaims the task.
              properties:
                MemberNames:
                  accessToken: accessToken
                  certificate: certificate
                  clientId: clientId
                Properties:
                  accessToken:
                    IS_REQUIRED: true
                    PROPERTY_NAME: accessToken
                    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/credentials/properties/accessToken
                    TYPE_NAME: AccessToken
                    description: |
                      The `accessToken` for the temporary credentials.
                    minLength: 1
                    type: string
                  certificate:
                    IS_REQUIRED: true
                    PROPERTY_NAME: certificate
                    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/credentials/properties/certificate
                    TYPE_NAME: Certificate
                    description: |
                      The `certificate` for the temporary credentials, these are required
                      for the temporary credentials to work.
                    minLength: 1
                    type: string
                  clientId:
                    IS_REQUIRED: true
                    PROPERTY_NAME: clientId
                    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/credentials/properties/clientId
                    TYPE_NAME: ClientId
                    description: |
                      The `clientId` for the temporary credentials.
                    minLength: 1
                    type: string
                SortedPropertyNames:
                - accessToken
                - certificate
                - clientId
                SourceURL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/credentials/properties
              required:
              - clientId
              - accessToken
              - certificate
              type: object
            runId:
              IS_REQUIRED: true
              PROPERTY_NAME: runId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/runId
              TYPE_NAME: RunId
              description: |
                `run-id` assigned to this run of the task
              maximum: 1000
              minimum: 0
              type: integer
            status:
              $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
              IS_REQUIRED: true
              PROPERTY_NAME: status
              REF_SUBSCHEMA:
                $schema: http://json-schema.org/draft-06/schema#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
                TYPE_NAME: TaskStatusStructure
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  A representation of **task status** as known by the queue
                id: http://schemas.taskcluster.net/queue/v1/task-status.json#
                properties:
                  MemberNames:
                    deadline: deadline
                    expires: expires
                    provisionerId: provisionerId
                    retriesLeft: retriesLeft
                    runs: runs
                    schedulerId: schedulerId
                    state: state
                    taskGroupId: taskGroupId
                    taskId: taskId
                    workerType: workerType
                  Properties:
                    deadline:
                      IS_REQUIRED: true
                      PROPERTY_NAME: deadline
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
                      TYPE_NAME: Deadline
                      description: |
                        Deadline of the task, `pending` and `running` runs are
                        resolved as **exception** if not resolved by other means
                        before the deadline. Note, deadline cannot be more than
                        5 days into the future
                      format: date-time
                      title: Deadline
                      type: string
                    expires:
                      IS_REQUIRED: true
                      PROPERTY_NAME: expires
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
                      TYPE_NAME: Expiration
                      description: |
                        Task expiration, time at which task definition and
                        status is deleted. Notice that all artifacts for the task
                        must have an expiration that is no later than this.
                      format: date-time
                      title: Expiration
                      type: string
                    provisionerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: provisionerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
                      TYPE_NAME: ProvisionerId
                      description: |
                        Unique identifier for the provisioner that this task must be scheduled on
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Provisioner Id
                      type: string
                    retriesLeft:
                      IS_REQUIRED: true
                      PROPERTY_NAME: retriesLeft
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
                      TYPE_NAME: RetriesLeft
                      description: |
                        Number of retries left for the task in case of infrastructure issues
                      maximum: 999
                      minimum: 0
                      title: Retries Left
                      type: integer
                    runs:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runs
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
                      TYPE_NAME: ListOfRuns
                      description: |
                        List of runs, ordered so that index `i` has `runId == i`
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: runs entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                        TYPE_NAME: RunInformation
                        additionalProperties:
                          Boolean: false
                          Properties: null
                        description: |
                          JSON object with information about a run
                        properties:
                          MemberNames:
                            reasonCreated: reasonCreated
                            reasonResolved: reasonResolved
                            resolved: resolved
                            runId: runId
                            scheduled: scheduled
                            started: started
                            state: state
                            takenUntil: takenUntil
                            workerGroup: workerGroup
                            workerId: workerId
                          Properties:
                            reasonCreated:
                              IS_REQUIRED: true
                              PROPERTY_NAME: reasonCreated
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                              TYPE_NAME: ReasonCreated
                              description: |
                                Reason for the creation of this run,
                                **more reasons may be added in the future**.
                              enum:
                              - scheduled
                              - retry
                              - task-retry
                              - rerun
                              - exception
                              title: Reason Created
                              type: string
                            reasonResolved:
                              IS_REQUIRED: false
                              PROPERTY_NAME: reasonResolved
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                              TYPE_NAME: ReasonResolved
                              description: |
                                Reason that run was resolved, this is mainly
                                useful for runs resolved as `exception`.
                                Note, **more reasons may be added in the future**, also this
                                property is only available after the run is resolved. Some of these
                                reasons, notably `intermittent-task`, `worker-shutdown`, and
                                `claim-expired`, will trigger an automatic retry of the task.
                              enum:
                              - completed
                              - failed
                              - deadline-exceeded
                              - canceled
                              - superseded
                              - claim-expired
                              - worker-shutdown
                              - malformed-payload
                              - resource-unavailable
                              - internal-error
                              - intermittent-task
                              title: Reason Resolved
                              type: string
                            resolved:
                              IS_REQUIRED: false
                              PROPERTY_NAME: resolved
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                              TYPE_NAME: Resolved
                              description: |
                                Date-time at which this run was resolved, ie. when the run changed
                                state from `running` to either `completed`, `failed` or `exception`.
                                This property is only present after the run as been resolved.
                              format: date-time
                              title: Resolved
                              type: string
                            runId:
                              IS_REQUIRED: true
                              PROPERTY_NAME: runId
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                              TYPE_NAME: RunIdentifier
                              description: |
                                Id of this task run, `run-id`s always starts from `0`
                              maximum: 1000
                              minimum: 0
                              title: Run Identifier
                              type: integer
                            scheduled:
                              IS_REQUIRED: true
                              PROPERTY_NAME: scheduled
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                              TYPE_NAME: Scheduled
                              description: |
                                Date-time at which this run was scheduled, ie. when the run was
                                created in state `pending`.
                              format: date-time
                              title: Scheduled
                              type: string
                            started:
                              IS_REQUIRED: false
                              PROPERTY_NAME: started
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                              TYPE_NAME: Started
                              description: |
                                Date-time at which this run was claimed, ie. when the run changed
                                state from `pending` to `running`. This property is only present
                                after the run has been claimed.
                              format: date-time
                              title: Started
                              type: string
                            state:
                              IS_REQUIRED: true
                              PROPERTY_NAME: state
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                              TYPE_NAME: RunState
                              description: |
                                State of this run
                              enum:
                              - pending
                              - running
                              - completed
                              - failed
                              - exception
                              title: Run State
                              type: string
                            takenUntil:
                              IS_REQUIRED: false
                              PROPERTY_NAME: takenUntil
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                              TYPE_NAME: TakenUntil
                              description: |
                                Time at which the run expires and is resolved as `failed`, if the
                                run isn't reclaimed. Note, only present after the run has been
                                claimed.
                              format: date-time
                              title: Taken Until
                              type: string
                            workerGroup:
                              IS_REQUIRED: false
                              PROPERTY_NAME: workerGroup
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                              TYPE_NAME: WorkerGroup
                              description: |
                                Identifier for group that worker who executes this run is a part of,
                                this identifier is mainly used for efficient routing.
                                Note, this property is only present after the run is claimed.
                              maxLength: 22
                              minLength: 1
                              pattern: ^([a-zA-Z0-9-_]*)$
                              title: Worker Group
                              type: string
                            workerId:
                              IS_REQUIRED: false
                              PROPERTY_NAME: workerId
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                              TYPE_NAME: WorkerIdentifier
                              description: |
                                Identifier for worker evaluating this run within given
                                `workerGroup`. Note, this property is only available after the run
                                has been claimed.
                              maxLength: 22
                              minLength: 1
                              pattern: ^([a-zA-Z0-9-_]*)$
                              title: Worker Identifier
                              type: string
                          SortedPropertyNames:
                          - reasonCreated
                          - reasonResolved
                          - resolved
                          - runId
                          - scheduled
                          - started
                          - state
                          - takenUntil
                          - workerGroup
                          - workerId
                          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                        required:
                        - runId
                        - state
                        - reasonCreated
                        - scheduled
                        title: Run Information
                        type: object
                      title: List of Runs
                      type: array
                    schedulerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: schedulerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
                      TYPE_NAME: SchedulerIdentifier
                      description: |
                        Identifier for the scheduler that _defined_ this task.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Scheduler Identifier
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
                      TYPE_NAME: State
                      description: |
                        State of this task. This is just an auxiliary property derived from state
                        of latests run, or `unscheduled` if none.
                      enum:
                      - unscheduled
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: State
                      type: string
                    taskGroupId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskGroupId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
                      TYPE_NAME: TaskGroupIdentifier
                      description: |
                        Identifier for a group of tasks scheduled together with this task, by
                        scheduler identified by `schedulerId`. For tasks scheduled by the
                        task-graph scheduler, this is the `taskGraphId`.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task-Group Identifier
                      type: string
                    taskId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
                      TYPE_NAME: TaskIdentifier
                      description: |
                        Unique task identifier, this is UUID encoded as
                        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                        stripped of `=` padding.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task Identifier
                      type: string
                    workerType:
                      IS_REQUIRED: true
                      PROPERTY_NAME: workerType
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
                      TYPE_NAME: WorkerType
                      description: |
                        Identifier for worker type within the specified provisioner
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Type
                      type: string
                  SortedPropertyNames:
                  - deadline
                  - expires
                  - provisionerId
                  - retriesLeft
                  - runs
                  - schedulerId
                  - state
                  - taskGroupId
                  - taskId
                  - workerType
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
                required:
                - taskId
                - provisionerId
                - workerType
                - schedulerId
                - taskGroupId
                - deadline
                - expires
                - retriesLeft
                - state
                - runs
                title: Task Status Structure
                type: object
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/status
              TYPE_NAME: Status
            takenUntil:
              IS_REQUIRED: true
              PROPERTY_NAME: takenUntil
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/takenUntil
              TYPE_NAME: TakenUntil
              description: |
                Time at which the run expires and is resolved as `exception`,
                with reason `claim-expired` if the run haven't been reclaimed.
              format: date-time
              type: string
            task:
              $ref: http://schemas.taskcluster.net/queue/v1/task.json#
              IS_REQUIRED: true
              PROPERTY_NAME: task
              REF_SUBSCHEMA:
                $schema: http://json-schema.org/draft-06/schema#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#
                TYPE_NAME: TaskDefinitionResponse
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  Definition of a task that can be scheduled
                id: http://schemas.taskcluster.net/queue/v1/task.json#
                properties:
                  MemberNames:
                    created: created
                    deadline: deadline
                    dependencies: dependencies
                    expires: expires
                    extra: extra
                    metadata: metadata
                    payload: payload
                    priority: priority
                    provisionerId: provisionerId
                    requires: requires
                    retries: retries
                    routes: routes
                    schedulerId: schedulerId
                    scopes: scopes
                    tags: tags
                    taskGroupId: taskGroupId
                    workerType: workerType
                  Properties:
                    created:
                      IS_REQUIRED: true
                      PROPERTY_NAME: created
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/created
                      TYPE_NAME: Created
                      description: Creation time of task
                      format: date-time
                      title: Created
                      type: string
                    deadline:
                      IS_REQUIRED: true
                      PROPERTY_NAME: deadline
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/deadline
                      TYPE_NAME: Deadline
                      description: |
                        Deadline of the task, `pending` and `running` runs are
                        resolved as **exception** if not resolved by other means
                        before the deadline. Note, deadline cannot be more than
                        5 days into the future
                      format: date-time
                      title: Deadline
                      type: string
                    dependencies:
                      IS_REQUIRED: true
                      PROPERTY_NAME: dependencies
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/dependencies
                      TYPE_NAME: TaskDependencies
                      description: |
                        List of dependent tasks. These must either be _completed_ or _resolved_
                        before this task is scheduled. See `requires` for semantics.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: dependencies entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/dependencies/items
                        TYPE_NAME: TaskDependency
                        description: |
                          The `taskId` of a task that must be resolved before this task is
                          scheduled.
                        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                        title: Task Dependency
                        type: string
                      maxItems: 100
                      title: Task Dependencies
                      type: array
                      uniqueItems: true
                    expires:
                      IS_REQUIRED: false
                      PROPERTY_NAME: expires
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/expires
                      TYPE_NAME: Expiration
                      description: |
                        Task expiration, time at which task definition and status is deleted.
                        Notice that all artifacts for the task must have an expiration that is no
                        later than this. If this property isn't it will be set to `deadline`
                        plus one year (this default may subject to change).
                      format: date-time
                      title: Expiration
                      type: string
                    extra:
                      IS_REQUIRED: true
                      PROPERTY_NAME: extra
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/extra
                      TYPE_NAME: ExtraData
                      default: {}
                      description: |
                        Object with properties that can hold any kind of extra data that should be
                        associated with the task. This can be data for the task which doesn't
                        fit into `payload`, or it can supplementary data for use in services
                        listening for events from this task. For example this could be details to
                        display on _treeherder_, or information for indexing the task. Please, try
                        to put all related information under one property, so `extra` data keys
                        for treeherder reporting and task indexing don't conflict, hence, we have
                        reusable services. **Warning**, do not stuff large data-sets in here,
                        task definitions should not take-up multiple MiBs.
                      title: Extra Data
                      type: object
                    metadata:
                      IS_REQUIRED: true
                      PROPERTY_NAME: metadata
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata
                      TYPE_NAME: MetaData
                      additionalProperties:
                        Boolean: false
                        Properties: null
                      description: |
                        Required task metadata
                      properties:
                        MemberNames:
                          description: description
                          name: name
                          owner: owner
                          source: source
                        Properties:
                          description:
                            IS_REQUIRED: true
                            PROPERTY_NAME: description
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/description
                            TYPE_NAME: Description
                            description: |
                              Human readable description of the task, please **explain** what the
                              task does. A few lines of documentation is not going to hurt you.
                            maxLength: 32768
                            title: Description
                            type: string
                          name:
                            IS_REQUIRED: true
                            PROPERTY_NAME: name
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/name
                            TYPE_NAME: Name
                            description: |
                              Human readable name of task, used to very briefly given an idea about
                              what the task does.
                            maxLength: 255
                            title: Name
                            type: string
                          owner:
                            IS_REQUIRED: true
                            PROPERTY_NAME: owner
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/owner
                            TYPE_NAME: Owner
                            description: |
                              E-mail of person who caused this task, e.g. the person who did
                              `hg push`. The person we should contact to ask why this task is here.
                            format: email
                            maxLength: 255
                            title: Owner
                            type: string
                          source:
                            IS_REQUIRED: true
                            PROPERTY_NAME: source
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/source
                            TYPE_NAME: Source
                            description: |
                              Link to source of this task, should specify a file, revision and
                              repository. This should be place someone can go an do a git/hg blame
                              to who came up with recipe for this task.
                            format: uri
                            maxLength: 4096
                            pattern: ^https?://
                            title: Source
                            type: string
                        SortedPropertyNames:
                        - description
                        - name
                        - owner
                        - source
                        SourceURL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties
                      required:
                      - name
                      - description
                      - owner
                      - source
                      title: Meta-data
                      type: object
                    payload:
                      IS_REQUIRED: true
                      PROPERTY_NAME: payload
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/payload
                      TYPE_NAME: TaskPayload
                      description: |
                        Task-specific payload following worker-specific format. For example the
                        `docker-worker` requires keys like: `image`, `commands` and
                        `features`. Refer to the documentation of `docker-worker` for details.
                      title: Task Payload
                      type: object
                    priority:
                      IS_REQUIRED: true
                      PROPERTY_NAME: priority
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/priority
                      TYPE_NAME: TaskPriority
                      description: |
                        Priority of task, this defaults to `lowest` and the scope
                        `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
                        to define a task with `<priority>`.
                      enum:
                      - highest
                      - very-high
                      - high
                      - medium
                      - low
                      - very-low
                      - lowest
                      title: Task Priority
                      type: string
                    provisionerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: provisionerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/provisionerId
                      TYPE_NAME: ProvisionerId
                      description: |
                        Unique identifier for a provisioner, that can supply specified
                        `workerType`
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Provisioner Id
                      type: string
                    requires:
                      IS_REQUIRED: true
                      PROPERTY_NAME: requires
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/requires
                      TYPE_NAME: DependencyRequirementSemantics
                      description: |
                        The tasks relation to its dependencies. This property specifies the
                        semantics of the `task.dependencies` property.
                        If `all-completed` is given the task will be scheduled when all
                        dependencies are resolved _completed_ (successful resolution).
                        If `all-resolved` is given the task will be scheduled when all dependencies
                        have been resolved, regardless of what their resolution is.
                      enum:
                      - all-completed
                      - all-resolved
                      title: Dependency Requirement Semantics
                      type: string
                    retries:
                      IS_REQUIRED: true
                      PROPERTY_NAME: retries
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/retries
                      TYPE_NAME: Retries
                      description: |
                        Number of times to retry the task in case of infrastructure issues.
                        An _infrastructure issue_ is a worker node that crashes or is shutdown,
                        these events are to be expected.
                      maximum: 49
                      minimum: 0
                      title: Retries
                      type: integer
                    routes:
                      IS_REQUIRED: true
                      PROPERTY_NAME: routes
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/routes
                      TYPE_NAME: TaskSpecificRoutes
                      description: |
                        List of task specific routes, AMQP messages will be CC'ed to these routes.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: routes entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/routes/items
                        TYPE_NAME: TaskSpecificRoute
                        description: |
                          A task specific route, AMQP messages will be CC'ed with a routing key
                          matching `route.<task-specific route>`. It's possible to dot (`.`) in
                          the task specific route to make sub-keys, etc. See the RabbitMQ
                          [tutorial](http://www.rabbitmq.com/tutorials/tutorial-five-python.html)
                          for examples on how to use routing-keys.
                        maxLength: 249
                        minLength: 1
                        title: Task Specific Route
                        type: string
                      maxItems: 64
                      title: Task Specific Routes
                      type: array
                      uniqueItems: true
                    schedulerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: schedulerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/schedulerId
                      TYPE_NAME: SchedulerIdentifier
                      description: |
                        Identifier for the scheduler that _defined_ this task, this can be an
                        identifier for a user or a service like the `"task-graph-scheduler"`.
                        Along with the `taskGroupId` this is used to form the permission scope
                        `queue:assume:scheduler-id:<schedulerId>/<taskGroupId>`,
                        this scope is necessary to _schedule_ a defined task, or _rerun_ a task.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Scheduler Identifier
                      type: string
                    scopes:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scopes
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/scopes
                      TYPE_NAME: Scopes
                      description: |
                        List of scopes (or scope-patterns) that the task is
                        authorized to use.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: scopes entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/scopes/items
                        TYPE_NAME: Scope
                        description: |
                          A scope (or scope-patterns) which the task is
                          authorized to use. This can be a string or a string
                          ending with `*` which will authorize all scopes for
                          which the string is a prefix.  Scopes must be composed of
                          printable ASCII characters and spaces.
                        pattern: ^[\x20-\x7e]*$
                        title: Scope
                        type: string
                      title: Scopes
                      type: array
                    tags:
                      IS_REQUIRED: true
                      PROPERTY_NAME: tags
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/tags
                      TYPE_NAME: Tags
                      additionalProperties:
                        Boolean: null
                        Properties:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: ""
                          TYPE_NAME: ""
                          maxLength: 4096
                          type: string
                      description: |
                        Arbitrary key-value tags (only strings limited to 4k). These can be used
                        to attach informal meta-data to a task. Use this for informal tags that
                        tasks can be classified by. You can also think of strings here as
                        candidates for formal meta-data. Something like
                        `purpose: 'build' || 'test'` is a good example.
                      title: Tags
                      type: object
                    taskGroupId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskGroupId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/taskGroupId
                      TYPE_NAME: TaskGroupIdentifier
                      description: |
                        Identifier for a group of tasks scheduled together with this task, by
                        scheduler identified by `schedulerId`. For tasks scheduled by the
                        task-graph scheduler, this is the `taskGraphId`.  Defaults to `taskId` if
                        property isn't specified.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task-Group Identifier
                      type: string
                    workerType:
                      IS_REQUIRED: true
                      PROPERTY_NAME: workerType
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/workerType
                      TYPE_NAME: WorkerType
                      description: |
                        Unique identifier for a worker-type within a specific provisioner
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Type
                      type: string
                  SortedPropertyNames:
                  - created
                  - deadline
                  - dependencies
                  - expires
                  - extra
                  - metadata
                  - payload
                  - priority
                  - provisionerId
                  - requires
                  - retries
                  - routes
                  - schedulerId
                  - scopes
                  - tags
                  - taskGroupId
                  - workerType
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task.json#/properties
                required:
                - provisionerId
                - workerType
                - schedulerId
                - taskGroupId
                - dependencies
                - requires
                - routes
                - priority
                - retries
                - created
                - deadline
                - scopes
                - payload
                - metadata
                - tags
                - extra
                title: Task Definition Response
                type: object
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/task
              TYPE_NAME: Task
            workerGroup:
              IS_REQUIRED: true
              PROPERTY_NAME: workerGroup
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/workerGroup
              TYPE_NAME: WorkerGroup
              description: |
                Identifier for the worker-group within which this run started.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              type: string
            workerId:
              IS_REQUIRED: true
              PROPERTY_NAME: workerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties/workerId
              TYPE_NAME: WorkerId
              description: |
                Identifier for the worker executing this run.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              type: string
          SortedPropertyNames:
          - credentials
          - runId
          - status
          - takenUntil
          - task
          - workerGroup
          - workerId
          SourceURL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties/tasks/items/properties
        required:
        - status
        - runId
        - workerGroup
        - workerId
        - takenUntil
        - task
        - credentials
        type: object
      type: array
  SortedPropertyNames:
  - tasks
  SourceURL: http://schemas.taskcluster.net/queue/v1/claim-work-response.json#/properties
required:
- tasks
title: Claim Work Response
type: object


http://schemas.taskcluster.net/queue/v1/create-task-request.json#
=================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#
TYPE_NAME: TaskDefinitionRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Definition of a task that can be scheduled
id: http://schemas.taskcluster.net/queue/v1/create-task-request.json#
properties:
  MemberNames:
    created: created
    deadline: deadline
    dependencies: dependencies
    expires: expires
    extra: extra
    metadata: metadata
    payload: payload
    priority: priority
    provisionerId: provisionerId
    requires: requires
    retries: retries
    routes: routes
    schedulerId: schedulerId
    scopes: scopes
    tags: tags
    taskGroupId: taskGroupId
    workerType: workerType
  Properties:
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/created
      TYPE_NAME: Created
      description: Creation time of task
      format: date-time
      title: Created
      type: string
    deadline:
      IS_REQUIRED: true
      PROPERTY_NAME: deadline
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/deadline
      TYPE_NAME: Deadline
      description: |
        Deadline of the task, `pending` and `running` runs are
        resolved as **exception** if not resolved by other means
        before the deadline. Note, deadline cannot be more than
        5 days into the future
      format: date-time
      title: Deadline
      type: string
    dependencies:
      IS_REQUIRED: false
      PROPERTY_NAME: dependencies
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/dependencies
      TYPE_NAME: TaskDependencies
      default: []
      description: |
        List of dependent tasks. These must either be _completed_ or _resolved_
        before this task is scheduled. See `requires` for semantics.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: dependencies entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/dependencies/items
        TYPE_NAME: TaskDependency
        description: |
          The `taskId` of a task that must be resolved before this task is
          scheduled.
        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
        title: Task Dependency
        type: string
      maxItems: 100
      title: Task Dependencies
      type: array
      uniqueItems: true
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/expires
      TYPE_NAME: Expiration
      description: |
        Task expiration, time at which task definition and status is deleted.
        Notice that all artifacts for the task must have an expiration that is no
        later than this. If this property isn't it will be set to `deadline`
        plus one year (this default may subject to change).
      format: date-time
      title: Expiration
      type: string
    extra:
      IS_REQUIRED: false
      PROPERTY_NAME: extra
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/extra
      TYPE_NAME: ExtraData
      default: {}
      description: |
        Object with properties that can hold any kind of extra data that should be
        associated with the task. This can be data for the task which doesn't
        fit into `payload`, or it can supplementary data for use in services
        listening for events from this task. For example this could be details to
        display on _treeherder_, or information for indexing the task. Please, try
        to put all related information under one property, so `extra` data keys
        for treeherder reporting and task indexing don't conflict, hence, we have
        reusable services. **Warning**, do not stuff large data-sets in here,
        task definitions should not take-up multiple MiBs.
      title: Extra Data
      type: object
    metadata:
      IS_REQUIRED: true
      PROPERTY_NAME: metadata
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/metadata
      TYPE_NAME: MetaData
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Required task metadata
      properties:
        MemberNames:
          description: description
          name: name
          owner: owner
          source: source
        Properties:
          description:
            IS_REQUIRED: true
            PROPERTY_NAME: description
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/metadata/properties/description
            TYPE_NAME: Description
            description: |
              Human readable description of the task, please **explain** what the
              task does. A few lines of documentation is not going to hurt you.
            maxLength: 32768
            title: Description
            type: string
          name:
            IS_REQUIRED: true
            PROPERTY_NAME: name
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/metadata/properties/name
            TYPE_NAME: Name
            description: |
              Human readable name of task, used to very briefly given an idea about
              what the task does.
            maxLength: 255
            title: Name
            type: string
          owner:
            IS_REQUIRED: true
            PROPERTY_NAME: owner
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/metadata/properties/owner
            TYPE_NAME: Owner
            description: |
              E-mail of person who caused this task, e.g. the person who did
              `hg push`. The person we should contact to ask why this task is here.
            format: email
            maxLength: 255
            title: Owner
            type: string
          source:
            IS_REQUIRED: true
            PROPERTY_NAME: source
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/metadata/properties/source
            TYPE_NAME: Source
            description: |
              Link to source of this task, should specify a file, revision and
              repository. This should be place someone can go an do a git/hg blame
              to who came up with recipe for this task.
            format: uri
            maxLength: 4096
            pattern: ^https?://
            title: Source
            type: string
        SortedPropertyNames:
        - description
        - name
        - owner
        - source
        SourceURL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/metadata/properties
      required:
      - name
      - description
      - owner
      - source
      title: Meta-data
      type: object
    payload:
      IS_REQUIRED: true
      PROPERTY_NAME: payload
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/payload
      TYPE_NAME: TaskPayload
      description: |
        Task-specific payload following worker-specific format. For example the
        `docker-worker` requires keys like: `image`, `commands` and
        `features`. Refer to the documentation of `docker-worker` for details.
      title: Task Payload
      type: object
    priority:
      IS_REQUIRED: false
      PROPERTY_NAME: priority
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/priority
      TYPE_NAME: TaskPriority
      default: lowest
      description: |
        Priority of task, this defaults to `lowest`, equivalent to the
        _deprecated_ `normal`.
        **Task submitter required scopes** `queue:task-priority:high` for high
        priority tasks.
      enum:
      - highest
      - very-high
      - high
      - medium
      - low
      - very-low
      - lowest
      - normal
      title: Task Priority
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/provisionerId
      TYPE_NAME: ProvisionerId
      description: |
        Unique identifier for a provisioner, that can supply specified
        `workerType`
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner Id
      type: string
    requires:
      IS_REQUIRED: false
      PROPERTY_NAME: requires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/requires
      TYPE_NAME: DependencyRequirementSemantics
      default: all-completed
      description: |
        The tasks relation to its dependencies. This property specifies the
        semantics of the `task.dependencies` property.
        If `all-completed` is given the task will be scheduled when all
        dependencies are resolved _completed_ (successful resolution).
        If `all-resolved` is given the task will be scheduled when all dependencies
        have been resolved, regardless of what their resolution is.
      enum:
      - all-completed
      - all-resolved
      title: Dependency Requirement Semantics
      type: string
    retries:
      IS_REQUIRED: false
      PROPERTY_NAME: retries
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/retries
      TYPE_NAME: Retries
      default: 5
      description: |
        Number of times to retry the task in case of infrastructure issues.
        An _infrastructure issue_ is a worker node that crashes or is shutdown,
        these events are to be expected.
      maximum: 49
      minimum: 0
      title: Retries
      type: integer
    routes:
      IS_REQUIRED: false
      PROPERTY_NAME: routes
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/routes
      TYPE_NAME: TaskSpecificRoutes
      default: []
      description: |
        List of task specific routes, AMQP messages will be CC'ed to these routes.
        **Task submitter required scopes** `queue:route:<route>` for
        each route given.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: routes entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/routes/items
        TYPE_NAME: TaskSpecificRoute
        description: |
          A task specific route, AMQP messages will be CC'ed with a routing key
          matching `route.<task-specific route>`. It's possible to dot (`.`) in
          the task specific route to make sub-keys, etc. See the RabbitMQ
          [tutorial](http://www.rabbitmq.com/tutorials/tutorial-five-python.html)
          for examples on how to use routing-keys.
        maxLength: 249
        minLength: 1
        title: Task Specific Route
        type: string
      maxItems: 64
      title: Task Specific Routes
      type: array
      uniqueItems: true
    schedulerId:
      IS_REQUIRED: false
      PROPERTY_NAME: schedulerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/schedulerId
      TYPE_NAME: SchedulerIdentifier
      default: '-'
      description: |
        Identifier for the scheduler that _defined_ this task, this can be an
        identifier for a user or a service like the `"task-graph-scheduler"`.
        **Task submitter required scopes**
        `queue:assume:scheduler-id:<schedulerId>/<taskGroupId>`.
        This scope is also necessary to _schedule_ a defined task, or _rerun_ a
        task.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Scheduler Identifier
      type: string
    scopes:
      IS_REQUIRED: false
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/scopes
      TYPE_NAME: Scopes
      default: []
      description: |
        List of scopes (or scope-patterns) that the task is
        authorized to use.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/scopes/items
        TYPE_NAME: Scope
        description: |
          A scope (or scope-patterns) which the task is
          authorized to use. This can be a string or a string
          ending with `*` which will authorize all scopes for
          which the string is a prefix.  Scopes must be composed of
          printable ASCII characters and spaces.
          **Task submitter required scopes** The same scope-pattern(s) given
          (otherwise a task could be submitted to perform an action that the
          task submitter is not authorized to perform).
        pattern: ^[\x20-\x7e]*$
        title: Scope
        type: string
      title: Scopes
      type: array
    tags:
      IS_REQUIRED: false
      PROPERTY_NAME: tags
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/tags
      TYPE_NAME: Tags
      additionalProperties:
        Boolean: null
        Properties:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: ""
          TYPE_NAME: ""
          maxLength: 4096
          type: string
      default: {}
      description: |
        Arbitrary key-value tags (only strings limited to 4k). These can be used
        to attach informal meta-data to a task. Use this for informal tags that
        tasks can be classified by. You can also think of strings here as
        candidates for formal meta-data. Something like
        `purpose: 'build' || 'test'` is a good example.
      title: Tags
      type: object
    taskGroupId:
      IS_REQUIRED: false
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/taskGroupId
      TYPE_NAME: TaskGroupIdentifier
      description: |
        Identifier for a group of tasks scheduled together with this task, by
        scheduler identified by `schedulerId`. For tasks scheduled by the
        task-graph scheduler, this is the `taskGraphId`.  Defaults to `taskId` if
        property isn't specified.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task-Group Identifier
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties/workerType
      TYPE_NAME: WorkerType
      description: |
        Unique identifier for a worker-type within a specific provisioner
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Type
      type: string
  SortedPropertyNames:
  - created
  - deadline
  - dependencies
  - expires
  - extra
  - metadata
  - payload
  - priority
  - provisionerId
  - requires
  - retries
  - routes
  - schedulerId
  - scopes
  - tags
  - taskGroupId
  - workerType
  SourceURL: http://schemas.taskcluster.net/queue/v1/create-task-request.json#/properties
required:
- provisionerId
- workerType
- created
- deadline
- payload
- metadata
title: Task Definition Request
type: object


http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#
=====================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#
TYPE_NAME: ListArtifactsResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  List of artifacts for a given `taskId` and `runId`.
id: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#
properties:
  MemberNames:
    artifacts: artifacts
    continuationToken: continuationToken
  Properties:
    artifacts:
      IS_REQUIRED: true
      PROPERTY_NAME: artifacts
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#/properties/artifacts
      TYPE_NAME: ArtifactList
      description: |
        List of artifacts for given `taskId` and `runId`.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: artifacts entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#/properties/artifacts/items
        TYPE_NAME: Artifact
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Information about an artifact for the given `taskId` and `runId`.
        properties:
          MemberNames:
            contentType: contentType
            expires: expires
            name: name
            storageType: storageType
          Properties:
            contentType:
              IS_REQUIRED: true
              PROPERTY_NAME: contentType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/contentType
              TYPE_NAME: ContentType
              description: |
                Mimetype for the artifact that was created.
              maxLength: 255
              title: Content-Type
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/expires
              TYPE_NAME: ArtifactExpiration
              description: |
                Date and time after which the artifact created will be automatically
                deleted by the queue.
              format: date-time
              title: Artifact Expiration
              type: string
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/name
              TYPE_NAME: ArtifactName
              description: |
                Name of the artifact that was created, this is useful if you want to
                attempt to fetch the artifact.
              maxLength: 1024
              title: Artifact Name
              type: string
            storageType:
              IS_REQUIRED: true
              PROPERTY_NAME: storageType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/storageType
              TYPE_NAME: ArtifactStorageType
              description: |
                This is the `storageType` for the request that was used to create
                the artifact.
              enum:
              - blob
              - s3
              - azure
              - reference
              - error
              title: Artifact Storage-Type
              type: string
          SortedPropertyNames:
          - contentType
          - expires
          - name
          - storageType
          SourceURL: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties
        required:
        - storageType
        - name
        - expires
        - contentType
        title: Artifact
        type: object
      title: Artifact List
      type: array
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of artifacts.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called with `continuationToken` until you get a
        result without a `continuationToken`.
      title: Continuation Token
      type: string
  SortedPropertyNames:
  - artifacts
  - continuationToken
  SourceURL: http://schemas.taskcluster.net/queue/v1/list-artifacts-response.json#/properties
required:
- artifacts
title: List Artifacts Response
type: object


http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#
===========================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#
TYPE_NAME: ListDependentTasksResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a `listDependentTasks` request.
id: http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#
properties:
  MemberNames:
    continuationToken: continuationToken
    taskId: taskId
    tasks: tasks
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of dependent tasks.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called `listDependentTasks` with
        `continuationToken` until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#/properties/taskId
      TYPE_NAME: TaskIdentifier
      description: |
        Identifier for the task whose dependents are being listed.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
    tasks:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#/properties/tasks
      TYPE_NAME: TasksThatDependsOn`TaskId`
      description: |
        List of tasks that have `taskId` in the `task.dependencies` property.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: tasks entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#/properties/tasks/items
        TYPE_NAME: TaskDefinitionAndStatus
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Task Definition and task status structure.
        properties:
          MemberNames:
            status: status
            task: task
          Properties:
            status:
              $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
              IS_REQUIRED: true
              PROPERTY_NAME: status
              REF_SUBSCHEMA:
                $schema: http://json-schema.org/draft-06/schema#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
                TYPE_NAME: TaskStatusStructure
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  A representation of **task status** as known by the queue
                id: http://schemas.taskcluster.net/queue/v1/task-status.json#
                properties:
                  MemberNames:
                    deadline: deadline
                    expires: expires
                    provisionerId: provisionerId
                    retriesLeft: retriesLeft
                    runs: runs
                    schedulerId: schedulerId
                    state: state
                    taskGroupId: taskGroupId
                    taskId: taskId
                    workerType: workerType
                  Properties:
                    deadline:
                      IS_REQUIRED: true
                      PROPERTY_NAME: deadline
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
                      TYPE_NAME: Deadline
                      description: |
                        Deadline of the task, `pending` and `running` runs are
                        resolved as **exception** if not resolved by other means
                        before the deadline. Note, deadline cannot be more than
                        5 days into the future
                      format: date-time
                      title: Deadline
                      type: string
                    expires:
                      IS_REQUIRED: true
                      PROPERTY_NAME: expires
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
                      TYPE_NAME: Expiration
                      description: |
                        Task expiration, time at which task definition and
                        status is deleted. Notice that all artifacts for the task
                        must have an expiration that is no later than this.
                      format: date-time
                      title: Expiration
                      type: string
                    provisionerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: provisionerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
                      TYPE_NAME: ProvisionerId
                      description: |
                        Unique identifier for the provisioner that this task must be scheduled on
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Provisioner Id
                      type: string
                    retriesLeft:
                      IS_REQUIRED: true
                      PROPERTY_NAME: retriesLeft
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
                      TYPE_NAME: RetriesLeft
                      description: |
                        Number of retries left for the task in case of infrastructure issues
                      maximum: 999
                      minimum: 0
                      title: Retries Left
                      type: integer
                    runs:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runs
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
                      TYPE_NAME: ListOfRuns
                      description: |
                        List of runs, ordered so that index `i` has `runId == i`
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: runs entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                        TYPE_NAME: RunInformation
                        additionalProperties:
                          Boolean: false
                          Properties: null
                        description: |
                          JSON object with information about a run
                        properties:
                          MemberNames:
                            reasonCreated: reasonCreated
                            reasonResolved: reasonResolved
                            resolved: resolved
                            runId: runId
                            scheduled: scheduled
                            started: started
                            state: state
                            takenUntil: takenUntil
                            workerGroup: workerGroup
                            workerId: workerId
                          Properties:
                            reasonCreated:
                              IS_REQUIRED: true
                              PROPERTY_NAME: reasonCreated
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                              TYPE_NAME: ReasonCreated
                              description: |
                                Reason for the creation of this run,
                                **more reasons may be added in the future**.
                              enum:
                              - scheduled
                              - retry
                              - task-retry
                              - rerun
                              - exception
                              title: Reason Created
                              type: string
                            reasonResolved:
                              IS_REQUIRED: false
                              PROPERTY_NAME: reasonResolved
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                              TYPE_NAME: ReasonResolved
                              description: |
                                Reason that run was resolved, this is mainly
                                useful for runs resolved as `exception`.
                                Note, **more reasons may be added in the future**, also this
                                property is only available after the run is resolved. Some of these
                                reasons, notably `intermittent-task`, `worker-shutdown`, and
                                `claim-expired`, will trigger an automatic retry of the task.
                              enum:
                              - completed
                              - failed
                              - deadline-exceeded
                              - canceled
                              - superseded
                              - claim-expired
                              - worker-shutdown
                              - malformed-payload
                              - resource-unavailable
                              - internal-error
                              - intermittent-task
                              title: Reason Resolved
                              type: string
                            resolved:
                              IS_REQUIRED: false
                              PROPERTY_NAME: resolved
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                              TYPE_NAME: Resolved
                              description: |
                                Date-time at which this run was resolved, ie. when the run changed
                                state from `running` to either `completed`, `failed` or `exception`.
                                This property is only present after the run as been resolved.
                              format: date-time
                              title: Resolved
                              type: string
                            runId:
                              IS_REQUIRED: true
                              PROPERTY_NAME: runId
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                              TYPE_NAME: RunIdentifier
                              description: |
                                Id of this task run, `run-id`s always starts from `0`
                              maximum: 1000
                              minimum: 0
                              title: Run Identifier
                              type: integer
                            scheduled:
                              IS_REQUIRED: true
                              PROPERTY_NAME: scheduled
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                              TYPE_NAME: Scheduled
                              description: |
                                Date-time at which this run was scheduled, ie. when the run was
                                created in state `pending`.
                              format: date-time
                              title: Scheduled
                              type: string
                            started:
                              IS_REQUIRED: false
                              PROPERTY_NAME: started
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                              TYPE_NAME: Started
                              description: |
                                Date-time at which this run was claimed, ie. when the run changed
                                state from `pending` to `running`. This property is only present
                                after the run has been claimed.
                              format: date-time
                              title: Started
                              type: string
                            state:
                              IS_REQUIRED: true
                              PROPERTY_NAME: state
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                              TYPE_NAME: RunState
                              description: |
                                State of this run
                              enum:
                              - pending
                              - running
                              - completed
                              - failed
                              - exception
                              title: Run State
                              type: string
                            takenUntil:
                              IS_REQUIRED: false
                              PROPERTY_NAME: takenUntil
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                              TYPE_NAME: TakenUntil
                              description: |
                                Time at which the run expires and is resolved as `failed`, if the
                                run isn't reclaimed. Note, only present after the run has been
                                claimed.
                              format: date-time
                              title: Taken Until
                              type: string
                            workerGroup:
                              IS_REQUIRED: false
                              PROPERTY_NAME: workerGroup
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                              TYPE_NAME: WorkerGroup
                              description: |
                                Identifier for group that worker who executes this run is a part of,
                                this identifier is mainly used for efficient routing.
                                Note, this property is only present after the run is claimed.
                              maxLength: 22
                              minLength: 1
                              pattern: ^([a-zA-Z0-9-_]*)$
                              title: Worker Group
                              type: string
                            workerId:
                              IS_REQUIRED: false
                              PROPERTY_NAME: workerId
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                              TYPE_NAME: WorkerIdentifier
                              description: |
                                Identifier for worker evaluating this run within given
                                `workerGroup`. Note, this property is only available after the run
                                has been claimed.
                              maxLength: 22
                              minLength: 1
                              pattern: ^([a-zA-Z0-9-_]*)$
                              title: Worker Identifier
                              type: string
                          SortedPropertyNames:
                          - reasonCreated
                          - reasonResolved
                          - resolved
                          - runId
                          - scheduled
                          - started
                          - state
                          - takenUntil
                          - workerGroup
                          - workerId
                          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                        required:
                        - runId
                        - state
                        - reasonCreated
                        - scheduled
                        title: Run Information
                        type: object
                      title: List of Runs
                      type: array
                    schedulerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: schedulerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
                      TYPE_NAME: SchedulerIdentifier
                      description: |
                        Identifier for the scheduler that _defined_ this task.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Scheduler Identifier
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
                      TYPE_NAME: State
                      description: |
                        State of this task. This is just an auxiliary property derived from state
                        of latests run, or `unscheduled` if none.
                      enum:
                      - unscheduled
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: State
                      type: string
                    taskGroupId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskGroupId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
                      TYPE_NAME: TaskGroupIdentifier
                      description: |
                        Identifier for a group of tasks scheduled together with this task, by
                        scheduler identified by `schedulerId`. For tasks scheduled by the
                        task-graph scheduler, this is the `taskGraphId`.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task-Group Identifier
                      type: string
                    taskId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
                      TYPE_NAME: TaskIdentifier
                      description: |
                        Unique task identifier, this is UUID encoded as
                        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                        stripped of `=` padding.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task Identifier
                      type: string
                    workerType:
                      IS_REQUIRED: true
                      PROPERTY_NAME: workerType
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
                      TYPE_NAME: WorkerType
                      description: |
                        Identifier for worker type within the specified provisioner
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Type
                      type: string
                  SortedPropertyNames:
                  - deadline
                  - expires
                  - provisionerId
                  - retriesLeft
                  - runs
                  - schedulerId
                  - state
                  - taskGroupId
                  - taskId
                  - workerType
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
                required:
                - taskId
                - provisionerId
                - workerType
                - schedulerId
                - taskGroupId
                - deadline
                - expires
                - retriesLeft
                - state
                - runs
                title: Task Status Structure
                type: object
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#/properties/tasks/items/properties/status
              TYPE_NAME: Status
            task:
              $ref: http://schemas.taskcluster.net/queue/v1/task.json#
              IS_REQUIRED: true
              PROPERTY_NAME: task
              REF_SUBSCHEMA:
                $schema: http://json-schema.org/draft-06/schema#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#
                TYPE_NAME: TaskDefinitionResponse
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  Definition of a task that can be scheduled
                id: http://schemas.taskcluster.net/queue/v1/task.json#
                properties:
                  MemberNames:
                    created: created
                    deadline: deadline
                    dependencies: dependencies
                    expires: expires
                    extra: extra
                    metadata: metadata
                    payload: payload
                    priority: priority
                    provisionerId: provisionerId
                    requires: requires
                    retries: retries
                    routes: routes
                    schedulerId: schedulerId
                    scopes: scopes
                    tags: tags
                    taskGroupId: taskGroupId
                    workerType: workerType
                  Properties:
                    created:
                      IS_REQUIRED: true
                      PROPERTY_NAME: created
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/created
                      TYPE_NAME: Created
                      description: Creation time of task
                      format: date-time
                      title: Created
                      type: string
                    deadline:
                      IS_REQUIRED: true
                      PROPERTY_NAME: deadline
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/deadline
                      TYPE_NAME: Deadline
                      description: |
                        Deadline of the task, `pending` and `running` runs are
                        resolved as **exception** if not resolved by other means
                        before the deadline. Note, deadline cannot be more than
                        5 days into the future
                      format: date-time
                      title: Deadline
                      type: string
                    dependencies:
                      IS_REQUIRED: true
                      PROPERTY_NAME: dependencies
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/dependencies
                      TYPE_NAME: TaskDependencies
                      description: |
                        List of dependent tasks. These must either be _completed_ or _resolved_
                        before this task is scheduled. See `requires` for semantics.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: dependencies entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/dependencies/items
                        TYPE_NAME: TaskDependency
                        description: |
                          The `taskId` of a task that must be resolved before this task is
                          scheduled.
                        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                        title: Task Dependency
                        type: string
                      maxItems: 100
                      title: Task Dependencies
                      type: array
                      uniqueItems: true
                    expires:
                      IS_REQUIRED: false
                      PROPERTY_NAME: expires
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/expires
                      TYPE_NAME: Expiration
                      description: |
                        Task expiration, time at which task definition and status is deleted.
                        Notice that all artifacts for the task must have an expiration that is no
                        later than this. If this property isn't it will be set to `deadline`
                        plus one year (this default may subject to change).
                      format: date-time
                      title: Expiration
                      type: string
                    extra:
                      IS_REQUIRED: true
                      PROPERTY_NAME: extra
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/extra
                      TYPE_NAME: ExtraData
                      default: {}
                      description: |
                        Object with properties that can hold any kind of extra data that should be
                        associated with the task. This can be data for the task which doesn't
                        fit into `payload`, or it can supplementary data for use in services
                        listening for events from this task. For example this could be details to
                        display on _treeherder_, or information for indexing the task. Please, try
                        to put all related information under one property, so `extra` data keys
                        for treeherder reporting and task indexing don't conflict, hence, we have
                        reusable services. **Warning**, do not stuff large data-sets in here,
                        task definitions should not take-up multiple MiBs.
                      title: Extra Data
                      type: object
                    metadata:
                      IS_REQUIRED: true
                      PROPERTY_NAME: metadata
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata
                      TYPE_NAME: MetaData
                      additionalProperties:
                        Boolean: false
                        Properties: null
                      description: |
                        Required task metadata
                      properties:
                        MemberNames:
                          description: description
                          name: name
                          owner: owner
                          source: source
                        Properties:
                          description:
                            IS_REQUIRED: true
                            PROPERTY_NAME: description
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/description
                            TYPE_NAME: Description
                            description: |
                              Human readable description of the task, please **explain** what the
                              task does. A few lines of documentation is not going to hurt you.
                            maxLength: 32768
                            title: Description
                            type: string
                          name:
                            IS_REQUIRED: true
                            PROPERTY_NAME: name
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/name
                            TYPE_NAME: Name
                            description: |
                              Human readable name of task, used to very briefly given an idea about
                              what the task does.
                            maxLength: 255
                            title: Name
                            type: string
                          owner:
                            IS_REQUIRED: true
                            PROPERTY_NAME: owner
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/owner
                            TYPE_NAME: Owner
                            description: |
                              E-mail of person who caused this task, e.g. the person who did
                              `hg push`. The person we should contact to ask why this task is here.
                            format: email
                            maxLength: 255
                            title: Owner
                            type: string
                          source:
                            IS_REQUIRED: true
                            PROPERTY_NAME: source
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/source
                            TYPE_NAME: Source
                            description: |
                              Link to source of this task, should specify a file, revision and
                              repository. This should be place someone can go an do a git/hg blame
                              to who came up with recipe for this task.
                            format: uri
                            maxLength: 4096
                            pattern: ^https?://
                            title: Source
                            type: string
                        SortedPropertyNames:
                        - description
                        - name
                        - owner
                        - source
                        SourceURL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties
                      required:
                      - name
                      - description
                      - owner
                      - source
                      title: Meta-data
                      type: object
                    payload:
                      IS_REQUIRED: true
                      PROPERTY_NAME: payload
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/payload
                      TYPE_NAME: TaskPayload
                      description: |
                        Task-specific payload following worker-specific format. For example the
                        `docker-worker` requires keys like: `image`, `commands` and
                        `features`. Refer to the documentation of `docker-worker` for details.
                      title: Task Payload
                      type: object
                    priority:
                      IS_REQUIRED: true
                      PROPERTY_NAME: priority
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/priority
                      TYPE_NAME: TaskPriority
                      description: |
                        Priority of task, this defaults to `lowest` and the scope
                        `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
                        to define a task with `<priority>`.
                      enum:
                      - highest
                      - very-high
                      - high
                      - medium
                      - low
                      - very-low
                      - lowest
                      title: Task Priority
                      type: string
                    provisionerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: provisionerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/provisionerId
                      TYPE_NAME: ProvisionerId
                      description: |
                        Unique identifier for a provisioner, that can supply specified
                        `workerType`
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Provisioner Id
                      type: string
                    requires:
                      IS_REQUIRED: true
                      PROPERTY_NAME: requires
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/requires
                      TYPE_NAME: DependencyRequirementSemantics
                      description: |
                        The tasks relation to its dependencies. This property specifies the
                        semantics of the `task.dependencies` property.
                        If `all-completed` is given the task will be scheduled when all
                        dependencies are resolved _completed_ (successful resolution).
                        If `all-resolved` is given the task will be scheduled when all dependencies
                        have been resolved, regardless of what their resolution is.
                      enum:
                      - all-completed
                      - all-resolved
                      title: Dependency Requirement Semantics
                      type: string
                    retries:
                      IS_REQUIRED: true
                      PROPERTY_NAME: retries
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/retries
                      TYPE_NAME: Retries
                      description: |
                        Number of times to retry the task in case of infrastructure issues.
                        An _infrastructure issue_ is a worker node that crashes or is shutdown,
                        these events are to be expected.
                      maximum: 49
                      minimum: 0
                      title: Retries
                      type: integer
                    routes:
                      IS_REQUIRED: true
                      PROPERTY_NAME: routes
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/routes
                      TYPE_NAME: TaskSpecificRoutes
                      description: |
                        List of task specific routes, AMQP messages will be CC'ed to these routes.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: routes entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/routes/items
                        TYPE_NAME: TaskSpecificRoute
                        description: |
                          A task specific route, AMQP messages will be CC'ed with a routing key
                          matching `route.<task-specific route>`. It's possible to dot (`.`) in
                          the task specific route to make sub-keys, etc. See the RabbitMQ
                          [tutorial](http://www.rabbitmq.com/tutorials/tutorial-five-python.html)
                          for examples on how to use routing-keys.
                        maxLength: 249
                        minLength: 1
                        title: Task Specific Route
                        type: string
                      maxItems: 64
                      title: Task Specific Routes
                      type: array
                      uniqueItems: true
                    schedulerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: schedulerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/schedulerId
                      TYPE_NAME: SchedulerIdentifier
                      description: |
                        Identifier for the scheduler that _defined_ this task, this can be an
                        identifier for a user or a service like the `"task-graph-scheduler"`.
                        Along with the `taskGroupId` this is used to form the permission scope
                        `queue:assume:scheduler-id:<schedulerId>/<taskGroupId>`,
                        this scope is necessary to _schedule_ a defined task, or _rerun_ a task.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Scheduler Identifier
                      type: string
                    scopes:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scopes
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/scopes
                      TYPE_NAME: Scopes
                      description: |
                        List of scopes (or scope-patterns) that the task is
                        authorized to use.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: scopes entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/scopes/items
                        TYPE_NAME: Scope
                        description: |
                          A scope (or scope-patterns) which the task is
                          authorized to use. This can be a string or a string
                          ending with `*` which will authorize all scopes for
                          which the string is a prefix.  Scopes must be composed of
                          printable ASCII characters and spaces.
                        pattern: ^[\x20-\x7e]*$
                        title: Scope
                        type: string
                      title: Scopes
                      type: array
                    tags:
                      IS_REQUIRED: true
                      PROPERTY_NAME: tags
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/tags
                      TYPE_NAME: Tags
                      additionalProperties:
                        Boolean: null
                        Properties:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: ""
                          TYPE_NAME: ""
                          maxLength: 4096
                          type: string
                      description: |
                        Arbitrary key-value tags (only strings limited to 4k). These can be used
                        to attach informal meta-data to a task. Use this for informal tags that
                        tasks can be classified by. You can also think of strings here as
                        candidates for formal meta-data. Something like
                        `purpose: 'build' || 'test'` is a good example.
                      title: Tags
                      type: object
                    taskGroupId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskGroupId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/taskGroupId
                      TYPE_NAME: TaskGroupIdentifier
                      description: |
                        Identifier for a group of tasks scheduled together with this task, by
                        scheduler identified by `schedulerId`. For tasks scheduled by the
                        task-graph scheduler, this is the `taskGraphId`.  Defaults to `taskId` if
                        property isn't specified.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task-Group Identifier
                      type: string
                    workerType:
                      IS_REQUIRED: true
                      PROPERTY_NAME: workerType
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/workerType
                      TYPE_NAME: WorkerType
                      description: |
                        Unique identifier for a worker-type within a specific provisioner
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Type
                      type: string
                  SortedPropertyNames:
                  - created
                  - deadline
                  - dependencies
                  - expires
                  - extra
                  - metadata
                  - payload
                  - priority
                  - provisionerId
                  - requires
                  - retries
                  - routes
                  - schedulerId
                  - scopes
                  - tags
                  - taskGroupId
                  - workerType
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task.json#/properties
                required:
                - provisionerId
                - workerType
                - schedulerId
                - taskGroupId
                - dependencies
                - requires
                - routes
                - priority
                - retries
                - created
                - deadline
                - scopes
                - payload
                - metadata
                - tags
                - extra
                title: Task Definition Response
                type: object
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#/properties/tasks/items/properties/task
              TYPE_NAME: Task
          SortedPropertyNames:
          - status
          - task
          SourceURL: http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#/properties/tasks/items/properties
        required:
        - task
        - status
        title: Task definition and status
        type: object
      title: Tasks that depends on `taskId`
      type: array
  SortedPropertyNames:
  - continuationToken
  - taskId
  - tasks
  SourceURL: http://schemas.taskcluster.net/queue/v1/list-dependent-tasks-response.json#/properties
required:
- taskId
- tasks
title: List Dependent Tasks Response
type: object


http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#
========================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#
TYPE_NAME: ListProvisionersResponse
additionalProperties:
  Boolean: false
  Properties: null
id: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#
properties:
  MemberNames:
    continuationToken: continuationToken
    provisioners: provisioners
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of provisioners.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called with `continuationToken` until you get a
        result without a `continuationToken`.
      title: Continuation Token
      type: string
    provisioners:
      IS_REQUIRED: true
      PROPERTY_NAME: provisioners
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties/provisioners
      TYPE_NAME: Provisioners
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: provisioners entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties/provisioners/items
        TYPE_NAME: ProvisionerInformation
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            actions: actions
            description: description
            expires: expires
            lastDateActive: lastDateActive
            provisionerId: provisionerId
            stability: stability
          Properties:
            actions:
              $ref: http://schemas.taskcluster.net/queue/v1/actions.json#
              IS_REQUIRED: true
              PROPERTY_NAME: actions
              REF_SUBSCHEMA:
                $schema: http://json-schema.org/draft-06/schema#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#
                TYPE_NAME: Actions1[]
                description: |
                  See taskcluster [actions](https://docs.taskcluster.net/reference/platform/taskcluster-queue/docs/actions) documentation.
                id: http://schemas.taskcluster.net/queue/v1/actions.json#
                items:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ' entry'
                  SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items
                  TYPE_NAME: Actions1
                  additionalProperties:
                    Boolean: false
                    Properties: null
                  description: |
                    Actions provide a generic mechanism to expose additional features of a
                    provisioner, worker type, or worker to Taskcluster clients.

                    An action is comprised of metadata describing the feature it exposes,
                    together with a webhook for triggering it.

                    The Taskcluster tools site, for example, retrieves actions when displaying
                    provisioners, worker types and workers. It presents the provisioner/worker
                    type/worker specific actions to the user. When the user triggers an action,
                    the web client takes the registered webhook, substitutes parameters into the
                    URL (see `url`), signs the requests with the Taskcluster credentials of the
                    user operating the web interface, and issues the HTTP request.

                    The level to which the action relates (provisioner, worker type, worker) is
                    called the action context. All actions, regardless of the action contexts,
                    are registered against the provisioner when calling
                    `queue.declareProvisioner`.

                    The action context is used by the web client to determine where in the web
                    interface to present the action to the user as follows:

                    | `context`   | Tool where action is displayed |
                    |-------------|--------------------------------|
                    | provisioner | Provisioner Explorer           |
                    | worker-type | Workers Explorer               |
                    | worker      | Worker Explorer                |

                    See [actions docs](https://docs.taskcluster.net/reference/platform/taskcluster-queue/docs/actions)
                    for more information.
                  properties:
                    MemberNames:
                      context: context
                      description: description
                      method: method
                      name: name
                      title: title
                      url: url
                    Properties:
                      context:
                        IS_REQUIRED: true
                        PROPERTY_NAME: context
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/context
                        TYPE_NAME: Context
                        description: |
                          Actions have a "context" that is one of provisioner, worker-type, or worker, indicating
                          which it applies to. `context` is used by the front-end to know where to display the action.

                          | `context`   | Page displayed        |
                          |-------------|-----------------------|
                          | provisioner | Provisioner Explorer  |
                          | worker-type | Workers Explorer      |
                          | worker      | Worker Explorer       |
                        enum:
                        - provisioner
                        - worker-type
                        - worker
                        title: Context
                        type: string
                      description:
                        IS_REQUIRED: true
                        PROPERTY_NAME: description
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/description
                        TYPE_NAME: Description
                        description: |
                          Description of the provisioner.
                        title: Description
                        type: string
                      method:
                        IS_REQUIRED: true
                        PROPERTY_NAME: method
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/method
                        TYPE_NAME: Method
                        description: |
                          Method to indicate the desired action to be performed for a given resource.
                        enum:
                        - POST
                        - PUT
                        - DELETE
                        - PATCH
                        title: Method
                        type: string
                      name:
                        IS_REQUIRED: true
                        PROPERTY_NAME: name
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/name
                        TYPE_NAME: Name
                        description: |
                          Short names for things like logging/error messages.
                        title: Name
                        type: string
                      title:
                        IS_REQUIRED: true
                        PROPERTY_NAME: title
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/title
                        TYPE_NAME: Title
                        description: |
                          Appropriate title for any sort of Modal prompt.
                        title: Title
                      url:
                        IS_REQUIRED: true
                        PROPERTY_NAME: url
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/url
                        TYPE_NAME: URL
                        description: |
                          When an action is triggered, a request is made using the `url` and `method`.
                          Depending on the `context`, the following parameters will be substituted in the url:

                          | `context`   | Path parameters                                          |
                          |-------------|----------------------------------------------------------|
                          | provisioner | <provisionerId>                                          |
                          | worker-type | <provisionerId>, <workerType>                            |
                          | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                          _Note: The request needs to be signed with the user's Taskcluster credentials._
                        title: URL
                        type: string
                    SortedPropertyNames:
                    - context
                    - description
                    - method
                    - name
                    - title
                    - url
                    SourceURL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties
                  required:
                  - name
                  - title
                  - context
                  - url
                  - method
                  - description
                  title: Actions
                  type: object
                title: Actions
                type: array
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/actions
              TYPE_NAME: Actions
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/description
              TYPE_NAME: Description
              description: |
                Description of the provisioner.
              title: Description
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/expires
              TYPE_NAME: ProvisionerExpiration
              description: |
                Date and time after which the provisioner created will be automatically
                deleted by the queue.
              format: date-time
              title: Provisioner Expiration
              type: string
            lastDateActive:
              IS_REQUIRED: true
              PROPERTY_NAME: lastDateActive
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/lastDateActive
              TYPE_NAME: ProvisionerLastDateActive
              description: |
                Date and time where the provisioner was last seen active
              format: date-time
              title: Provisioner Last Date Active
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/provisionerId
              TYPE_NAME: ProvisionerID
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner ID
              type: string
            stability:
              IS_REQUIRED: true
              PROPERTY_NAME: stability
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/stability
              TYPE_NAME: Stability
              description: |
                This is the stability of the provisioner. Accepted values:
                 * `experimental`
                 * `stable`
                 * `deprecated`
              enum:
              - experimental
              - stable
              - deprecated
              title: Stability
              type: string
          SortedPropertyNames:
          - actions
          - description
          - expires
          - lastDateActive
          - provisionerId
          - stability
          SourceURL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties
        required:
        - provisionerId
        - description
        - stability
        - expires
        - lastDateActive
        - actions
        title: Provisioner Information
        type: object
      type: array
  SortedPropertyNames:
  - continuationToken
  - provisioners
  SourceURL: http://schemas.taskcluster.net/queue/v1/list-provisioners-response.json#/properties
required:
- provisioners
title: List Provisioners Response
type: object


http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#
======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#
TYPE_NAME: ListTaskGroupResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a `listTaskGroup` request.
id: http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#
properties:
  MemberNames:
    continuationToken: continuationToken
    taskGroupId: taskGroupId
    tasks: tasks
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of tasks in the task-group.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called `listTaskGroup` with `continuationToken`
        until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#/properties/taskGroupId
      TYPE_NAME: TaskGroupIdentifier
      description: |
        Identifier for the task-group being listed.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task-Group Identifier
      type: string
    tasks:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#/properties/tasks
      TYPE_NAME: TasksFromTheTaskGroup
      description: |
        List of tasks in this task-group.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: tasks entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#/properties/tasks/items
        TYPE_NAME: TaskDefinitionAndStatus
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Task Definition and task status structure.
        properties:
          MemberNames:
            status: status
            task: task
          Properties:
            status:
              $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
              IS_REQUIRED: true
              PROPERTY_NAME: status
              REF_SUBSCHEMA:
                $schema: http://json-schema.org/draft-06/schema#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
                TYPE_NAME: TaskStatusStructure
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  A representation of **task status** as known by the queue
                id: http://schemas.taskcluster.net/queue/v1/task-status.json#
                properties:
                  MemberNames:
                    deadline: deadline
                    expires: expires
                    provisionerId: provisionerId
                    retriesLeft: retriesLeft
                    runs: runs
                    schedulerId: schedulerId
                    state: state
                    taskGroupId: taskGroupId
                    taskId: taskId
                    workerType: workerType
                  Properties:
                    deadline:
                      IS_REQUIRED: true
                      PROPERTY_NAME: deadline
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
                      TYPE_NAME: Deadline
                      description: |
                        Deadline of the task, `pending` and `running` runs are
                        resolved as **exception** if not resolved by other means
                        before the deadline. Note, deadline cannot be more than
                        5 days into the future
                      format: date-time
                      title: Deadline
                      type: string
                    expires:
                      IS_REQUIRED: true
                      PROPERTY_NAME: expires
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
                      TYPE_NAME: Expiration
                      description: |
                        Task expiration, time at which task definition and
                        status is deleted. Notice that all artifacts for the task
                        must have an expiration that is no later than this.
                      format: date-time
                      title: Expiration
                      type: string
                    provisionerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: provisionerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
                      TYPE_NAME: ProvisionerId
                      description: |
                        Unique identifier for the provisioner that this task must be scheduled on
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Provisioner Id
                      type: string
                    retriesLeft:
                      IS_REQUIRED: true
                      PROPERTY_NAME: retriesLeft
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
                      TYPE_NAME: RetriesLeft
                      description: |
                        Number of retries left for the task in case of infrastructure issues
                      maximum: 999
                      minimum: 0
                      title: Retries Left
                      type: integer
                    runs:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runs
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
                      TYPE_NAME: ListOfRuns
                      description: |
                        List of runs, ordered so that index `i` has `runId == i`
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: runs entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                        TYPE_NAME: RunInformation
                        additionalProperties:
                          Boolean: false
                          Properties: null
                        description: |
                          JSON object with information about a run
                        properties:
                          MemberNames:
                            reasonCreated: reasonCreated
                            reasonResolved: reasonResolved
                            resolved: resolved
                            runId: runId
                            scheduled: scheduled
                            started: started
                            state: state
                            takenUntil: takenUntil
                            workerGroup: workerGroup
                            workerId: workerId
                          Properties:
                            reasonCreated:
                              IS_REQUIRED: true
                              PROPERTY_NAME: reasonCreated
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                              TYPE_NAME: ReasonCreated
                              description: |
                                Reason for the creation of this run,
                                **more reasons may be added in the future**.
                              enum:
                              - scheduled
                              - retry
                              - task-retry
                              - rerun
                              - exception
                              title: Reason Created
                              type: string
                            reasonResolved:
                              IS_REQUIRED: false
                              PROPERTY_NAME: reasonResolved
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                              TYPE_NAME: ReasonResolved
                              description: |
                                Reason that run was resolved, this is mainly
                                useful for runs resolved as `exception`.
                                Note, **more reasons may be added in the future**, also this
                                property is only available after the run is resolved. Some of these
                                reasons, notably `intermittent-task`, `worker-shutdown`, and
                                `claim-expired`, will trigger an automatic retry of the task.
                              enum:
                              - completed
                              - failed
                              - deadline-exceeded
                              - canceled
                              - superseded
                              - claim-expired
                              - worker-shutdown
                              - malformed-payload
                              - resource-unavailable
                              - internal-error
                              - intermittent-task
                              title: Reason Resolved
                              type: string
                            resolved:
                              IS_REQUIRED: false
                              PROPERTY_NAME: resolved
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                              TYPE_NAME: Resolved
                              description: |
                                Date-time at which this run was resolved, ie. when the run changed
                                state from `running` to either `completed`, `failed` or `exception`.
                                This property is only present after the run as been resolved.
                              format: date-time
                              title: Resolved
                              type: string
                            runId:
                              IS_REQUIRED: true
                              PROPERTY_NAME: runId
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                              TYPE_NAME: RunIdentifier
                              description: |
                                Id of this task run, `run-id`s always starts from `0`
                              maximum: 1000
                              minimum: 0
                              title: Run Identifier
                              type: integer
                            scheduled:
                              IS_REQUIRED: true
                              PROPERTY_NAME: scheduled
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                              TYPE_NAME: Scheduled
                              description: |
                                Date-time at which this run was scheduled, ie. when the run was
                                created in state `pending`.
                              format: date-time
                              title: Scheduled
                              type: string
                            started:
                              IS_REQUIRED: false
                              PROPERTY_NAME: started
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                              TYPE_NAME: Started
                              description: |
                                Date-time at which this run was claimed, ie. when the run changed
                                state from `pending` to `running`. This property is only present
                                after the run has been claimed.
                              format: date-time
                              title: Started
                              type: string
                            state:
                              IS_REQUIRED: true
                              PROPERTY_NAME: state
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                              TYPE_NAME: RunState
                              description: |
                                State of this run
                              enum:
                              - pending
                              - running
                              - completed
                              - failed
                              - exception
                              title: Run State
                              type: string
                            takenUntil:
                              IS_REQUIRED: false
                              PROPERTY_NAME: takenUntil
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                              TYPE_NAME: TakenUntil
                              description: |
                                Time at which the run expires and is resolved as `failed`, if the
                                run isn't reclaimed. Note, only present after the run has been
                                claimed.
                              format: date-time
                              title: Taken Until
                              type: string
                            workerGroup:
                              IS_REQUIRED: false
                              PROPERTY_NAME: workerGroup
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                              TYPE_NAME: WorkerGroup
                              description: |
                                Identifier for group that worker who executes this run is a part of,
                                this identifier is mainly used for efficient routing.
                                Note, this property is only present after the run is claimed.
                              maxLength: 22
                              minLength: 1
                              pattern: ^([a-zA-Z0-9-_]*)$
                              title: Worker Group
                              type: string
                            workerId:
                              IS_REQUIRED: false
                              PROPERTY_NAME: workerId
                              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                              TYPE_NAME: WorkerIdentifier
                              description: |
                                Identifier for worker evaluating this run within given
                                `workerGroup`. Note, this property is only available after the run
                                has been claimed.
                              maxLength: 22
                              minLength: 1
                              pattern: ^([a-zA-Z0-9-_]*)$
                              title: Worker Identifier
                              type: string
                          SortedPropertyNames:
                          - reasonCreated
                          - reasonResolved
                          - resolved
                          - runId
                          - scheduled
                          - started
                          - state
                          - takenUntil
                          - workerGroup
                          - workerId
                          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                        required:
                        - runId
                        - state
                        - reasonCreated
                        - scheduled
                        title: Run Information
                        type: object
                      title: List of Runs
                      type: array
                    schedulerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: schedulerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
                      TYPE_NAME: SchedulerIdentifier
                      description: |
                        Identifier for the scheduler that _defined_ this task.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Scheduler Identifier
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
                      TYPE_NAME: State
                      description: |
                        State of this task. This is just an auxiliary property derived from state
                        of latests run, or `unscheduled` if none.
                      enum:
                      - unscheduled
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: State
                      type: string
                    taskGroupId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskGroupId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
                      TYPE_NAME: TaskGroupIdentifier
                      description: |
                        Identifier for a group of tasks scheduled together with this task, by
                        scheduler identified by `schedulerId`. For tasks scheduled by the
                        task-graph scheduler, this is the `taskGraphId`.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task-Group Identifier
                      type: string
                    taskId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
                      TYPE_NAME: TaskIdentifier
                      description: |
                        Unique task identifier, this is UUID encoded as
                        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                        stripped of `=` padding.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task Identifier
                      type: string
                    workerType:
                      IS_REQUIRED: true
                      PROPERTY_NAME: workerType
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
                      TYPE_NAME: WorkerType
                      description: |
                        Identifier for worker type within the specified provisioner
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Type
                      type: string
                  SortedPropertyNames:
                  - deadline
                  - expires
                  - provisionerId
                  - retriesLeft
                  - runs
                  - schedulerId
                  - state
                  - taskGroupId
                  - taskId
                  - workerType
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
                required:
                - taskId
                - provisionerId
                - workerType
                - schedulerId
                - taskGroupId
                - deadline
                - expires
                - retriesLeft
                - state
                - runs
                title: Task Status Structure
                type: object
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#/properties/tasks/items/properties/status
              TYPE_NAME: Status
            task:
              $ref: http://schemas.taskcluster.net/queue/v1/task.json#
              IS_REQUIRED: true
              PROPERTY_NAME: task
              REF_SUBSCHEMA:
                $schema: http://json-schema.org/draft-06/schema#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#
                TYPE_NAME: TaskDefinitionResponse
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  Definition of a task that can be scheduled
                id: http://schemas.taskcluster.net/queue/v1/task.json#
                properties:
                  MemberNames:
                    created: created
                    deadline: deadline
                    dependencies: dependencies
                    expires: expires
                    extra: extra
                    metadata: metadata
                    payload: payload
                    priority: priority
                    provisionerId: provisionerId
                    requires: requires
                    retries: retries
                    routes: routes
                    schedulerId: schedulerId
                    scopes: scopes
                    tags: tags
                    taskGroupId: taskGroupId
                    workerType: workerType
                  Properties:
                    created:
                      IS_REQUIRED: true
                      PROPERTY_NAME: created
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/created
                      TYPE_NAME: Created
                      description: Creation time of task
                      format: date-time
                      title: Created
                      type: string
                    deadline:
                      IS_REQUIRED: true
                      PROPERTY_NAME: deadline
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/deadline
                      TYPE_NAME: Deadline
                      description: |
                        Deadline of the task, `pending` and `running` runs are
                        resolved as **exception** if not resolved by other means
                        before the deadline. Note, deadline cannot be more than
                        5 days into the future
                      format: date-time
                      title: Deadline
                      type: string
                    dependencies:
                      IS_REQUIRED: true
                      PROPERTY_NAME: dependencies
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/dependencies
                      TYPE_NAME: TaskDependencies
                      description: |
                        List of dependent tasks. These must either be _completed_ or _resolved_
                        before this task is scheduled. See `requires` for semantics.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: dependencies entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/dependencies/items
                        TYPE_NAME: TaskDependency
                        description: |
                          The `taskId` of a task that must be resolved before this task is
                          scheduled.
                        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                        title: Task Dependency
                        type: string
                      maxItems: 100
                      title: Task Dependencies
                      type: array
                      uniqueItems: true
                    expires:
                      IS_REQUIRED: false
                      PROPERTY_NAME: expires
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/expires
                      TYPE_NAME: Expiration
                      description: |
                        Task expiration, time at which task definition and status is deleted.
                        Notice that all artifacts for the task must have an expiration that is no
                        later than this. If this property isn't it will be set to `deadline`
                        plus one year (this default may subject to change).
                      format: date-time
                      title: Expiration
                      type: string
                    extra:
                      IS_REQUIRED: true
                      PROPERTY_NAME: extra
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/extra
                      TYPE_NAME: ExtraData
                      default: {}
                      description: |
                        Object with properties that can hold any kind of extra data that should be
                        associated with the task. This can be data for the task which doesn't
                        fit into `payload`, or it can supplementary data for use in services
                        listening for events from this task. For example this could be details to
                        display on _treeherder_, or information for indexing the task. Please, try
                        to put all related information under one property, so `extra` data keys
                        for treeherder reporting and task indexing don't conflict, hence, we have
                        reusable services. **Warning**, do not stuff large data-sets in here,
                        task definitions should not take-up multiple MiBs.
                      title: Extra Data
                      type: object
                    metadata:
                      IS_REQUIRED: true
                      PROPERTY_NAME: metadata
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata
                      TYPE_NAME: MetaData
                      additionalProperties:
                        Boolean: false
                        Properties: null
                      description: |
                        Required task metadata
                      properties:
                        MemberNames:
                          description: description
                          name: name
                          owner: owner
                          source: source
                        Properties:
                          description:
                            IS_REQUIRED: true
                            PROPERTY_NAME: description
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/description
                            TYPE_NAME: Description
                            description: |
                              Human readable description of the task, please **explain** what the
                              task does. A few lines of documentation is not going to hurt you.
                            maxLength: 32768
                            title: Description
                            type: string
                          name:
                            IS_REQUIRED: true
                            PROPERTY_NAME: name
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/name
                            TYPE_NAME: Name
                            description: |
                              Human readable name of task, used to very briefly given an idea about
                              what the task does.
                            maxLength: 255
                            title: Name
                            type: string
                          owner:
                            IS_REQUIRED: true
                            PROPERTY_NAME: owner
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/owner
                            TYPE_NAME: Owner
                            description: |
                              E-mail of person who caused this task, e.g. the person who did
                              `hg push`. The person we should contact to ask why this task is here.
                            format: email
                            maxLength: 255
                            title: Owner
                            type: string
                          source:
                            IS_REQUIRED: true
                            PROPERTY_NAME: source
                            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/source
                            TYPE_NAME: Source
                            description: |
                              Link to source of this task, should specify a file, revision and
                              repository. This should be place someone can go an do a git/hg blame
                              to who came up with recipe for this task.
                            format: uri
                            maxLength: 4096
                            pattern: ^https?://
                            title: Source
                            type: string
                        SortedPropertyNames:
                        - description
                        - name
                        - owner
                        - source
                        SourceURL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties
                      required:
                      - name
                      - description
                      - owner
                      - source
                      title: Meta-data
                      type: object
                    payload:
                      IS_REQUIRED: true
                      PROPERTY_NAME: payload
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/payload
                      TYPE_NAME: TaskPayload
                      description: |
                        Task-specific payload following worker-specific format. For example the
                        `docker-worker` requires keys like: `image`, `commands` and
                        `features`. Refer to the documentation of `docker-worker` for details.
                      title: Task Payload
                      type: object
                    priority:
                      IS_REQUIRED: true
                      PROPERTY_NAME: priority
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/priority
                      TYPE_NAME: TaskPriority
                      description: |
                        Priority of task, this defaults to `lowest` and the scope
                        `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
                        to define a task with `<priority>`.
                      enum:
                      - highest
                      - very-high
                      - high
                      - medium
                      - low
                      - very-low
                      - lowest
                      title: Task Priority
                      type: string
                    provisionerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: provisionerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/provisionerId
                      TYPE_NAME: ProvisionerId
                      description: |
                        Unique identifier for a provisioner, that can supply specified
                        `workerType`
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Provisioner Id
                      type: string
                    requires:
                      IS_REQUIRED: true
                      PROPERTY_NAME: requires
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/requires
                      TYPE_NAME: DependencyRequirementSemantics
                      description: |
                        The tasks relation to its dependencies. This property specifies the
                        semantics of the `task.dependencies` property.
                        If `all-completed` is given the task will be scheduled when all
                        dependencies are resolved _completed_ (successful resolution).
                        If `all-resolved` is given the task will be scheduled when all dependencies
                        have been resolved, regardless of what their resolution is.
                      enum:
                      - all-completed
                      - all-resolved
                      title: Dependency Requirement Semantics
                      type: string
                    retries:
                      IS_REQUIRED: true
                      PROPERTY_NAME: retries
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/retries
                      TYPE_NAME: Retries
                      description: |
                        Number of times to retry the task in case of infrastructure issues.
                        An _infrastructure issue_ is a worker node that crashes or is shutdown,
                        these events are to be expected.
                      maximum: 49
                      minimum: 0
                      title: Retries
                      type: integer
                    routes:
                      IS_REQUIRED: true
                      PROPERTY_NAME: routes
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/routes
                      TYPE_NAME: TaskSpecificRoutes
                      description: |
                        List of task specific routes, AMQP messages will be CC'ed to these routes.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: routes entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/routes/items
                        TYPE_NAME: TaskSpecificRoute
                        description: |
                          A task specific route, AMQP messages will be CC'ed with a routing key
                          matching `route.<task-specific route>`. It's possible to dot (`.`) in
                          the task specific route to make sub-keys, etc. See the RabbitMQ
                          [tutorial](http://www.rabbitmq.com/tutorials/tutorial-five-python.html)
                          for examples on how to use routing-keys.
                        maxLength: 249
                        minLength: 1
                        title: Task Specific Route
                        type: string
                      maxItems: 64
                      title: Task Specific Routes
                      type: array
                      uniqueItems: true
                    schedulerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: schedulerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/schedulerId
                      TYPE_NAME: SchedulerIdentifier
                      description: |
                        Identifier for the scheduler that _defined_ this task, this can be an
                        identifier for a user or a service like the `"task-graph-scheduler"`.
                        Along with the `taskGroupId` this is used to form the permission scope
                        `queue:assume:scheduler-id:<schedulerId>/<taskGroupId>`,
                        this scope is necessary to _schedule_ a defined task, or _rerun_ a task.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Scheduler Identifier
                      type: string
                    scopes:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scopes
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/scopes
                      TYPE_NAME: Scopes
                      description: |
                        List of scopes (or scope-patterns) that the task is
                        authorized to use.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: scopes entry
                        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/scopes/items
                        TYPE_NAME: Scope
                        description: |
                          A scope (or scope-patterns) which the task is
                          authorized to use. This can be a string or a string
                          ending with `*` which will authorize all scopes for
                          which the string is a prefix.  Scopes must be composed of
                          printable ASCII characters and spaces.
                        pattern: ^[\x20-\x7e]*$
                        title: Scope
                        type: string
                      title: Scopes
                      type: array
                    tags:
                      IS_REQUIRED: true
                      PROPERTY_NAME: tags
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/tags
                      TYPE_NAME: Tags
                      additionalProperties:
                        Boolean: null
                        Properties:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: ""
                          TYPE_NAME: ""
                          maxLength: 4096
                          type: string
                      description: |
                        Arbitrary key-value tags (only strings limited to 4k). These can be used
                        to attach informal meta-data to a task. Use this for informal tags that
                        tasks can be classified by. You can also think of strings here as
                        candidates for formal meta-data. Something like
                        `purpose: 'build' || 'test'` is a good example.
                      title: Tags
                      type: object
                    taskGroupId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskGroupId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/taskGroupId
                      TYPE_NAME: TaskGroupIdentifier
                      description: |
                        Identifier for a group of tasks scheduled together with this task, by
                        scheduler identified by `schedulerId`. For tasks scheduled by the
                        task-graph scheduler, this is the `taskGraphId`.  Defaults to `taskId` if
                        property isn't specified.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task-Group Identifier
                      type: string
                    workerType:
                      IS_REQUIRED: true
                      PROPERTY_NAME: workerType
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/workerType
                      TYPE_NAME: WorkerType
                      description: |
                        Unique identifier for a worker-type within a specific provisioner
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Type
                      type: string
                  SortedPropertyNames:
                  - created
                  - deadline
                  - dependencies
                  - expires
                  - extra
                  - metadata
                  - payload
                  - priority
                  - provisionerId
                  - requires
                  - retries
                  - routes
                  - schedulerId
                  - scopes
                  - tags
                  - taskGroupId
                  - workerType
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task.json#/properties
                required:
                - provisionerId
                - workerType
                - schedulerId
                - taskGroupId
                - dependencies
                - requires
                - routes
                - priority
                - retries
                - created
                - deadline
                - scopes
                - payload
                - metadata
                - tags
                - extra
                title: Task Definition Response
                type: object
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#/properties/tasks/items/properties/task
              TYPE_NAME: Task
          SortedPropertyNames:
          - status
          - task
          SourceURL: http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#/properties/tasks/items/properties
        required:
        - task
        - status
        title: Task definition and status
        type: object
      title: Tasks from the Task-Group
      type: array
  SortedPropertyNames:
  - continuationToken
  - taskGroupId
  - tasks
  SourceURL: http://schemas.taskcluster.net/queue/v1/list-task-group-response.json#/properties
required:
- taskGroupId
- tasks
title: List Task-Group Response
type: object


http://schemas.taskcluster.net/queue/v1/list-workers-response.json#
===================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#
TYPE_NAME: ListWorkersResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a `listWorkers` request.
id: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#
properties:
  MemberNames:
    continuationToken: continuationToken
    workers: workers
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of workers in the worker-type.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called `listWorkerTypes` with `continuationToken`
        until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
    workers:
      IS_REQUIRED: true
      PROPERTY_NAME: workers
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers
      TYPE_NAME: WorkersFromAWorkerType
      description: |
        List of workers in this worker-type.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: workers entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers/items
        TYPE_NAME: WorkersEntry
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            firstClaim: firstClaim
            latestTask: latestTask
            quarantineUntil: quarantineUntil
            workerGroup: workerGroup
            workerId: workerId
          Properties:
            firstClaim:
              IS_REQUIRED: true
              PROPERTY_NAME: firstClaim
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers/items/properties/firstClaim
              TYPE_NAME: FirstTaskClaimed
              description: |
                Date of the first time this worker claimed a task.
              format: date-time
              title: First task claimed
              type: string
            latestTask:
              IS_REQUIRED: false
              PROPERTY_NAME: latestTask
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers/items/properties/latestTask
              TYPE_NAME: MostRecentTask
              additionalProperties:
                Boolean: false
                Properties: null
              description: |
                The most recent claimed task
              properties:
                MemberNames:
                  runId: runId
                  taskId: taskId
                Properties:
                  runId:
                    IS_REQUIRED: true
                    PROPERTY_NAME: runId
                    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers/items/properties/latestTask/properties/runId
                    TYPE_NAME: RunIdentifier
                    description: |
                      Id of this task run, `run-id`s always starts from `0`
                    maximum: 1000
                    minimum: 0
                    title: Run Identifier
                    type: integer
                  taskId:
                    IS_REQUIRED: true
                    PROPERTY_NAME: taskId
                    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers/items/properties/latestTask/properties/taskId
                    TYPE_NAME: TaskIdentifier
                    description: |
                      Unique task identifier, this is UUID encoded as
                      [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                      stripped of `=` padding.
                    pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                    title: Task Identifier
                    type: string
                SortedPropertyNames:
                - runId
                - taskId
                SourceURL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers/items/properties/latestTask/properties
              required:
              - taskId
              - runId
              title: Most Recent Task
              type: object
            quarantineUntil:
              IS_REQUIRED: false
              PROPERTY_NAME: quarantineUntil
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers/items/properties/quarantineUntil
              TYPE_NAME: WorkerQuarantine
              description: |
                Quarantining a worker allows the machine to remain alive but not accept jobs.
                Once the quarantineUntil time has elapsed, the worker resumes accepting jobs.
                Note that a quarantine can be lifted by setting `quarantineUntil` to the present time (or
                somewhere in the past).
              format: date-time
              title: Worker Quarantine
              type: string
            workerGroup:
              IS_REQUIRED: true
              PROPERTY_NAME: workerGroup
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers/items/properties/workerGroup
              TYPE_NAME: WorkerGroup
              description: |
                Identifier for the worker group containing this worker.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              type: string
            workerId:
              IS_REQUIRED: true
              PROPERTY_NAME: workerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers/items/properties/workerId
              TYPE_NAME: WorkerId
              description: |
                Identifier for this worker (unique within this worker group).
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              type: string
          SortedPropertyNames:
          - firstClaim
          - latestTask
          - quarantineUntil
          - workerGroup
          - workerId
          SourceURL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties/workers/items/properties
        required:
        - workerGroup
        - workerId
        - firstClaim
        type: object
      title: Workers from a WorkerType
      type: array
  SortedPropertyNames:
  - continuationToken
  - workers
  SourceURL: http://schemas.taskcluster.net/queue/v1/list-workers-response.json#/properties
required:
- workers
title: List Workers Response
type: object


http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#
=======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#
TYPE_NAME: ListWorkerTypesResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a `listWorkerTypes` request.
id: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#
properties:
  MemberNames:
    continuationToken: continuationToken
    workerTypes: workerTypes
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of worker-types in the provisioner.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called `listWorkerTypes` with `continuationToken`
        until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
    workerTypes:
      IS_REQUIRED: true
      PROPERTY_NAME: workerTypes
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties/workerTypes
      TYPE_NAME: WorkerTypesFromTheProvisioner
      description: |
        List of worker-types in this provisioner.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: workerTypes entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties/workerTypes/items
        TYPE_NAME: WorkerTypesEntry
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            description: description
            expires: expires
            lastDateActive: lastDateActive
            provisionerId: provisionerId
            stability: stability
            workerType: workerType
          Properties:
            description:
              IS_REQUIRED: false
              PROPERTY_NAME: description
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/description
              TYPE_NAME: Description
              description: |
                Description of the worker-type.
              title: Description
              type: string
            expires:
              IS_REQUIRED: false
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/expires
              TYPE_NAME: WorkerTypeExpiration
              description: |
                Date and time after which the worker-type will be automatically
                deleted by the queue.
              format: date-time
              title: Worker-type Expiration
              type: string
            lastDateActive:
              IS_REQUIRED: false
              PROPERTY_NAME: lastDateActive
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/lastDateActive
              TYPE_NAME: WorkerTypeLastDateActive
              description: |
                Date and time where the worker-type was last seen active
              format: date-time
              title: Worker-type Last Date Active
              type: string
            provisionerId:
              IS_REQUIRED: false
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/provisionerId
              TYPE_NAME: ProvisionerID
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner ID
              type: string
            stability:
              IS_REQUIRED: false
              PROPERTY_NAME: stability
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/stability
              TYPE_NAME: Stability
              description: |
                This is the stability of the worker-type. Accepted values:
                 * `experimental`
                 * `stable`
                 * `deprecated`
              enum:
              - experimental
              - stable
              - deprecated
              title: Stability
              type: string
            workerType:
              IS_REQUIRED: false
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/workerType
              TYPE_NAME: WorkerTypeName
              description: |
                WorkerType name.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: WorkerType name
              type: string
          SortedPropertyNames:
          - description
          - expires
          - lastDateActive
          - provisionerId
          - stability
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties
        type: object
      title: WorkerTypes from the Provisioner
      type: array
  SortedPropertyNames:
  - continuationToken
  - workerTypes
  SourceURL: http://schemas.taskcluster.net/queue/v1/list-workertypes-response.json#/properties
required:
- workerTypes
title: List Worker-Types Response
type: object


http://schemas.taskcluster.net/queue/v1/pending-tasks-response.json#
====================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/pending-tasks-response.json#
TYPE_NAME: CountPendingTasksResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for the number of pending tasks for a given
  `provisionerId` and `workerType`.
id: http://schemas.taskcluster.net/queue/v1/pending-tasks-response.json#
properties:
  MemberNames:
    pendingTasks: pendingTasks
    provisionerId: provisionerId
    workerType: workerType
  Properties:
    pendingTasks:
      IS_REQUIRED: true
      PROPERTY_NAME: pendingTasks
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/pending-tasks-response.json#/properties/pendingTasks
      TYPE_NAME: NumberOfPendingTasks
      description: |
        An approximate number of pending tasks for the given `provisionerId` and
        `workerType`. This is based on Azure Queue Storage meta-data API, thus,
        number of reported here may be higher than actual number of pending tasks.
        But there cannot be more pending tasks reported here. Ie. this is an
        **upper-bound** on the number of pending tasks.
      minimum: 0
      title: Number of Pending Tasks
      type: integer
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/pending-tasks-response.json#/properties/provisionerId
      TYPE_NAME: ProvisionerId
      description: |
        Unique identifier for the provisioner
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner Id
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/pending-tasks-response.json#/properties/workerType
      TYPE_NAME: WorkerType
      description: |
        Identifier for worker type within the specified provisioner
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Type
      type: string
  SortedPropertyNames:
  - pendingTasks
  - provisionerId
  - workerType
  SourceURL: http://schemas.taskcluster.net/queue/v1/pending-tasks-response.json#/properties
required:
- provisionerId
- workerType
- pendingTasks
title: Count Pending Tasks Response
type: object


http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#
=====================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#
TYPE_NAME: PollTaskUrlsResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to request for poll task urls.
id: http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#
properties:
  MemberNames:
    expires: expires
    queues: queues
  Properties:
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#/properties/expires
      TYPE_NAME: SignedURLExpiration
      description: |
        Date and time after which the signed URLs provided in this response
        expires and not longer works for authentication.
      format: date-time
      title: Signed URL Expiration
      type: string
    queues:
      IS_REQUIRED: true
      PROPERTY_NAME: queues
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#/properties/queues
      TYPE_NAME: QueuesToPollFrom
      description: |
        List of signed URLs for queues to poll tasks from, they must be called
        in the order they are given. As the first entry in this array **may**
        have higher priority.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: queues entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#/properties/queues/items
        TYPE_NAME: SignedURLsForAQueue
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Object holding two signed URLs for an azure queue, one for fetching
          messages, and another for deleting messages. Remember to `claimTask`
          before deleting the message, and delete message even if the `claimTask`
          operation fails with a 400 status code. Don't delete it on other status
          codes!
        properties:
          MemberNames:
            signedDeleteUrl: signedDeleteUrl
            signedPollUrl: signedPollUrl
          Properties:
            signedDeleteUrl:
              IS_REQUIRED: true
              PROPERTY_NAME: signedDeleteUrl
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#/properties/queues/items/properties/signedDeleteUrl
              TYPE_NAME: SignedDeleteMessageURL
              description: |
                Signed URL to delete messages that have been received using the
                `signedPollUrl`. You **must** do this to avoid receiving the same
                message again.
                To use this URL you must substitute `{{messageId}}` and
                `{{popReceipt}}` with `MessageId` and `PopReceipt` from the XML
                response the `signedPollUrl` gave you. It is important that you
                `encodeURIComponent` both `MessageId` and `PopReceipt` prior to
                substitution, otherwise you will experience intermittent failures!
                Note this URL only works with `DELETE` request.
              pattern: ^https://
              title: Signed Delete Message URL
              type: string
            signedPollUrl:
              IS_REQUIRED: true
              PROPERTY_NAME: signedPollUrl
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#/properties/queues/items/properties/signedPollUrl
              TYPE_NAME: SignedGetMessageURL
              description: |
                Signed URL to get message from the Azure Queue Storage queue,
                that holds messages for the given `provisionerId` and `workerType`.
                Note that this URL returns XML, see documentation for the Azure
                Queue Storage
                [REST API](http://msdn.microsoft.com/en-us/library/azure/dd179474.aspx)
                for details.
                When you have a message you can use `claimTask` to claim the task.
                You will need to parse the XML response and base64 decode and
                JSON parse the `MessageText`.
                After you have called `claimTask` you **must** us the
                `signedDeleteUrl` to delete the message.
                **Remark**, you are allowed to append `&numofmessages=N`,
                where N < 32, to the URLs if you wish to obtain more than one
                message at the time.
              format: uri
              title: Signed Get Message URL
              type: string
          SortedPropertyNames:
          - signedDeleteUrl
          - signedPollUrl
          SourceURL: http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#/properties/queues/items/properties
        required:
        - signedPollUrl
        - signedDeleteUrl
        title: Signed URLs for a queue
        type: object
      title: Queues To Poll From
      type: array
  SortedPropertyNames:
  - expires
  - queues
  SourceURL: http://schemas.taskcluster.net/queue/v1/poll-task-urls-response.json#/properties
required:
- queues
- expires
title: Poll Task Urls Response
type: object


http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#
===================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#
TYPE_NAME: Object
description: Request a authorization to put and artifact or posting of a URL as an
  artifact. Note that the `storageType` property is referenced in the response as
  well.
id: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#
oneOf:
  Items:
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]
    TYPE_NAME: BlobArtifactRequest
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Request a list of requests in a generalized format which can be run to
      upload an artifact to storage managed by the queue.
    properties:
      MemberNames:
        contentEncoding: contentEncoding
        contentLength: contentLength
        contentSha256: contentSha256
        contentType: contentType
        expires: expires
        parts: parts
        storageType: storageType
        transferLength: transferLength
        transferSha256: transferSha256
      Properties:
        contentEncoding:
          IS_REQUIRED: false
          PROPERTY_NAME: contentEncoding
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentEncoding
          TYPE_NAME: ContentEncoding
          description: |
            Optionally provide an encoding type which should be set as the HTTP
            Content-Encoding header for this artifact.
          maxLength: 255
          type: string
        contentLength:
          IS_REQUIRED: true
          PROPERTY_NAME: contentLength
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentLength
          TYPE_NAME: ContentLength
          description: |
            The number of bytes of the entire artifact.  This must be the number
            of bytes in the file to be uploaded.  For single part uploads, the
            upload will fail if the number of bytes uploaded does not match this
            value.  A single part upload (e.g. no parts list) may be at most 5GB.
            This limit is enforced in the code because it is not possible to
            represent all of the restrictions in a json-schema.  A multipart
            upload may be at most 5TB, with each part other than the last being
            between 5MB and 5GB in size.
          minimum: 0
          type: integer
        contentSha256:
          IS_REQUIRED: true
          PROPERTY_NAME: contentSha256
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentSha256
          TYPE_NAME: ContentSha256
          description: |
            The complete SHA256 value of the entire artifact.  This must be the
            SHA256 of the file which is to be uploaded.  For single part uploads,
            the upload will fail if the SHA256 value of what is uploaded does not
            match this value
          pattern: ^[a-fA-F0-9]{64}$
          type: string
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentType
          TYPE_NAME: ContentType
          description: |
            Artifact mime-type, when uploading artifact to the signed
            `PUT` URL returned from this request this must given with the
             `ContentType` header. Please, provide correct mime-type,
             this make tooling a lot easier, specifically,
             always using `application/json` for JSON artifacts.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/expires
          TYPE_NAME: Expires
          description: |
            Date-time after which the artifact should be deleted. Note, that
            these will be collected over time, and artifacts may remain
            available after expiration. S3 based artifacts are identified in
            azure table storage and explicitly deleted on S3 after expiration.
          format: date-time
          type: string
        parts:
          IS_REQUIRED: false
          PROPERTY_NAME: parts
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts
          TYPE_NAME: Parts
          description: |
            A list of parts for a multipart upload.  The presence of this list is
            how a multipart upload is differentiated from a single part upload.
            The items in this list represent individual parts for upload.  For a
            multipart upload, the sha256 values provided here must match the
            sha256 value that S3 internally computes for the upload to be
            considered a success.  The overall sha256 value is not checked
            explicitly because the S3 API does not allow for that, but the same
            code that is responsible for generating the parts hashes would also
            be generating the overall hash, which makes this less of a concern.
            The worst case is that we have artifacts which incorrectly do not
            validate, which is not as big of a security concern.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: parts entry
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items
            TYPE_NAME: PartsEntry
            additionalProperties:
              Boolean: false
              Properties: null
            properties:
              MemberNames:
                sha256: sha256
                size: size
              Properties:
                sha256:
                  IS_REQUIRED: false
                  PROPERTY_NAME: sha256
                  SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties/sha256
                  TYPE_NAME: Sha256
                  description: |
                    The sha256 hash of the part.
                  maxLength: 64
                  minLength: 64
                  pattern: ^[a-fA-F0-9]{64}$
                  type: string
                size:
                  IS_REQUIRED: false
                  PROPERTY_NAME: size
                  SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties/size
                  TYPE_NAME: Size
                  description: |
                    The number of bytes in this part.  Keep in mind for S3 that
                    all but the last part must be minimum 5MB and the maximum for
                    a single part is 5GB.  The overall size may not exceed 5TB
                  minimum: 0
                  type: integer
              SortedPropertyNames:
              - sha256
              - size
              SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties
            type: object
          minLength: 1
          type: array
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/storageType
          TYPE_NAME: StorageType
          description: Artifact storage type, in this case `'blob'`
          enum:
          - blob
          type: string
        transferLength:
          IS_REQUIRED: false
          PROPERTY_NAME: transferLength
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/transferLength
          TYPE_NAME: TransferLength
          description: |
            The number of bytes transfered across the wire to the backing
            datastore.  If specified, it represents the post-content-encoding
            byte count
          minimum: 0
          type: integer
        transferSha256:
          IS_REQUIRED: false
          PROPERTY_NAME: transferSha256
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/transferSha256
          TYPE_NAME: TransferSha256
          description: |
            This is the sha256 of the bytes transfered across the wire to the
            backing datastore.  If specified, it represents the
            post-content-encoding sha256 value
          pattern: ^[a-fA-F0-9]{64}$
          type: string
      SortedPropertyNames:
      - contentEncoding
      - contentLength
      - contentSha256
      - contentType
      - expires
      - parts
      - storageType
      - transferLength
      - transferSha256
      SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties
    required:
    - storageType
    - expires
    - contentType
    - contentSha256
    - contentLength
    title: Blob Artifact Request
    type: object
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]
    TYPE_NAME: S3ArtifactRequest
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Request for a signed PUT URL that will allow you to upload an artifact
      to an S3 bucket managed by the queue.
    properties:
      MemberNames:
        contentType: contentType
        expires: expires
        storageType: storageType
      Properties:
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]/properties/contentType
          TYPE_NAME: ContentType
          description: |
            Artifact mime-type, when uploading artifact to the signed
            `PUT` URL returned from this request this must given with the
             `ContentType` header. Please, provide correct mime-type,
             this make tooling a lot easier, specifically,
             always using `application/json` for JSON artifacts.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]/properties/expires
          TYPE_NAME: Expires
          description: |
            Date-time after which the artifact should be deleted. Note, that
            these will be collected over time, and artifacts may remain
            available after expiration. S3 based artifacts are identified in
            azure table storage and explicitly deleted on S3 after expiration.
          format: date-time
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]/properties/storageType
          TYPE_NAME: StorageType
          description: |
            Artifact storage type, in this case `'s3'`
          enum:
          - s3
          type: string
      SortedPropertyNames:
      - contentType
      - expires
      - storageType
      SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]/properties
    required:
    - storageType
    - expires
    - contentType
    title: S3 Artifact Request
    type: object
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]
    TYPE_NAME: AzureArtifactRequest
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Request for an Azure Shared Access Signature (SAS) that will allow
      you to upload an artifact to an Azure blob storage container managed
      by the queue.
    properties:
      MemberNames:
        contentType: contentType
        expires: expires
        storageType: storageType
      Properties:
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]/properties/contentType
          TYPE_NAME: ContentType
          description: |
            Artifact mime-type, when uploading artifact please use the same
            `Content-Type`, consistently using the correct mime-type make
            tooling a lot easier, specifically, always using `application/json`
            for JSON artifacts.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]/properties/expires
          TYPE_NAME: Expires
          description: |
            Date-time after which the artifact should be deleted.
            Note, that these will be collected over time, and artifacts may
            remain available after expiration. Azure based artifacts are
            identified in azure table storage and explicitly deleted in the
            azure storage container after expiration.
          format: date-time
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]/properties/storageType
          TYPE_NAME: StorageType
          description: |
            Artifact storage type, in this case `azure`
          enum:
          - azure
          type: string
      SortedPropertyNames:
      - contentType
      - expires
      - storageType
      SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]/properties
    required:
    - storageType
    - expires
    - contentType
    title: Azure Artifact Request
    type: object
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]
    TYPE_NAME: RedirectArtifactRequest
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Request the queue to redirect to a URL for a given artifact.
      This allows you to reference artifacts that aren't managed by the queue.
      The queue will still authenticate the request, so depending on the level
      of secrecy required, secret URLs **might** work. Note, this is mainly
      useful for public artifacts, for example temporary files directly
      stored on the worker host and only available there for a specific
      amount of time.
    properties:
      MemberNames:
        contentType: contentType
        expires: expires
        storageType: storageType
        url: url
      Properties:
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]/properties/contentType
          TYPE_NAME: ContentType
          description: |
            Artifact mime-type for the resource to which the queue should
            redirect. Please use the same `Content-Type`, consistently using
            the correct mime-type make tooling a lot easier, specifically,
            always using `application/json` for JSON artifacts.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]/properties/expires
          TYPE_NAME: Expires
          description: |
            Date-time after which the queue should no longer redirect to this URL.
            Note, that the queue will and cannot delete the resource your URL
            references, you are responsible for doing that yourself.
          format: date-time
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]/properties/storageType
          TYPE_NAME: StorageType
          description: |
            Artifact storage type, in this case `reference`
          enum:
          - reference
          type: string
        url:
          IS_REQUIRED: true
          PROPERTY_NAME: url
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]/properties/url
          TYPE_NAME: Url
          description: |
            URL to which the queue should redirect using a `303` (See other)
            redirect.
          format: uri
          type: string
      SortedPropertyNames:
      - contentType
      - expires
      - storageType
      - url
      SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]/properties
    required:
    - storageType
    - expires
    - url
    - contentType
    title: Redirect Artifact Request
    type: object
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]
    TYPE_NAME: ErrorArtifactRequest
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Request the queue to reply `403` (forbidden) with `reason` and `message`
      to any `GET` request for this artifact. This is mainly useful as a way
      for a task to declare that it failed to provide an artifact it wanted
      to upload.
    properties:
      MemberNames:
        expires: expires
        message: message
        reason: reason
        storageType: storageType
      Properties:
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]/properties/expires
          TYPE_NAME: Expires
          description: |
            Date-time after which the queue should stop replying with the error
            and forget about the artifact.
          format: date-time
          type: string
        message:
          IS_REQUIRED: true
          PROPERTY_NAME: message
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]/properties/message
          TYPE_NAME: Message
          description: |
            Human readable explanation of why the artifact is missing
          maxLength: 4096
          type: string
        reason:
          IS_REQUIRED: true
          PROPERTY_NAME: reason
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]/properties/reason
          TYPE_NAME: Reason
          description: |
            Reason why the artifact doesn't exist.
          enum:
          - file-missing-on-worker
          - invalid-resource-on-worker
          - too-large-file-on-worker
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]/properties/storageType
          TYPE_NAME: StorageType
          description: |
            Artifact storage type, in this case `error`
          enum:
          - error
          type: string
      SortedPropertyNames:
      - expires
      - message
      - reason
      - storageType
      SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]/properties
    required:
    - storageType
    - expires
    - reason
    - message
    title: Error Artifact Request
    type: object
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf
title: Post Artifact Request


http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]
============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]
TYPE_NAME: BlobArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request a list of requests in a generalized format which can be run to
  upload an artifact to storage managed by the queue.
properties:
  MemberNames:
    contentEncoding: contentEncoding
    contentLength: contentLength
    contentSha256: contentSha256
    contentType: contentType
    expires: expires
    parts: parts
    storageType: storageType
    transferLength: transferLength
    transferSha256: transferSha256
  Properties:
    contentEncoding:
      IS_REQUIRED: false
      PROPERTY_NAME: contentEncoding
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentEncoding
      TYPE_NAME: ContentEncoding
      description: |
        Optionally provide an encoding type which should be set as the HTTP
        Content-Encoding header for this artifact.
      maxLength: 255
      type: string
    contentLength:
      IS_REQUIRED: true
      PROPERTY_NAME: contentLength
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentLength
      TYPE_NAME: ContentLength
      description: |
        The number of bytes of the entire artifact.  This must be the number
        of bytes in the file to be uploaded.  For single part uploads, the
        upload will fail if the number of bytes uploaded does not match this
        value.  A single part upload (e.g. no parts list) may be at most 5GB.
        This limit is enforced in the code because it is not possible to
        represent all of the restrictions in a json-schema.  A multipart
        upload may be at most 5TB, with each part other than the last being
        between 5MB and 5GB in size.
      minimum: 0
      type: integer
    contentSha256:
      IS_REQUIRED: true
      PROPERTY_NAME: contentSha256
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentSha256
      TYPE_NAME: ContentSha256
      description: |
        The complete SHA256 value of the entire artifact.  This must be the
        SHA256 of the file which is to be uploaded.  For single part uploads,
        the upload will fail if the SHA256 value of what is uploaded does not
        match this value
      pattern: ^[a-fA-F0-9]{64}$
      type: string
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentType
      TYPE_NAME: ContentType
      description: |
        Artifact mime-type, when uploading artifact to the signed
        `PUT` URL returned from this request this must given with the
         `ContentType` header. Please, provide correct mime-type,
         this make tooling a lot easier, specifically,
         always using `application/json` for JSON artifacts.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/expires
      TYPE_NAME: Expires
      description: |
        Date-time after which the artifact should be deleted. Note, that
        these will be collected over time, and artifacts may remain
        available after expiration. S3 based artifacts are identified in
        azure table storage and explicitly deleted on S3 after expiration.
      format: date-time
      type: string
    parts:
      IS_REQUIRED: false
      PROPERTY_NAME: parts
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts
      TYPE_NAME: Parts
      description: |
        A list of parts for a multipart upload.  The presence of this list is
        how a multipart upload is differentiated from a single part upload.
        The items in this list represent individual parts for upload.  For a
        multipart upload, the sha256 values provided here must match the
        sha256 value that S3 internally computes for the upload to be
        considered a success.  The overall sha256 value is not checked
        explicitly because the S3 API does not allow for that, but the same
        code that is responsible for generating the parts hashes would also
        be generating the overall hash, which makes this less of a concern.
        The worst case is that we have artifacts which incorrectly do not
        validate, which is not as big of a security concern.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: parts entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items
        TYPE_NAME: PartsEntry
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            sha256: sha256
            size: size
          Properties:
            sha256:
              IS_REQUIRED: false
              PROPERTY_NAME: sha256
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties/sha256
              TYPE_NAME: Sha256
              description: |
                The sha256 hash of the part.
              maxLength: 64
              minLength: 64
              pattern: ^[a-fA-F0-9]{64}$
              type: string
            size:
              IS_REQUIRED: false
              PROPERTY_NAME: size
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties/size
              TYPE_NAME: Size
              description: |
                The number of bytes in this part.  Keep in mind for S3 that
                all but the last part must be minimum 5MB and the maximum for
                a single part is 5GB.  The overall size may not exceed 5TB
              minimum: 0
              type: integer
          SortedPropertyNames:
          - sha256
          - size
          SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties
        type: object
      minLength: 1
      type: array
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/storageType
      TYPE_NAME: StorageType
      description: Artifact storage type, in this case `'blob'`
      enum:
      - blob
      type: string
    transferLength:
      IS_REQUIRED: false
      PROPERTY_NAME: transferLength
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/transferLength
      TYPE_NAME: TransferLength
      description: |
        The number of bytes transfered across the wire to the backing
        datastore.  If specified, it represents the post-content-encoding
        byte count
      minimum: 0
      type: integer
    transferSha256:
      IS_REQUIRED: false
      PROPERTY_NAME: transferSha256
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties/transferSha256
      TYPE_NAME: TransferSha256
      description: |
        This is the sha256 of the bytes transfered across the wire to the
        backing datastore.  If specified, it represents the
        post-content-encoding sha256 value
      pattern: ^[a-fA-F0-9]{64}$
      type: string
  SortedPropertyNames:
  - contentEncoding
  - contentLength
  - contentSha256
  - contentType
  - expires
  - parts
  - storageType
  - transferLength
  - transferSha256
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[0]/properties
required:
- storageType
- expires
- contentType
- contentSha256
- contentLength
title: Blob Artifact Request
type: object


http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]
============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]
TYPE_NAME: S3ArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request for a signed PUT URL that will allow you to upload an artifact
  to an S3 bucket managed by the queue.
properties:
  MemberNames:
    contentType: contentType
    expires: expires
    storageType: storageType
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]/properties/contentType
      TYPE_NAME: ContentType
      description: |
        Artifact mime-type, when uploading artifact to the signed
        `PUT` URL returned from this request this must given with the
         `ContentType` header. Please, provide correct mime-type,
         this make tooling a lot easier, specifically,
         always using `application/json` for JSON artifacts.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]/properties/expires
      TYPE_NAME: Expires
      description: |
        Date-time after which the artifact should be deleted. Note, that
        these will be collected over time, and artifacts may remain
        available after expiration. S3 based artifacts are identified in
        azure table storage and explicitly deleted on S3 after expiration.
      format: date-time
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]/properties/storageType
      TYPE_NAME: StorageType
      description: |
        Artifact storage type, in this case `'s3'`
      enum:
      - s3
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - storageType
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[1]/properties
required:
- storageType
- expires
- contentType
title: S3 Artifact Request
type: object


http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]
============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]
TYPE_NAME: AzureArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request for an Azure Shared Access Signature (SAS) that will allow
  you to upload an artifact to an Azure blob storage container managed
  by the queue.
properties:
  MemberNames:
    contentType: contentType
    expires: expires
    storageType: storageType
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]/properties/contentType
      TYPE_NAME: ContentType
      description: |
        Artifact mime-type, when uploading artifact please use the same
        `Content-Type`, consistently using the correct mime-type make
        tooling a lot easier, specifically, always using `application/json`
        for JSON artifacts.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]/properties/expires
      TYPE_NAME: Expires
      description: |
        Date-time after which the artifact should be deleted.
        Note, that these will be collected over time, and artifacts may
        remain available after expiration. Azure based artifacts are
        identified in azure table storage and explicitly deleted in the
        azure storage container after expiration.
      format: date-time
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]/properties/storageType
      TYPE_NAME: StorageType
      description: |
        Artifact storage type, in this case `azure`
      enum:
      - azure
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - storageType
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[2]/properties
required:
- storageType
- expires
- contentType
title: Azure Artifact Request
type: object


http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]
============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]
TYPE_NAME: RedirectArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request the queue to redirect to a URL for a given artifact.
  This allows you to reference artifacts that aren't managed by the queue.
  The queue will still authenticate the request, so depending on the level
  of secrecy required, secret URLs **might** work. Note, this is mainly
  useful for public artifacts, for example temporary files directly
  stored on the worker host and only available there for a specific
  amount of time.
properties:
  MemberNames:
    contentType: contentType
    expires: expires
    storageType: storageType
    url: url
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]/properties/contentType
      TYPE_NAME: ContentType
      description: |
        Artifact mime-type for the resource to which the queue should
        redirect. Please use the same `Content-Type`, consistently using
        the correct mime-type make tooling a lot easier, specifically,
        always using `application/json` for JSON artifacts.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]/properties/expires
      TYPE_NAME: Expires
      description: |
        Date-time after which the queue should no longer redirect to this URL.
        Note, that the queue will and cannot delete the resource your URL
        references, you are responsible for doing that yourself.
      format: date-time
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]/properties/storageType
      TYPE_NAME: StorageType
      description: |
        Artifact storage type, in this case `reference`
      enum:
      - reference
      type: string
    url:
      IS_REQUIRED: true
      PROPERTY_NAME: url
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]/properties/url
      TYPE_NAME: Url
      description: |
        URL to which the queue should redirect using a `303` (See other)
        redirect.
      format: uri
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - storageType
  - url
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[3]/properties
required:
- storageType
- expires
- url
- contentType
title: Redirect Artifact Request
type: object


http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]
============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]
TYPE_NAME: ErrorArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request the queue to reply `403` (forbidden) with `reason` and `message`
  to any `GET` request for this artifact. This is mainly useful as a way
  for a task to declare that it failed to provide an artifact it wanted
  to upload.
properties:
  MemberNames:
    expires: expires
    message: message
    reason: reason
    storageType: storageType
  Properties:
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]/properties/expires
      TYPE_NAME: Expires
      description: |
        Date-time after which the queue should stop replying with the error
        and forget about the artifact.
      format: date-time
      type: string
    message:
      IS_REQUIRED: true
      PROPERTY_NAME: message
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]/properties/message
      TYPE_NAME: Message
      description: |
        Human readable explanation of why the artifact is missing
      maxLength: 4096
      type: string
    reason:
      IS_REQUIRED: true
      PROPERTY_NAME: reason
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]/properties/reason
      TYPE_NAME: Reason
      description: |
        Reason why the artifact doesn't exist.
      enum:
      - file-missing-on-worker
      - invalid-resource-on-worker
      - too-large-file-on-worker
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]/properties/storageType
      TYPE_NAME: StorageType
      description: |
        Artifact storage type, in this case `error`
      enum:
      - error
      type: string
  SortedPropertyNames:
  - expires
  - message
  - reason
  - storageType
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-request.json#/oneOf[4]/properties
required:
- storageType
- expires
- reason
- message
title: Error Artifact Request
type: object


http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#
====================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#
TYPE_NAME: Object
description: |
  Response to a request for posting an artifact.
  Note that the `storageType` property is referenced in the request as well.
id: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#
oneOf:
  Items:
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]
    TYPE_NAME: Object
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response to a request for creating a new blob artifact
    properties:
      MemberNames:
        expires: expires
        requests: requests
        storageType: storageType
      Properties:
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/expires
          TYPE_NAME: Expires
          description: |
            Date-time after which the signed `requests` no longer work
          format: date-time
          type: string
        requests:
          IS_REQUIRED: true
          PROPERTY_NAME: requests
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests
          TYPE_NAME: Requests
          description: |
            A list of generalized HTTP requests which must be run to upload the
            artifact.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: requests entry
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items
            TYPE_NAME: RequestsEntry
            properties:
              MemberNames:
                headers: headers
                method: method
                url: url
              Properties:
                headers:
                  IS_REQUIRED: false
                  PROPERTY_NAME: headers
                  SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/headers
                  TYPE_NAME: Headers
                  additionalProperties:
                    Boolean: null
                    Properties:
                      IS_REQUIRED: false
                      PROPERTY_NAME: ""
                      SOURCE_URL: ""
                      TYPE_NAME: ""
                      type: string
                  description: Headers of request
                  type: object
                method:
                  IS_REQUIRED: false
                  PROPERTY_NAME: method
                  SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/method
                  TYPE_NAME: Method
                  description: HTTP 1.1 method of request
                  enum:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                  - OPTIONS
                  - HEAD
                  - PATCH
                  type: string
                url:
                  IS_REQUIRED: false
                  PROPERTY_NAME: url
                  SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/url
                  TYPE_NAME: Url
                  description: URL of request
                  type: string
              SortedPropertyNames:
              - headers
              - method
              - url
              SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties
            type: object
          type: array
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/storageType
          TYPE_NAME: StorageType
          description: |
            Artifact storage type, in this case `'blob'`
          enum:
          - blob
          type: string
      SortedPropertyNames:
      - expires
      - requests
      - storageType
      SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties
    required:
    - requests
    - storageType
    - expires
    title: Blob Artifact Response
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]
    TYPE_NAME: S3ArtifactResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response to a request for a signed PUT URL that will allow you to
      upload an artifact to an S3 bucket managed by the queue.
    properties:
      MemberNames:
        contentType: contentType
        expires: expires
        putUrl: putUrl
        storageType: storageType
      Properties:
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]/properties/contentType
          TYPE_NAME: ContentType
          description: |
            Artifact mime-type, must be specified as header when uploading with
            the signed `putUrl`.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]/properties/expires
          TYPE_NAME: Expires
          description: |
            Date-time after which the signed `putUrl` no longer works
          format: date-time
          type: string
        putUrl:
          IS_REQUIRED: true
          PROPERTY_NAME: putUrl
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]/properties/putUrl
          TYPE_NAME: PutUrl
          description: |
            URL to which a `PUT` request can be made to upload the artifact
            requested. Note, the `Content-Length` must be specified correctly,
            and the `ContentType` header must be set the value specified below.
          format: uri
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]/properties/storageType
          TYPE_NAME: StorageType
          description: |
            Artifact storage type, in this case `'s3'`
          enum:
          - s3
          type: string
      SortedPropertyNames:
      - contentType
      - expires
      - putUrl
      - storageType
      SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]/properties
    required:
    - storageType
    - putUrl
    - expires
    - contentType
    title: S3 Artifact Response
    type: object
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]
    TYPE_NAME: AzureArtifactResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response to a request for an Azure Shared Access Signature (SAS)
      that will allow you to upload an artifact to an Azure blob storage
      container managed by the queue.
    properties:
      MemberNames:
        contentType: contentType
        expires: expires
        putUrl: putUrl
        storageType: storageType
      Properties:
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]/properties/contentType
          TYPE_NAME: ContentType
          description: |
            Artifact mime-type, should be specified with the
            `x-ms-blob-content-type` when committing the block.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]/properties/expires
          TYPE_NAME: Expires
          description: |
            Date-time after which Shared Access Signature (SAS) will
            seize to work.
          format: date-time
          type: string
        putUrl:
          IS_REQUIRED: true
          PROPERTY_NAME: putUrl
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]/properties/putUrl
          TYPE_NAME: PutUrl
          description: |
            Shared Access Signature (SAS) with write permissions, see
            [Azure REST API]
            (http://msdn.microsoft.com/en-US/library/azure/dn140256.aspx)
            reference for details on how to use this.
          format: uri
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]/properties/storageType
          TYPE_NAME: StorageType
          description: |
            Artifact storage type, in this case `azure`
          enum:
          - azure
          type: string
      SortedPropertyNames:
      - contentType
      - expires
      - putUrl
      - storageType
      SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]/properties
    required:
    - storageType
    - expires
    - contentType
    - putUrl
    title: Azure Artifact Response
    type: object
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[3]
    TYPE_NAME: RedirectArtifactResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response to a request for the queue to redirect to a URL for a given
      artifact.
    properties:
      MemberNames:
        storageType: storageType
      Properties:
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[3]/properties/storageType
          TYPE_NAME: StorageType
          description: |
            Artifact storage type, in this case `reference`
          enum:
          - reference
          type: string
      SortedPropertyNames:
      - storageType
      SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[3]/properties
    required:
    - storageType
    title: Redirect Artifact Response
    type: object
  - $schema: http://json-schema.org/draft-06/schema#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[4]
    TYPE_NAME: ErrorArtifactResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response to a request for the queue to reply `403` (forbidden) with
      `reason` and `message` to any `GET` request for this artifact.
    properties:
      MemberNames:
        storageType: storageType
      Properties:
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[4]/properties/storageType
          TYPE_NAME: StorageType
          description: |
            Artifact storage type, in this case `error`
          enum:
          - error
          type: string
      SortedPropertyNames:
      - storageType
      SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[4]/properties
    required:
    - storageType
    title: Error Artifact Response
    type: object
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf
title: Post Artifact Response


http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]
=============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]
TYPE_NAME: Object
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for creating a new blob artifact
properties:
  MemberNames:
    expires: expires
    requests: requests
    storageType: storageType
  Properties:
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/expires
      TYPE_NAME: Expires
      description: |
        Date-time after which the signed `requests` no longer work
      format: date-time
      type: string
    requests:
      IS_REQUIRED: true
      PROPERTY_NAME: requests
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests
      TYPE_NAME: Requests
      description: |
        A list of generalized HTTP requests which must be run to upload the
        artifact.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: requests entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items
        TYPE_NAME: RequestsEntry
        properties:
          MemberNames:
            headers: headers
            method: method
            url: url
          Properties:
            headers:
              IS_REQUIRED: false
              PROPERTY_NAME: headers
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/headers
              TYPE_NAME: Headers
              additionalProperties:
                Boolean: null
                Properties:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: ""
                  TYPE_NAME: ""
                  type: string
              description: Headers of request
              type: object
            method:
              IS_REQUIRED: false
              PROPERTY_NAME: method
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/method
              TYPE_NAME: Method
              description: HTTP 1.1 method of request
              enum:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - HEAD
              - PATCH
              type: string
            url:
              IS_REQUIRED: false
              PROPERTY_NAME: url
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/url
              TYPE_NAME: Url
              description: URL of request
              type: string
          SortedPropertyNames:
          - headers
          - method
          - url
          SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties
        type: object
      type: array
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties/storageType
      TYPE_NAME: StorageType
      description: |
        Artifact storage type, in this case `'blob'`
      enum:
      - blob
      type: string
  SortedPropertyNames:
  - expires
  - requests
  - storageType
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[0]/properties
required:
- requests
- storageType
- expires
title: Blob Artifact Response


http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]
=============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]
TYPE_NAME: S3ArtifactResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for a signed PUT URL that will allow you to
  upload an artifact to an S3 bucket managed by the queue.
properties:
  MemberNames:
    contentType: contentType
    expires: expires
    putUrl: putUrl
    storageType: storageType
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]/properties/contentType
      TYPE_NAME: ContentType
      description: |
        Artifact mime-type, must be specified as header when uploading with
        the signed `putUrl`.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]/properties/expires
      TYPE_NAME: Expires
      description: |
        Date-time after which the signed `putUrl` no longer works
      format: date-time
      type: string
    putUrl:
      IS_REQUIRED: true
      PROPERTY_NAME: putUrl
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]/properties/putUrl
      TYPE_NAME: PutUrl
      description: |
        URL to which a `PUT` request can be made to upload the artifact
        requested. Note, the `Content-Length` must be specified correctly,
        and the `ContentType` header must be set the value specified below.
      format: uri
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]/properties/storageType
      TYPE_NAME: StorageType
      description: |
        Artifact storage type, in this case `'s3'`
      enum:
      - s3
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - putUrl
  - storageType
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[1]/properties
required:
- storageType
- putUrl
- expires
- contentType
title: S3 Artifact Response
type: object


http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]
=============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]
TYPE_NAME: AzureArtifactResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for an Azure Shared Access Signature (SAS)
  that will allow you to upload an artifact to an Azure blob storage
  container managed by the queue.
properties:
  MemberNames:
    contentType: contentType
    expires: expires
    putUrl: putUrl
    storageType: storageType
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]/properties/contentType
      TYPE_NAME: ContentType
      description: |
        Artifact mime-type, should be specified with the
        `x-ms-blob-content-type` when committing the block.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]/properties/expires
      TYPE_NAME: Expires
      description: |
        Date-time after which Shared Access Signature (SAS) will
        seize to work.
      format: date-time
      type: string
    putUrl:
      IS_REQUIRED: true
      PROPERTY_NAME: putUrl
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]/properties/putUrl
      TYPE_NAME: PutUrl
      description: |
        Shared Access Signature (SAS) with write permissions, see
        [Azure REST API]
        (http://msdn.microsoft.com/en-US/library/azure/dn140256.aspx)
        reference for details on how to use this.
      format: uri
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]/properties/storageType
      TYPE_NAME: StorageType
      description: |
        Artifact storage type, in this case `azure`
      enum:
      - azure
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - putUrl
  - storageType
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[2]/properties
required:
- storageType
- expires
- contentType
- putUrl
title: Azure Artifact Response
type: object


http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[3]
=============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[3]
TYPE_NAME: RedirectArtifactResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for the queue to redirect to a URL for a given
  artifact.
properties:
  MemberNames:
    storageType: storageType
  Properties:
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[3]/properties/storageType
      TYPE_NAME: StorageType
      description: |
        Artifact storage type, in this case `reference`
      enum:
      - reference
      type: string
  SortedPropertyNames:
  - storageType
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[3]/properties
required:
- storageType
title: Redirect Artifact Response
type: object


http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[4]
=============================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[4]
TYPE_NAME: ErrorArtifactResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for the queue to reply `403` (forbidden) with
  `reason` and `message` to any `GET` request for this artifact.
properties:
  MemberNames:
    storageType: storageType
  Properties:
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[4]/properties/storageType
      TYPE_NAME: StorageType
      description: |
        Artifact storage type, in this case `error`
      enum:
      - error
      type: string
  SortedPropertyNames:
  - storageType
  SourceURL: http://schemas.taskcluster.net/queue/v1/post-artifact-response.json#/oneOf[4]/properties
required:
- storageType
title: Error Artifact Response
type: object


http://schemas.taskcluster.net/queue/v1/provisioner-response.json#
==================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/provisioner-response.json#
TYPE_NAME: ProvisionerResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response containing information about a provisioner.
id: http://schemas.taskcluster.net/queue/v1/provisioner-response.json#
properties:
  MemberNames:
    actions: actions
    description: description
    expires: expires
    lastDateActive: lastDateActive
    provisionerId: provisionerId
    stability: stability
  Properties:
    actions:
      $ref: http://schemas.taskcluster.net/queue/v1/actions.json#
      IS_REQUIRED: true
      PROPERTY_NAME: actions
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#
        TYPE_NAME: Actions1[]
        description: |
          See taskcluster [actions](https://docs.taskcluster.net/reference/platform/taskcluster-queue/docs/actions) documentation.
        id: http://schemas.taskcluster.net/queue/v1/actions.json#
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ' entry'
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items
          TYPE_NAME: Actions1
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Actions provide a generic mechanism to expose additional features of a
            provisioner, worker type, or worker to Taskcluster clients.

            An action is comprised of metadata describing the feature it exposes,
            together with a webhook for triggering it.

            The Taskcluster tools site, for example, retrieves actions when displaying
            provisioners, worker types and workers. It presents the provisioner/worker
            type/worker specific actions to the user. When the user triggers an action,
            the web client takes the registered webhook, substitutes parameters into the
            URL (see `url`), signs the requests with the Taskcluster credentials of the
            user operating the web interface, and issues the HTTP request.

            The level to which the action relates (provisioner, worker type, worker) is
            called the action context. All actions, regardless of the action contexts,
            are registered against the provisioner when calling
            `queue.declareProvisioner`.

            The action context is used by the web client to determine where in the web
            interface to present the action to the user as follows:

            | `context`   | Tool where action is displayed |
            |-------------|--------------------------------|
            | provisioner | Provisioner Explorer           |
            | worker-type | Workers Explorer               |
            | worker      | Worker Explorer                |

            See [actions docs](https://docs.taskcluster.net/reference/platform/taskcluster-queue/docs/actions)
            for more information.
          properties:
            MemberNames:
              context: context
              description: description
              method: method
              name: name
              title: title
              url: url
            Properties:
              context:
                IS_REQUIRED: true
                PROPERTY_NAME: context
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/context
                TYPE_NAME: Context
                description: |
                  Actions have a "context" that is one of provisioner, worker-type, or worker, indicating
                  which it applies to. `context` is used by the front-end to know where to display the action.

                  | `context`   | Page displayed        |
                  |-------------|-----------------------|
                  | provisioner | Provisioner Explorer  |
                  | worker-type | Workers Explorer      |
                  | worker      | Worker Explorer       |
                enum:
                - provisioner
                - worker-type
                - worker
                title: Context
                type: string
              description:
                IS_REQUIRED: true
                PROPERTY_NAME: description
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/description
                TYPE_NAME: Description
                description: |
                  Description of the provisioner.
                title: Description
                type: string
              method:
                IS_REQUIRED: true
                PROPERTY_NAME: method
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/method
                TYPE_NAME: Method
                description: |
                  Method to indicate the desired action to be performed for a given resource.
                enum:
                - POST
                - PUT
                - DELETE
                - PATCH
                title: Method
                type: string
              name:
                IS_REQUIRED: true
                PROPERTY_NAME: name
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/name
                TYPE_NAME: Name
                description: |
                  Short names for things like logging/error messages.
                title: Name
                type: string
              title:
                IS_REQUIRED: true
                PROPERTY_NAME: title
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/title
                TYPE_NAME: Title
                description: |
                  Appropriate title for any sort of Modal prompt.
                title: Title
              url:
                IS_REQUIRED: true
                PROPERTY_NAME: url
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/url
                TYPE_NAME: URL
                description: |
                  When an action is triggered, a request is made using the `url` and `method`.
                  Depending on the `context`, the following parameters will be substituted in the url:

                  | `context`   | Path parameters                                          |
                  |-------------|----------------------------------------------------------|
                  | provisioner | <provisionerId>                                          |
                  | worker-type | <provisionerId>, <workerType>                            |
                  | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                  _Note: The request needs to be signed with the user's Taskcluster credentials._
                title: URL
                type: string
            SortedPropertyNames:
            - context
            - description
            - method
            - name
            - title
            - url
            SourceURL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties
          required:
          - name
          - title
          - context
          - url
          - method
          - description
          title: Actions
          type: object
        title: Actions
        type: array
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/provisioner-response.json#/properties/actions
      TYPE_NAME: Actions
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/provisioner-response.json#/properties/description
      TYPE_NAME: Description
      description: |
        Description of the provisioner.
      title: Description
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/provisioner-response.json#/properties/expires
      TYPE_NAME: ProvisionerExpiration
      description: |
        Date and time after which the provisioner will be automatically
        deleted by the queue.
      format: date-time
      title: Provisioner Expiration
      type: string
    lastDateActive:
      IS_REQUIRED: true
      PROPERTY_NAME: lastDateActive
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/provisioner-response.json#/properties/lastDateActive
      TYPE_NAME: ProvisionerLastDateActive
      description: |
        Date of the last time this provisioner was seen active. `lastDateActive` is updated every 6 hours
        but may be off by up-to 6 hours. Nonetheless, `lastDateActive` is a good indicator
        of when the provisioner was last seen active.
      format: date-time
      title: Provisioner Last Date Active
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/provisioner-response.json#/properties/provisionerId
      TYPE_NAME: ProvisionerID
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner ID
      type: string
    stability:
      IS_REQUIRED: true
      PROPERTY_NAME: stability
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/provisioner-response.json#/properties/stability
      TYPE_NAME: Stability
      description: |
        This is the stability of the provisioner. Accepted values:
          * `experimental`
          * `stable`
          * `deprecated`
      enum:
      - experimental
      - stable
      - deprecated
      title: Stability
      type: string
  SortedPropertyNames:
  - actions
  - description
  - expires
  - lastDateActive
  - provisionerId
  - stability
  SourceURL: http://schemas.taskcluster.net/queue/v1/provisioner-response.json#/properties
required:
- provisionerId
- description
- actions
- stability
- expires
- lastDateActive
title: Provisioner Response
type: object


http://schemas.taskcluster.net/queue/v1/put-artifact-request.json#
==================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/put-artifact-request.json#
TYPE_NAME: CompleteArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: Complete an aritifact
id: http://schemas.taskcluster.net/queue/v1/put-artifact-request.json#
properties:
  MemberNames:
    etags: etags
  Properties:
    etags:
      IS_REQUIRED: true
      PROPERTY_NAME: etags
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/put-artifact-request.json#/properties/etags
      TYPE_NAME: Etags
      description: |
        A list of the etags given by the API of the blob storage provider.  This is an opaque
        string value provided by the API.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: etags entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/put-artifact-request.json#/properties/etags/items
        TYPE_NAME: EtagsEntry
        type: string
      type: array
  SortedPropertyNames:
  - etags
  SourceURL: http://schemas.taskcluster.net/queue/v1/put-artifact-request.json#/properties
required:
- etags
title: Complete Artifact Request
type: object


http://schemas.taskcluster.net/queue/v1/quarantine-worker-request.json#
=======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/quarantine-worker-request.json#
TYPE_NAME: QuarantineWorkerRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to update a worker's quarantineUntil property.
id: http://schemas.taskcluster.net/queue/v1/quarantine-worker-request.json#
properties:
  MemberNames:
    quarantineUntil: quarantineUntil
  Properties:
    quarantineUntil:
      IS_REQUIRED: false
      PROPERTY_NAME: quarantineUntil
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/quarantine-worker-request.json#/properties/quarantineUntil
      TYPE_NAME: WorkerQuarantine
      description: |
        Quarantining a worker allows the machine to remain alive but not accept jobs.
        Once the quarantineUntil time has elapsed, the worker resumes accepting jobs.
        Note that a quarantine can be lifted by setting `quarantineUntil` to the present time (or
        somewhere in the past).
      format: date-time
      title: Worker Quarantine
      type: string
  SortedPropertyNames:
  - quarantineUntil
  SourceURL: http://schemas.taskcluster.net/queue/v1/quarantine-worker-request.json#/properties
title: Quarantine Worker Request
type: object


http://schemas.taskcluster.net/queue/v1/task-claim-request.json#
================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-request.json#
TYPE_NAME: TaskClaimRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to claim (or reclaim) a task
id: http://schemas.taskcluster.net/queue/v1/task-claim-request.json#
properties:
  MemberNames:
    workerGroup: workerGroup
    workerId: workerId
  Properties:
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-request.json#/properties/workerGroup
      TYPE_NAME: WorkerGroup
      description: |
        Identifier for group that worker claiming the task is a part of.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-request.json#/properties/workerId
      TYPE_NAME: WorkerId
      description: |
        Identifier for worker within the given workerGroup
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - workerGroup
  - workerId
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-claim-request.json#/properties
required:
- workerGroup
- workerId
title: Task Claim Request
type: object


http://schemas.taskcluster.net/queue/v1/task-claim-response.json#
=================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#
TYPE_NAME: TaskClaimResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a successful task claim
id: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#
properties:
  MemberNames:
    credentials: credentials
    runId: runId
    status: status
    takenUntil: takenUntil
    task: task
    workerGroup: workerGroup
    workerId: workerId
  Properties:
    credentials:
      IS_REQUIRED: true
      PROPERTY_NAME: credentials
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/credentials
      TYPE_NAME: Credentials
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Temporary credentials granting `task.scopes` and the scope:
        `queue:claim-task:<taskId>/<runId>` which allows the worker to reclaim
        the task, upload artifacts and report task resolution.

        The temporary credentials are set to expire after `takenUntil`. They
        won't expire exactly at `takenUntil` but shortly after, hence, requests
        coming close `takenUntil` won't have problems even if there is a little
        clock drift.

        Workers should use these credentials when making requests on behalf of
        a task. This includes requests to create artifacts, reclaiming the task
        reporting the task `completed`, `failed` or `exception`.

        Note, a new set of temporary credentials is issued when the worker
        reclaims the task.
      properties:
        MemberNames:
          accessToken: accessToken
          certificate: certificate
          clientId: clientId
        Properties:
          accessToken:
            IS_REQUIRED: true
            PROPERTY_NAME: accessToken
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/credentials/properties/accessToken
            TYPE_NAME: AccessToken
            description: |
              The `accessToken` for the temporary credentials.
            minLength: 1
            type: string
          certificate:
            IS_REQUIRED: true
            PROPERTY_NAME: certificate
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/credentials/properties/certificate
            TYPE_NAME: Certificate
            description: |
              The `certificate` for the temporary credentials, these are required
              for the temporary credentials to work.
            minLength: 1
            type: string
          clientId:
            IS_REQUIRED: true
            PROPERTY_NAME: clientId
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/credentials/properties/clientId
            TYPE_NAME: ClientId
            description: |
              The `clientId` for the temporary credentials.
            minLength: 1
            type: string
        SortedPropertyNames:
        - accessToken
        - certificate
        - clientId
        SourceURL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/credentials/properties
      required:
      - clientId
      - accessToken
      - certificate
      type: object
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/runId
      TYPE_NAME: RunId
      description: |
        `run-id` assigned to this run of the task
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        id: http://schemas.taskcluster.net/queue/v1/task-status.json#
        properties:
          MemberNames:
            deadline: deadline
            expires: expires
            provisionerId: provisionerId
            retriesLeft: retriesLeft
            runs: runs
            schedulerId: schedulerId
            state: state
            taskGroupId: taskGroupId
            taskId: taskId
            workerType: workerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for the provisioner that this task must be scheduled on
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: RetriesLeft
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ListOfRuns
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: runs entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: reasonCreated
                    reasonResolved: reasonResolved
                    resolved: resolved
                    runId: runId
                    scheduled: scheduled
                    started: started
                    state: state
                    takenUntil: takenUntil
                    workerGroup: workerGroup
                    workerId: workerId
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ReasonCreated
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ReasonResolved
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: Resolved
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: RunIdentifier
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: Scheduled
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: Started
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: RunState
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: TakenUntil
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: WorkerGroup
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: WorkerIdentifier
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
              TYPE_NAME: State
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Identifier for worker type within the specified provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/status
      TYPE_NAME: Status
    takenUntil:
      IS_REQUIRED: true
      PROPERTY_NAME: takenUntil
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/takenUntil
      TYPE_NAME: TakenUntil
      description: |
        Time at which the run expires and is resolved as `exception`,
        with reason `claim-expired` if the run haven't been reclaimed.
      format: date-time
      type: string
    task:
      $ref: http://schemas.taskcluster.net/queue/v1/task.json#
      IS_REQUIRED: true
      PROPERTY_NAME: task
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#
        TYPE_NAME: TaskDefinitionResponse
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Definition of a task that can be scheduled
        id: http://schemas.taskcluster.net/queue/v1/task.json#
        properties:
          MemberNames:
            created: created
            deadline: deadline
            dependencies: dependencies
            expires: expires
            extra: extra
            metadata: metadata
            payload: payload
            priority: priority
            provisionerId: provisionerId
            requires: requires
            retries: retries
            routes: routes
            schedulerId: schedulerId
            scopes: scopes
            tags: tags
            taskGroupId: taskGroupId
            workerType: workerType
          Properties:
            created:
              IS_REQUIRED: true
              PROPERTY_NAME: created
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/created
              TYPE_NAME: Created
              description: Creation time of task
              format: date-time
              title: Created
              type: string
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            dependencies:
              IS_REQUIRED: true
              PROPERTY_NAME: dependencies
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/dependencies
              TYPE_NAME: TaskDependencies
              description: |
                List of dependent tasks. These must either be _completed_ or _resolved_
                before this task is scheduled. See `requires` for semantics.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: dependencies entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/dependencies/items
                TYPE_NAME: TaskDependency
                description: |
                  The `taskId` of a task that must be resolved before this task is
                  scheduled.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task Dependency
                type: string
              maxItems: 100
              title: Task Dependencies
              type: array
              uniqueItems: true
            expires:
              IS_REQUIRED: false
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and status is deleted.
                Notice that all artifacts for the task must have an expiration that is no
                later than this. If this property isn't it will be set to `deadline`
                plus one year (this default may subject to change).
              format: date-time
              title: Expiration
              type: string
            extra:
              IS_REQUIRED: true
              PROPERTY_NAME: extra
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/extra
              TYPE_NAME: ExtraData
              default: {}
              description: |
                Object with properties that can hold any kind of extra data that should be
                associated with the task. This can be data for the task which doesn't
                fit into `payload`, or it can supplementary data for use in services
                listening for events from this task. For example this could be details to
                display on _treeherder_, or information for indexing the task. Please, try
                to put all related information under one property, so `extra` data keys
                for treeherder reporting and task indexing don't conflict, hence, we have
                reusable services. **Warning**, do not stuff large data-sets in here,
                task definitions should not take-up multiple MiBs.
              title: Extra Data
              type: object
            metadata:
              IS_REQUIRED: true
              PROPERTY_NAME: metadata
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata
              TYPE_NAME: MetaData
              additionalProperties:
                Boolean: false
                Properties: null
              description: |
                Required task metadata
              properties:
                MemberNames:
                  description: description
                  name: name
                  owner: owner
                  source: source
                Properties:
                  description:
                    IS_REQUIRED: true
                    PROPERTY_NAME: description
                    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/description
                    TYPE_NAME: Description
                    description: |
                      Human readable description of the task, please **explain** what the
                      task does. A few lines of documentation is not going to hurt you.
                    maxLength: 32768
                    title: Description
                    type: string
                  name:
                    IS_REQUIRED: true
                    PROPERTY_NAME: name
                    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/name
                    TYPE_NAME: Name
                    description: |
                      Human readable name of task, used to very briefly given an idea about
                      what the task does.
                    maxLength: 255
                    title: Name
                    type: string
                  owner:
                    IS_REQUIRED: true
                    PROPERTY_NAME: owner
                    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/owner
                    TYPE_NAME: Owner
                    description: |
                      E-mail of person who caused this task, e.g. the person who did
                      `hg push`. The person we should contact to ask why this task is here.
                    format: email
                    maxLength: 255
                    title: Owner
                    type: string
                  source:
                    IS_REQUIRED: true
                    PROPERTY_NAME: source
                    SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/source
                    TYPE_NAME: Source
                    description: |
                      Link to source of this task, should specify a file, revision and
                      repository. This should be place someone can go an do a git/hg blame
                      to who came up with recipe for this task.
                    format: uri
                    maxLength: 4096
                    pattern: ^https?://
                    title: Source
                    type: string
                SortedPropertyNames:
                - description
                - name
                - owner
                - source
                SourceURL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties
              required:
              - name
              - description
              - owner
              - source
              title: Meta-data
              type: object
            payload:
              IS_REQUIRED: true
              PROPERTY_NAME: payload
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/payload
              TYPE_NAME: TaskPayload
              description: |
                Task-specific payload following worker-specific format. For example the
                `docker-worker` requires keys like: `image`, `commands` and
                `features`. Refer to the documentation of `docker-worker` for details.
              title: Task Payload
              type: object
            priority:
              IS_REQUIRED: true
              PROPERTY_NAME: priority
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/priority
              TYPE_NAME: TaskPriority
              description: |
                Priority of task, this defaults to `lowest` and the scope
                `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
                to define a task with `<priority>`.
              enum:
              - highest
              - very-high
              - high
              - medium
              - low
              - very-low
              - lowest
              title: Task Priority
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for a provisioner, that can supply specified
                `workerType`
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            requires:
              IS_REQUIRED: true
              PROPERTY_NAME: requires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/requires
              TYPE_NAME: DependencyRequirementSemantics
              description: |
                The tasks relation to its dependencies. This property specifies the
                semantics of the `task.dependencies` property.
                If `all-completed` is given the task will be scheduled when all
                dependencies are resolved _completed_ (successful resolution).
                If `all-resolved` is given the task will be scheduled when all dependencies
                have been resolved, regardless of what their resolution is.
              enum:
              - all-completed
              - all-resolved
              title: Dependency Requirement Semantics
              type: string
            retries:
              IS_REQUIRED: true
              PROPERTY_NAME: retries
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/retries
              TYPE_NAME: Retries
              description: |
                Number of times to retry the task in case of infrastructure issues.
                An _infrastructure issue_ is a worker node that crashes or is shutdown,
                these events are to be expected.
              maximum: 49
              minimum: 0
              title: Retries
              type: integer
            routes:
              IS_REQUIRED: true
              PROPERTY_NAME: routes
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/routes
              TYPE_NAME: TaskSpecificRoutes
              description: |
                List of task specific routes, AMQP messages will be CC'ed to these routes.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: routes entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/routes/items
                TYPE_NAME: TaskSpecificRoute
                description: |
                  A task specific route, AMQP messages will be CC'ed with a routing key
                  matching `route.<task-specific route>`. It's possible to dot (`.`) in
                  the task specific route to make sub-keys, etc. See the RabbitMQ
                  [tutorial](http://www.rabbitmq.com/tutorials/tutorial-five-python.html)
                  for examples on how to use routing-keys.
                maxLength: 249
                minLength: 1
                title: Task Specific Route
                type: string
              maxItems: 64
              title: Task Specific Routes
              type: array
              uniqueItems: true
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task, this can be an
                identifier for a user or a service like the `"task-graph-scheduler"`.
                Along with the `taskGroupId` this is used to form the permission scope
                `queue:assume:scheduler-id:<schedulerId>/<taskGroupId>`,
                this scope is necessary to _schedule_ a defined task, or _rerun_ a task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            scopes:
              IS_REQUIRED: true
              PROPERTY_NAME: scopes
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/scopes
              TYPE_NAME: Scopes
              description: |
                List of scopes (or scope-patterns) that the task is
                authorized to use.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: scopes entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/scopes/items
                TYPE_NAME: Scope
                description: |
                  A scope (or scope-patterns) which the task is
                  authorized to use. This can be a string or a string
                  ending with `*` which will authorize all scopes for
                  which the string is a prefix.  Scopes must be composed of
                  printable ASCII characters and spaces.
                pattern: ^[\x20-\x7e]*$
                title: Scope
                type: string
              title: Scopes
              type: array
            tags:
              IS_REQUIRED: true
              PROPERTY_NAME: tags
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/tags
              TYPE_NAME: Tags
              additionalProperties:
                Boolean: null
                Properties:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: ""
                  TYPE_NAME: ""
                  maxLength: 4096
                  type: string
              description: |
                Arbitrary key-value tags (only strings limited to 4k). These can be used
                to attach informal meta-data to a task. Use this for informal tags that
                tasks can be classified by. You can also think of strings here as
                candidates for formal meta-data. Something like
                `purpose: 'build' || 'test'` is a good example.
              title: Tags
              type: object
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.  Defaults to `taskId` if
                property isn't specified.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Unique identifier for a worker-type within a specific provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - created
          - deadline
          - dependencies
          - expires
          - extra
          - metadata
          - payload
          - priority
          - provisionerId
          - requires
          - retries
          - routes
          - schedulerId
          - scopes
          - tags
          - taskGroupId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task.json#/properties
        required:
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - dependencies
        - requires
        - routes
        - priority
        - retries
        - created
        - deadline
        - scopes
        - payload
        - metadata
        - tags
        - extra
        title: Task Definition Response
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/task
      TYPE_NAME: Task
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/workerGroup
      TYPE_NAME: WorkerGroup
      description: |
        Identifier for the worker-group within which this run started.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties/workerId
      TYPE_NAME: WorkerId
      description: |
        Identifier for the worker executing this run.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - credentials
  - runId
  - status
  - takenUntil
  - task
  - workerGroup
  - workerId
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-claim-response.json#/properties
required:
- status
- runId
- workerGroup
- workerId
- takenUntil
- task
- credentials
title: Task Claim Response
type: object


http://schemas.taskcluster.net/queue/v1/task-exception-request.json#
====================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-exception-request.json#
TYPE_NAME: TaskExceptionRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request for a run of a task to be resolved with an exception
id: http://schemas.taskcluster.net/queue/v1/task-exception-request.json#
properties:
  MemberNames:
    reason: reason
  Properties:
    reason:
      IS_REQUIRED: true
      PROPERTY_NAME: reason
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-exception-request.json#/properties/reason
      TYPE_NAME: Reason
      description: |
        Reason that the task is resolved with an exception. This is a subset
        of the values for `resolvedReason` given in the task status structure.
        **Report `worker-shutdown`** if the run failed because the worker
        had to shutdown (spot node disappearing). In case of `worker-shutdown`
        the queue will immediately **retry** the task, by making a new run.
        This is much faster than ignoreing the issue and letting the task _retry_
        by claim expiration. For any other _reason_ reported the queue will not
        retry the task.
        **Report `malformed-payload`** if the `task.payload` doesn't match the
        schema for the worker payload, or referenced resource doesn't exists.
        In either case, you should still log the error to a log file for the
        specific run.
        **Report `resource-unavailable`** if a resource/service needed or
        referenced in `task.payload` is _temporarily_ unavailable. Do not use this
        unless you know the resource exists, if the resource doesn't exist you
        should report `malformed-payload`. Example use-case if you contact the
        index (a service) on behalf of the task, because of a declaration in
        `task.payload`, and the service (index) is temporarily down. Don't use
        this if a URL returns 404, but if it returns 503 or hits a timeout when
        you retry the request, then this _may_ be a valid exception. The queue
        assumes that workers have applied retries as needed, and will not retry
         the task.
        **Report `internal-error`** if the worker experienced an unhandled internal
        error from which it couldn't recover. The queue will not retry runs
        resolved with this reason, but you are clearly signaling that this is a
        bug in the worker code.
        **Report `superseded`** if the task was determined to have been
        superseded by another task, and its results are no longer needed.  It is
        convention in this case to create an artifact entitled
        `public/superseded-by` containing the taskId of the task that superseded
        this one.
        **Report `intermittent-task`** if the task explicitly requested a retry
        because task is intermittent. Workers can choose whether or not to
        support this, but workers shouldn't blindly report this for every task
        that fails.
      enum:
      - worker-shutdown
      - malformed-payload
      - resource-unavailable
      - internal-error
      - superseded
      - intermittent-task
      type: string
  SortedPropertyNames:
  - reason
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-exception-request.json#/properties
required:
- reason
title: Task Exception Request
type: object


http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#
===================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#
TYPE_NAME: TaskReclaimResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a successful task claim
id: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#
properties:
  MemberNames:
    credentials: credentials
    runId: runId
    status: status
    takenUntil: takenUntil
    workerGroup: workerGroup
    workerId: workerId
  Properties:
    credentials:
      IS_REQUIRED: true
      PROPERTY_NAME: credentials
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties/credentials
      TYPE_NAME: Credentials
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Temporary credentials granting `task.scopes` and the scope:
        `queue:claim-task:<taskId>/<runId>` which allows the worker to reclaim
        the task, upload artifacts and report task resolution.

        The temporary credentials are set to expire after `takenUntil`. They
        won't expire exactly at `takenUntil` but shortly after, hence, requests
        coming close `takenUntil` won't have problems even if there is a little
        clock drift.

        Workers should use these credentials when making requests on behalf of
        a task. This includes requests to create artifacts, reclaiming the task
        reporting the task `completed`, `failed` or `exception`.

        Note, a new set of temporary credentials is issued when the worker
        reclaims the task.
      properties:
        MemberNames:
          accessToken: accessToken
          certificate: certificate
          clientId: clientId
        Properties:
          accessToken:
            IS_REQUIRED: true
            PROPERTY_NAME: accessToken
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties/credentials/properties/accessToken
            TYPE_NAME: AccessToken
            description: |
              The `accessToken` for the temporary credentials.
            minLength: 1
            type: string
          certificate:
            IS_REQUIRED: true
            PROPERTY_NAME: certificate
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties/credentials/properties/certificate
            TYPE_NAME: Certificate
            description: |
              The `certificate` for the temporary credentials, these are required
              for the temporary credentials to work.
            minLength: 1
            type: string
          clientId:
            IS_REQUIRED: true
            PROPERTY_NAME: clientId
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties/credentials/properties/clientId
            TYPE_NAME: ClientId
            description: |
              The `clientId` for the temporary credentials.
            minLength: 1
            type: string
        SortedPropertyNames:
        - accessToken
        - certificate
        - clientId
        SourceURL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties/credentials/properties
      required:
      - clientId
      - accessToken
      - certificate
      type: object
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties/runId
      TYPE_NAME: RunId
      description: |
        `run-id` assigned to this run of the task
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        id: http://schemas.taskcluster.net/queue/v1/task-status.json#
        properties:
          MemberNames:
            deadline: deadline
            expires: expires
            provisionerId: provisionerId
            retriesLeft: retriesLeft
            runs: runs
            schedulerId: schedulerId
            state: state
            taskGroupId: taskGroupId
            taskId: taskId
            workerType: workerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for the provisioner that this task must be scheduled on
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: RetriesLeft
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ListOfRuns
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: runs entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: reasonCreated
                    reasonResolved: reasonResolved
                    resolved: resolved
                    runId: runId
                    scheduled: scheduled
                    started: started
                    state: state
                    takenUntil: takenUntil
                    workerGroup: workerGroup
                    workerId: workerId
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ReasonCreated
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ReasonResolved
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: Resolved
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: RunIdentifier
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: Scheduled
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: Started
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: RunState
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: TakenUntil
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: WorkerGroup
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: WorkerIdentifier
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
              TYPE_NAME: State
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Identifier for worker type within the specified provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties/status
      TYPE_NAME: Status
    takenUntil:
      IS_REQUIRED: true
      PROPERTY_NAME: takenUntil
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties/takenUntil
      TYPE_NAME: TakenUntil
      description: |
        Time at which the run expires and is resolved as `exception`,
        with reason `claim-expired` if the run haven't been reclaimed.
      format: date-time
      type: string
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties/workerGroup
      TYPE_NAME: WorkerGroup
      description: |
        Identifier for the worker-group within which this run started.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties/workerId
      TYPE_NAME: WorkerId
      description: |
        Identifier for the worker executing this run.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - credentials
  - runId
  - status
  - takenUntil
  - workerGroup
  - workerId
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-reclaim-response.json#/properties
required:
- status
- runId
- workerGroup
- workerId
- takenUntil
- credentials
title: Task Reclaim Response
type: object


http://schemas.taskcluster.net/queue/v1/task-status-response.json#
==================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status-response.json#
TYPE_NAME: TaskStatusResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a task status request
id: http://schemas.taskcluster.net/queue/v1/task-status-response.json#
properties:
  MemberNames:
    status: status
  Properties:
    status:
      $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        id: http://schemas.taskcluster.net/queue/v1/task-status.json#
        properties:
          MemberNames:
            deadline: deadline
            expires: expires
            provisionerId: provisionerId
            retriesLeft: retriesLeft
            runs: runs
            schedulerId: schedulerId
            state: state
            taskGroupId: taskGroupId
            taskId: taskId
            workerType: workerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for the provisioner that this task must be scheduled on
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: RetriesLeft
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ListOfRuns
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: runs entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: reasonCreated
                    reasonResolved: reasonResolved
                    resolved: resolved
                    runId: runId
                    scheduled: scheduled
                    started: started
                    state: state
                    takenUntil: takenUntil
                    workerGroup: workerGroup
                    workerId: workerId
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ReasonCreated
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ReasonResolved
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: Resolved
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: RunIdentifier
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: Scheduled
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: Started
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: RunState
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: TakenUntil
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: WorkerGroup
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: WorkerIdentifier
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
              TYPE_NAME: State
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Identifier for worker type within the specified provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status-response.json#/properties/status
      TYPE_NAME: Status
  SortedPropertyNames:
  - status
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status-response.json#/properties
required:
- status
title: Task Status Response
type: object


http://schemas.taskcluster.net/queue/v1/task-status.json#
=========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
TYPE_NAME: TaskStatusStructure
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A representation of **task status** as known by the queue
id: http://schemas.taskcluster.net/queue/v1/task-status.json#
properties:
  MemberNames:
    deadline: deadline
    expires: expires
    provisionerId: provisionerId
    retriesLeft: retriesLeft
    runs: runs
    schedulerId: schedulerId
    state: state
    taskGroupId: taskGroupId
    taskId: taskId
    workerType: workerType
  Properties:
    deadline:
      IS_REQUIRED: true
      PROPERTY_NAME: deadline
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
      TYPE_NAME: Deadline
      description: |
        Deadline of the task, `pending` and `running` runs are
        resolved as **exception** if not resolved by other means
        before the deadline. Note, deadline cannot be more than
        5 days into the future
      format: date-time
      title: Deadline
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
      TYPE_NAME: Expiration
      description: |
        Task expiration, time at which task definition and
        status is deleted. Notice that all artifacts for the task
        must have an expiration that is no later than this.
      format: date-time
      title: Expiration
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
      TYPE_NAME: ProvisionerId
      description: |
        Unique identifier for the provisioner that this task must be scheduled on
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner Id
      type: string
    retriesLeft:
      IS_REQUIRED: true
      PROPERTY_NAME: retriesLeft
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
      TYPE_NAME: RetriesLeft
      description: |
        Number of retries left for the task in case of infrastructure issues
      maximum: 999
      minimum: 0
      title: Retries Left
      type: integer
    runs:
      IS_REQUIRED: true
      PROPERTY_NAME: runs
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
      TYPE_NAME: ListOfRuns
      description: |
        List of runs, ordered so that index `i` has `runId == i`
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: runs entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
        TYPE_NAME: RunInformation
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          JSON object with information about a run
        properties:
          MemberNames:
            reasonCreated: reasonCreated
            reasonResolved: reasonResolved
            resolved: resolved
            runId: runId
            scheduled: scheduled
            started: started
            state: state
            takenUntil: takenUntil
            workerGroup: workerGroup
            workerId: workerId
          Properties:
            reasonCreated:
              IS_REQUIRED: true
              PROPERTY_NAME: reasonCreated
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
              TYPE_NAME: ReasonCreated
              description: |
                Reason for the creation of this run,
                **more reasons may be added in the future**.
              enum:
              - scheduled
              - retry
              - task-retry
              - rerun
              - exception
              title: Reason Created
              type: string
            reasonResolved:
              IS_REQUIRED: false
              PROPERTY_NAME: reasonResolved
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
              TYPE_NAME: ReasonResolved
              description: |
                Reason that run was resolved, this is mainly
                useful for runs resolved as `exception`.
                Note, **more reasons may be added in the future**, also this
                property is only available after the run is resolved. Some of these
                reasons, notably `intermittent-task`, `worker-shutdown`, and
                `claim-expired`, will trigger an automatic retry of the task.
              enum:
              - completed
              - failed
              - deadline-exceeded
              - canceled
              - superseded
              - claim-expired
              - worker-shutdown
              - malformed-payload
              - resource-unavailable
              - internal-error
              - intermittent-task
              title: Reason Resolved
              type: string
            resolved:
              IS_REQUIRED: false
              PROPERTY_NAME: resolved
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
              TYPE_NAME: Resolved
              description: |
                Date-time at which this run was resolved, ie. when the run changed
                state from `running` to either `completed`, `failed` or `exception`.
                This property is only present after the run as been resolved.
              format: date-time
              title: Resolved
              type: string
            runId:
              IS_REQUIRED: true
              PROPERTY_NAME: runId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
              TYPE_NAME: RunIdentifier
              description: |
                Id of this task run, `run-id`s always starts from `0`
              maximum: 1000
              minimum: 0
              title: Run Identifier
              type: integer
            scheduled:
              IS_REQUIRED: true
              PROPERTY_NAME: scheduled
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
              TYPE_NAME: Scheduled
              description: |
                Date-time at which this run was scheduled, ie. when the run was
                created in state `pending`.
              format: date-time
              title: Scheduled
              type: string
            started:
              IS_REQUIRED: false
              PROPERTY_NAME: started
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
              TYPE_NAME: Started
              description: |
                Date-time at which this run was claimed, ie. when the run changed
                state from `pending` to `running`. This property is only present
                after the run has been claimed.
              format: date-time
              title: Started
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
              TYPE_NAME: RunState
              description: |
                State of this run
              enum:
              - pending
              - running
              - completed
              - failed
              - exception
              title: Run State
              type: string
            takenUntil:
              IS_REQUIRED: false
              PROPERTY_NAME: takenUntil
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
              TYPE_NAME: TakenUntil
              description: |
                Time at which the run expires and is resolved as `failed`, if the
                run isn't reclaimed. Note, only present after the run has been
                claimed.
              format: date-time
              title: Taken Until
              type: string
            workerGroup:
              IS_REQUIRED: false
              PROPERTY_NAME: workerGroup
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
              TYPE_NAME: WorkerGroup
              description: |
                Identifier for group that worker who executes this run is a part of,
                this identifier is mainly used for efficient routing.
                Note, this property is only present after the run is claimed.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Group
              type: string
            workerId:
              IS_REQUIRED: false
              PROPERTY_NAME: workerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
              TYPE_NAME: WorkerIdentifier
              description: |
                Identifier for worker evaluating this run within given
                `workerGroup`. Note, this property is only available after the run
                has been claimed.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Identifier
              type: string
          SortedPropertyNames:
          - reasonCreated
          - reasonResolved
          - resolved
          - runId
          - scheduled
          - started
          - state
          - takenUntil
          - workerGroup
          - workerId
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
        required:
        - runId
        - state
        - reasonCreated
        - scheduled
        title: Run Information
        type: object
      title: List of Runs
      type: array
    schedulerId:
      IS_REQUIRED: true
      PROPERTY_NAME: schedulerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
      TYPE_NAME: SchedulerIdentifier
      description: |
        Identifier for the scheduler that _defined_ this task.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Scheduler Identifier
      type: string
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
      TYPE_NAME: State
      description: |
        State of this task. This is just an auxiliary property derived from state
        of latests run, or `unscheduled` if none.
      enum:
      - unscheduled
      - pending
      - running
      - completed
      - failed
      - exception
      title: State
      type: string
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
      TYPE_NAME: TaskGroupIdentifier
      description: |
        Identifier for a group of tasks scheduled together with this task, by
        scheduler identified by `schedulerId`. For tasks scheduled by the
        task-graph scheduler, this is the `taskGraphId`.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task-Group Identifier
      type: string
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
      TYPE_NAME: TaskIdentifier
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
      TYPE_NAME: WorkerType
      description: |
        Identifier for worker type within the specified provisioner
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Type
      type: string
  SortedPropertyNames:
  - deadline
  - expires
  - provisionerId
  - retriesLeft
  - runs
  - schedulerId
  - state
  - taskGroupId
  - taskId
  - workerType
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
required:
- taskId
- provisionerId
- workerType
- schedulerId
- taskGroupId
- deadline
- expires
- retriesLeft
- state
- runs
title: Task Status Structure
type: object


http://schemas.taskcluster.net/queue/v1/task.json#
==================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#
TYPE_NAME: TaskDefinitionResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Definition of a task that can be scheduled
id: http://schemas.taskcluster.net/queue/v1/task.json#
properties:
  MemberNames:
    created: created
    deadline: deadline
    dependencies: dependencies
    expires: expires
    extra: extra
    metadata: metadata
    payload: payload
    priority: priority
    provisionerId: provisionerId
    requires: requires
    retries: retries
    routes: routes
    schedulerId: schedulerId
    scopes: scopes
    tags: tags
    taskGroupId: taskGroupId
    workerType: workerType
  Properties:
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/created
      TYPE_NAME: Created
      description: Creation time of task
      format: date-time
      title: Created
      type: string
    deadline:
      IS_REQUIRED: true
      PROPERTY_NAME: deadline
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/deadline
      TYPE_NAME: Deadline
      description: |
        Deadline of the task, `pending` and `running` runs are
        resolved as **exception** if not resolved by other means
        before the deadline. Note, deadline cannot be more than
        5 days into the future
      format: date-time
      title: Deadline
      type: string
    dependencies:
      IS_REQUIRED: true
      PROPERTY_NAME: dependencies
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/dependencies
      TYPE_NAME: TaskDependencies
      description: |
        List of dependent tasks. These must either be _completed_ or _resolved_
        before this task is scheduled. See `requires` for semantics.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: dependencies entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/dependencies/items
        TYPE_NAME: TaskDependency
        description: |
          The `taskId` of a task that must be resolved before this task is
          scheduled.
        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
        title: Task Dependency
        type: string
      maxItems: 100
      title: Task Dependencies
      type: array
      uniqueItems: true
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/expires
      TYPE_NAME: Expiration
      description: |
        Task expiration, time at which task definition and status is deleted.
        Notice that all artifacts for the task must have an expiration that is no
        later than this. If this property isn't it will be set to `deadline`
        plus one year (this default may subject to change).
      format: date-time
      title: Expiration
      type: string
    extra:
      IS_REQUIRED: true
      PROPERTY_NAME: extra
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/extra
      TYPE_NAME: ExtraData
      default: {}
      description: |
        Object with properties that can hold any kind of extra data that should be
        associated with the task. This can be data for the task which doesn't
        fit into `payload`, or it can supplementary data for use in services
        listening for events from this task. For example this could be details to
        display on _treeherder_, or information for indexing the task. Please, try
        to put all related information under one property, so `extra` data keys
        for treeherder reporting and task indexing don't conflict, hence, we have
        reusable services. **Warning**, do not stuff large data-sets in here,
        task definitions should not take-up multiple MiBs.
      title: Extra Data
      type: object
    metadata:
      IS_REQUIRED: true
      PROPERTY_NAME: metadata
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata
      TYPE_NAME: MetaData
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Required task metadata
      properties:
        MemberNames:
          description: description
          name: name
          owner: owner
          source: source
        Properties:
          description:
            IS_REQUIRED: true
            PROPERTY_NAME: description
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/description
            TYPE_NAME: Description
            description: |
              Human readable description of the task, please **explain** what the
              task does. A few lines of documentation is not going to hurt you.
            maxLength: 32768
            title: Description
            type: string
          name:
            IS_REQUIRED: true
            PROPERTY_NAME: name
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/name
            TYPE_NAME: Name
            description: |
              Human readable name of task, used to very briefly given an idea about
              what the task does.
            maxLength: 255
            title: Name
            type: string
          owner:
            IS_REQUIRED: true
            PROPERTY_NAME: owner
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/owner
            TYPE_NAME: Owner
            description: |
              E-mail of person who caused this task, e.g. the person who did
              `hg push`. The person we should contact to ask why this task is here.
            format: email
            maxLength: 255
            title: Owner
            type: string
          source:
            IS_REQUIRED: true
            PROPERTY_NAME: source
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties/source
            TYPE_NAME: Source
            description: |
              Link to source of this task, should specify a file, revision and
              repository. This should be place someone can go an do a git/hg blame
              to who came up with recipe for this task.
            format: uri
            maxLength: 4096
            pattern: ^https?://
            title: Source
            type: string
        SortedPropertyNames:
        - description
        - name
        - owner
        - source
        SourceURL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/metadata/properties
      required:
      - name
      - description
      - owner
      - source
      title: Meta-data
      type: object
    payload:
      IS_REQUIRED: true
      PROPERTY_NAME: payload
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/payload
      TYPE_NAME: TaskPayload
      description: |
        Task-specific payload following worker-specific format. For example the
        `docker-worker` requires keys like: `image`, `commands` and
        `features`. Refer to the documentation of `docker-worker` for details.
      title: Task Payload
      type: object
    priority:
      IS_REQUIRED: true
      PROPERTY_NAME: priority
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/priority
      TYPE_NAME: TaskPriority
      description: |
        Priority of task, this defaults to `lowest` and the scope
        `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
        to define a task with `<priority>`.
      enum:
      - highest
      - very-high
      - high
      - medium
      - low
      - very-low
      - lowest
      title: Task Priority
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/provisionerId
      TYPE_NAME: ProvisionerId
      description: |
        Unique identifier for a provisioner, that can supply specified
        `workerType`
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner Id
      type: string
    requires:
      IS_REQUIRED: true
      PROPERTY_NAME: requires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/requires
      TYPE_NAME: DependencyRequirementSemantics
      description: |
        The tasks relation to its dependencies. This property specifies the
        semantics of the `task.dependencies` property.
        If `all-completed` is given the task will be scheduled when all
        dependencies are resolved _completed_ (successful resolution).
        If `all-resolved` is given the task will be scheduled when all dependencies
        have been resolved, regardless of what their resolution is.
      enum:
      - all-completed
      - all-resolved
      title: Dependency Requirement Semantics
      type: string
    retries:
      IS_REQUIRED: true
      PROPERTY_NAME: retries
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/retries
      TYPE_NAME: Retries
      description: |
        Number of times to retry the task in case of infrastructure issues.
        An _infrastructure issue_ is a worker node that crashes or is shutdown,
        these events are to be expected.
      maximum: 49
      minimum: 0
      title: Retries
      type: integer
    routes:
      IS_REQUIRED: true
      PROPERTY_NAME: routes
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/routes
      TYPE_NAME: TaskSpecificRoutes
      description: |
        List of task specific routes, AMQP messages will be CC'ed to these routes.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: routes entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/routes/items
        TYPE_NAME: TaskSpecificRoute
        description: |
          A task specific route, AMQP messages will be CC'ed with a routing key
          matching `route.<task-specific route>`. It's possible to dot (`.`) in
          the task specific route to make sub-keys, etc. See the RabbitMQ
          [tutorial](http://www.rabbitmq.com/tutorials/tutorial-five-python.html)
          for examples on how to use routing-keys.
        maxLength: 249
        minLength: 1
        title: Task Specific Route
        type: string
      maxItems: 64
      title: Task Specific Routes
      type: array
      uniqueItems: true
    schedulerId:
      IS_REQUIRED: true
      PROPERTY_NAME: schedulerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/schedulerId
      TYPE_NAME: SchedulerIdentifier
      description: |
        Identifier for the scheduler that _defined_ this task, this can be an
        identifier for a user or a service like the `"task-graph-scheduler"`.
        Along with the `taskGroupId` this is used to form the permission scope
        `queue:assume:scheduler-id:<schedulerId>/<taskGroupId>`,
        this scope is necessary to _schedule_ a defined task, or _rerun_ a task.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Scheduler Identifier
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/scopes
      TYPE_NAME: Scopes
      description: |
        List of scopes (or scope-patterns) that the task is
        authorized to use.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: scopes entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/scopes/items
        TYPE_NAME: Scope
        description: |
          A scope (or scope-patterns) which the task is
          authorized to use. This can be a string or a string
          ending with `*` which will authorize all scopes for
          which the string is a prefix.  Scopes must be composed of
          printable ASCII characters and spaces.
        pattern: ^[\x20-\x7e]*$
        title: Scope
        type: string
      title: Scopes
      type: array
    tags:
      IS_REQUIRED: true
      PROPERTY_NAME: tags
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/tags
      TYPE_NAME: Tags
      additionalProperties:
        Boolean: null
        Properties:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: ""
          TYPE_NAME: ""
          maxLength: 4096
          type: string
      description: |
        Arbitrary key-value tags (only strings limited to 4k). These can be used
        to attach informal meta-data to a task. Use this for informal tags that
        tasks can be classified by. You can also think of strings here as
        candidates for formal meta-data. Something like
        `purpose: 'build' || 'test'` is a good example.
      title: Tags
      type: object
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/taskGroupId
      TYPE_NAME: TaskGroupIdentifier
      description: |
        Identifier for a group of tasks scheduled together with this task, by
        scheduler identified by `schedulerId`. For tasks scheduled by the
        task-graph scheduler, this is the `taskGraphId`.  Defaults to `taskId` if
        property isn't specified.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task-Group Identifier
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task.json#/properties/workerType
      TYPE_NAME: WorkerType
      description: |
        Unique identifier for a worker-type within a specific provisioner
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Type
      type: string
  SortedPropertyNames:
  - created
  - deadline
  - dependencies
  - expires
  - extra
  - metadata
  - payload
  - priority
  - provisionerId
  - requires
  - retries
  - routes
  - schedulerId
  - scopes
  - tags
  - taskGroupId
  - workerType
  SourceURL: http://schemas.taskcluster.net/queue/v1/task.json#/properties
required:
- provisionerId
- workerType
- schedulerId
- taskGroupId
- dependencies
- requires
- routes
- priority
- retries
- created
- deadline
- scopes
- payload
- metadata
- tags
- extra
title: Task Definition Response
type: object


http://schemas.taskcluster.net/queue/v1/update-provisioner-request.json#
========================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-provisioner-request.json#
TYPE_NAME: ProvisionerRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to update a provisioner.
id: http://schemas.taskcluster.net/queue/v1/update-provisioner-request.json#
properties:
  MemberNames:
    actions: actions
    description: description
    expires: expires
    stability: stability
  Properties:
    actions:
      $ref: http://schemas.taskcluster.net/queue/v1/actions.json#
      IS_REQUIRED: false
      PROPERTY_NAME: actions
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#
        TYPE_NAME: Actions1[]
        description: |
          See taskcluster [actions](https://docs.taskcluster.net/reference/platform/taskcluster-queue/docs/actions) documentation.
        id: http://schemas.taskcluster.net/queue/v1/actions.json#
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ' entry'
          SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items
          TYPE_NAME: Actions1
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Actions provide a generic mechanism to expose additional features of a
            provisioner, worker type, or worker to Taskcluster clients.

            An action is comprised of metadata describing the feature it exposes,
            together with a webhook for triggering it.

            The Taskcluster tools site, for example, retrieves actions when displaying
            provisioners, worker types and workers. It presents the provisioner/worker
            type/worker specific actions to the user. When the user triggers an action,
            the web client takes the registered webhook, substitutes parameters into the
            URL (see `url`), signs the requests with the Taskcluster credentials of the
            user operating the web interface, and issues the HTTP request.

            The level to which the action relates (provisioner, worker type, worker) is
            called the action context. All actions, regardless of the action contexts,
            are registered against the provisioner when calling
            `queue.declareProvisioner`.

            The action context is used by the web client to determine where in the web
            interface to present the action to the user as follows:

            | `context`   | Tool where action is displayed |
            |-------------|--------------------------------|
            | provisioner | Provisioner Explorer           |
            | worker-type | Workers Explorer               |
            | worker      | Worker Explorer                |

            See [actions docs](https://docs.taskcluster.net/reference/platform/taskcluster-queue/docs/actions)
            for more information.
          properties:
            MemberNames:
              context: context
              description: description
              method: method
              name: name
              title: title
              url: url
            Properties:
              context:
                IS_REQUIRED: true
                PROPERTY_NAME: context
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/context
                TYPE_NAME: Context
                description: |
                  Actions have a "context" that is one of provisioner, worker-type, or worker, indicating
                  which it applies to. `context` is used by the front-end to know where to display the action.

                  | `context`   | Page displayed        |
                  |-------------|-----------------------|
                  | provisioner | Provisioner Explorer  |
                  | worker-type | Workers Explorer      |
                  | worker      | Worker Explorer       |
                enum:
                - provisioner
                - worker-type
                - worker
                title: Context
                type: string
              description:
                IS_REQUIRED: true
                PROPERTY_NAME: description
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/description
                TYPE_NAME: Description
                description: |
                  Description of the provisioner.
                title: Description
                type: string
              method:
                IS_REQUIRED: true
                PROPERTY_NAME: method
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/method
                TYPE_NAME: Method
                description: |
                  Method to indicate the desired action to be performed for a given resource.
                enum:
                - POST
                - PUT
                - DELETE
                - PATCH
                title: Method
                type: string
              name:
                IS_REQUIRED: true
                PROPERTY_NAME: name
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/name
                TYPE_NAME: Name
                description: |
                  Short names for things like logging/error messages.
                title: Name
                type: string
              title:
                IS_REQUIRED: true
                PROPERTY_NAME: title
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/title
                TYPE_NAME: Title
                description: |
                  Appropriate title for any sort of Modal prompt.
                title: Title
              url:
                IS_REQUIRED: true
                PROPERTY_NAME: url
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties/url
                TYPE_NAME: URL
                description: |
                  When an action is triggered, a request is made using the `url` and `method`.
                  Depending on the `context`, the following parameters will be substituted in the url:

                  | `context`   | Path parameters                                          |
                  |-------------|----------------------------------------------------------|
                  | provisioner | <provisionerId>                                          |
                  | worker-type | <provisionerId>, <workerType>                            |
                  | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                  _Note: The request needs to be signed with the user's Taskcluster credentials._
                title: URL
                type: string
            SortedPropertyNames:
            - context
            - description
            - method
            - name
            - title
            - url
            SourceURL: http://schemas.taskcluster.net/queue/v1/actions.json#/items/properties
          required:
          - name
          - title
          - context
          - url
          - method
          - description
          title: Actions
          type: object
        title: Actions
        type: array
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-provisioner-request.json#/properties/actions
      TYPE_NAME: Actions
    description:
      IS_REQUIRED: false
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-provisioner-request.json#/properties/description
      TYPE_NAME: Description
      description: |
        Description of the provisioner.
      title: Description
      type: string
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-provisioner-request.json#/properties/expires
      TYPE_NAME: ProvisionerExpiration
      description: |
        Date and time after which the provisioner will be automatically
        deleted by the queue.
      format: date-time
      title: Provisioner Expiration
      type: string
    stability:
      IS_REQUIRED: false
      PROPERTY_NAME: stability
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-provisioner-request.json#/properties/stability
      TYPE_NAME: Stability
      description: |
        This is the stability of the provisioner. Accepted values:
          * `experimental`
          * `stable`
          * `deprecated`
      enum:
      - experimental
      - stable
      - deprecated
      title: Stability
      type: string
  SortedPropertyNames:
  - actions
  - description
  - expires
  - stability
  SourceURL: http://schemas.taskcluster.net/queue/v1/update-provisioner-request.json#/properties
title: Provisioner Request
type: object


http://schemas.taskcluster.net/queue/v1/update-worker-request.json#
===================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-worker-request.json#
TYPE_NAME: WorkerRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to update a worker.
id: http://schemas.taskcluster.net/queue/v1/update-worker-request.json#
properties:
  MemberNames:
    expires: expires
  Properties:
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-worker-request.json#/properties/expires
      TYPE_NAME: WorkerExpiration
      description: |
        Date and time after which the worker will be automatically
        deleted by the queue.
      format: date-time
      title: Worker Expiration
      type: string
  SortedPropertyNames:
  - expires
  SourceURL: http://schemas.taskcluster.net/queue/v1/update-worker-request.json#/properties
title: Worker Request
type: object


http://schemas.taskcluster.net/queue/v1/update-workertype-request.json#
=======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-workertype-request.json#
TYPE_NAME: WorkerTypeRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to update a worker-type.
id: http://schemas.taskcluster.net/queue/v1/update-workertype-request.json#
properties:
  MemberNames:
    description: description
    expires: expires
    stability: stability
  Properties:
    description:
      IS_REQUIRED: false
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-workertype-request.json#/properties/description
      TYPE_NAME: Description
      description: |
        Description of the provisioner.
      title: Description
      type: string
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-workertype-request.json#/properties/expires
      TYPE_NAME: WorkerTypeExpiration
      description: |
        Date and time after which the worker-type will be automatically
        deleted by the queue.
      format: date-time
      title: Worker-type Expiration
      type: string
    stability:
      IS_REQUIRED: false
      PROPERTY_NAME: stability
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/update-workertype-request.json#/properties/stability
      TYPE_NAME: Stability
      description: |
        This is the stability of the provisioner. Accepted values:
          * `experimental`
          * `stable`
          * `deprecated`
      enum:
      - experimental
      - stable
      - deprecated
      title: Stability
      type: string
  SortedPropertyNames:
  - description
  - expires
  - stability
  SourceURL: http://schemas.taskcluster.net/queue/v1/update-workertype-request.json#/properties
title: Worker-type Request
type: object


http://schemas.taskcluster.net/queue/v1/worker-response.json#
=============================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#
TYPE_NAME: WorkerResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response containing information about a worker.
id: http://schemas.taskcluster.net/queue/v1/worker-response.json#
properties:
  MemberNames:
    actions: actions
    expires: expires
    firstClaim: firstClaim
    provisionerId: provisionerId
    quarantineUntil: quarantineUntil
    recentTasks: recentTasks
    workerGroup: workerGroup
    workerId: workerId
    workerType: workerType
  Properties:
    actions:
      IS_REQUIRED: true
      PROPERTY_NAME: actions
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/actions
      TYPE_NAME: WorkerActions
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: actions entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/actions/items
        TYPE_NAME: Actions
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Actions provide a generic mechanism to expose additional features of a
          provisioner, worker type, or worker to Taskcluster clients.

          An action is comprised of metadata describing the feature it exposes,
          together with a webhook for triggering it.

          The Taskcluster tools site, for example, retrieves actions when displaying
          provisioners, worker types and workers. It presents the provisioner/worker
          type/worker specific actions to the user. When the user triggers an action,
          the web client takes the registered webhook, substitutes parameters into the
          URL (see `url`), signs the requests with the Taskcluster credentials of the
          user operating the web interface, and issues the HTTP request.

          The level to which the action relates (provisioner, worker type, worker) is
          called the action context. All actions, regardless of the action contexts,
          are registered against the provisioner when calling
          `queue.declareProvisioner`.

          The action context is used by the web client to determine where in the web
          interface to present the action to the user as follows:

          | `context`   | Tool where action is displayed |
          |-------------|--------------------------------|
          | provisioner | Provisioner Explorer           |
          | worker-type | Workers Explorer               |
          | worker      | Worker Explorer                |

          See [actions docs](https://docs.taskcluster.net/reference/platform/taskcluster-queue/docs/actions)
          for more information.
        properties:
          MemberNames:
            context: context
            description: description
            method: method
            name: name
            title: title
            url: url
          Properties:
            context:
              IS_REQUIRED: true
              PROPERTY_NAME: context
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/actions/items/properties/context
              TYPE_NAME: Context
              description: |
                Only actions with the context `worker` are included.
              enum:
              - worker
              title: Context
              type: string
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/actions/items/properties/description
              TYPE_NAME: Description
              description: |
                Description of the provisioner.
              title: Description
              type: string
            method:
              IS_REQUIRED: true
              PROPERTY_NAME: method
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/actions/items/properties/method
              TYPE_NAME: Method
              description: |
                Method to indicate the desired action to be performed for a given resource.
              enum:
              - POST
              - PUT
              - DELETE
              - PATCH
              title: Method
              type: string
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/actions/items/properties/name
              TYPE_NAME: Name
              description: |
                Short names for things like logging/error messages.
              title: Name
              type: string
            title:
              IS_REQUIRED: true
              PROPERTY_NAME: title
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/actions/items/properties/title
              TYPE_NAME: Title
              description: |
                Appropriate title for any sort of Modal prompt.
              title: Title
            url:
              IS_REQUIRED: true
              PROPERTY_NAME: url
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/actions/items/properties/url
              TYPE_NAME: URL
              description: |
                When an action is triggered, a request is made using the `url` and `method`.
                Depending on the `context`, the following parameters will be substituted in the url:

                | `context`   | Path parameters                                          |
                |-------------|----------------------------------------------------------|
                | provisioner | <provisionerId>                                          |
                | worker-type | <provisionerId>, <workerType>                            |
                | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                _Note: The request needs to be signed with the user's Taskcluster credentials._
              title: URL
              type: string
          SortedPropertyNames:
          - context
          - description
          - method
          - name
          - title
          - url
          SourceURL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/actions/items/properties
        required:
        - name
        - title
        - context
        - url
        - method
        - description
        title: Actions
        type: object
      title: Worker Actions
      type: array
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/expires
      TYPE_NAME: WorkerExpiration
      description: |
        Date and time after which the worker will be automatically
        deleted by the queue.
      format: date-time
      title: Worker Expiration
      type: string
    firstClaim:
      IS_REQUIRED: true
      PROPERTY_NAME: firstClaim
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/firstClaim
      TYPE_NAME: FirstTaskClaimed
      description: |
        Date of the first time this worker claimed a task.
      format: date-time
      title: First task claimed
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/provisionerId
      TYPE_NAME: ProvisionerID
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner ID
      type: string
    quarantineUntil:
      IS_REQUIRED: false
      PROPERTY_NAME: quarantineUntil
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/quarantineUntil
      TYPE_NAME: WorkerQuarantine
      description: |
        Quarantining a worker allows the machine to remain alive but not accept jobs.
        Once the quarantineUntil time has elapsed, the worker resumes accepting jobs.
        Note that a quarantine can be lifted by setting `quarantineUntil` to the present time (or
        somewhere in the past).
      format: date-time
      title: Worker Quarantine
      type: string
    recentTasks:
      IS_REQUIRED: true
      PROPERTY_NAME: recentTasks
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/recentTasks
      TYPE_NAME: RecentTasks
      description: |
        List of 20 most recent tasks claimed by the worker.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: recentTasks entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/recentTasks/items
        TYPE_NAME: RecentTasksEntry
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            runId: runId
            taskId: taskId
          Properties:
            runId:
              IS_REQUIRED: false
              PROPERTY_NAME: runId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/recentTasks/items/properties/runId
              TYPE_NAME: RunIdentifier
              description: |
                Id of this task run, `run-id`s always starts from `0`
              maximum: 1000
              minimum: 0
              title: Run Identifier
              type: integer
            taskId:
              IS_REQUIRED: false
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/recentTasks/items/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
          SortedPropertyNames:
          - runId
          - taskId
          SourceURL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/recentTasks/items/properties
        type: object
      title: Recent Tasks
      type: array
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/workerGroup
      TYPE_NAME: WorkerGroup
      description: |
        Identifier for group that worker who executes this run is a part of,
        this identifier is mainly used for efficient routing.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Group
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/workerId
      TYPE_NAME: WorkerIdentifier
      description: |
        Identifier for worker evaluating this run within given
        `workerGroup`.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Identifier
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties/workerType
      TYPE_NAME: WorkerTypeName
      description: |
        WorkerType name.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: WorkerType name
      type: string
  SortedPropertyNames:
  - actions
  - expires
  - firstClaim
  - provisionerId
  - quarantineUntil
  - recentTasks
  - workerGroup
  - workerId
  - workerType
  SourceURL: http://schemas.taskcluster.net/queue/v1/worker-response.json#/properties
required:
- provisionerId
- workerType
- workerGroup
- workerId
- recentTasks
- expires
- firstClaim
- actions
title: Worker Response
type: object


http://schemas.taskcluster.net/queue/v1/workertype-response.json#
=================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#
TYPE_NAME: WorkerTypeResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a worker-type request from a provisioner.
id: http://schemas.taskcluster.net/queue/v1/workertype-response.json#
properties:
  MemberNames:
    actions: actions
    description: description
    expires: expires
    lastDateActive: lastDateActive
    provisionerId: provisionerId
    stability: stability
    workerType: workerType
  Properties:
    actions:
      IS_REQUIRED: true
      PROPERTY_NAME: actions
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/actions
      TYPE_NAME: WorkerTypeActions
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: actions entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/actions/items
        TYPE_NAME: Actions
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Actions provide a generic mechanism to expose additional features of a
          provisioner, worker type, or worker to Taskcluster clients.

          An action is comprised of metadata describing the feature it exposes,
          together with a webhook for triggering it.

          The Taskcluster tools site, for example, retrieves actions when displaying
          provisioners, worker types and workers. It presents the provisioner/worker
          type/worker specific actions to the user. When the user triggers an action,
          the web client takes the registered webhook, substitutes parameters into the
          URL (see `url`), signs the requests with the Taskcluster credentials of the
          user operating the web interface, and issues the HTTP request.

          The level to which the action relates (provisioner, worker type, worker) is
          called the action context. All actions, regardless of the action contexts,
          are registered against the provisioner when calling
          `queue.declareProvisioner`.

          The action context is used by the web client to determine where in the web
          interface to present the action to the user as follows:

          | `context`   | Tool where action is displayed |
          |-------------|--------------------------------|
          | provisioner | Provisioner Explorer           |
          | worker-type | Workers Explorer               |
          | worker      | Worker Explorer                |

          See [actions docs](https://docs.taskcluster.net/reference/platform/taskcluster-queue/docs/actions)
          for more information.
        properties:
          MemberNames:
            context: context
            description: description
            method: method
            name: name
            title: title
            url: url
          Properties:
            context:
              IS_REQUIRED: true
              PROPERTY_NAME: context
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/actions/items/properties/context
              TYPE_NAME: Context
              description: |
                Only actions with the context `worker-type` are included.
              enum:
              - worker-type
              title: Context
              type: string
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/actions/items/properties/description
              TYPE_NAME: Description
              description: |
                Description of the provisioner.
              title: Description
              type: string
            method:
              IS_REQUIRED: true
              PROPERTY_NAME: method
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/actions/items/properties/method
              TYPE_NAME: Method
              description: |
                Method to indicate the desired action to be performed for a given resource.
              enum:
              - POST
              - PUT
              - DELETE
              - PATCH
              title: Method
              type: string
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/actions/items/properties/name
              TYPE_NAME: Name
              description: |
                Short names for things like logging/error messages.
              title: Name
              type: string
            title:
              IS_REQUIRED: true
              PROPERTY_NAME: title
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/actions/items/properties/title
              TYPE_NAME: Title
              description: |
                Appropriate title for any sort of Modal prompt.
              title: Title
            url:
              IS_REQUIRED: true
              PROPERTY_NAME: url
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/actions/items/properties/url
              TYPE_NAME: URL
              description: |
                When an action is triggered, a request is made using the `url` and `method`.
                Depending on the `context`, the following parameters will be substituted in the url:

                | `context`   | Path parameters                                          |
                |-------------|----------------------------------------------------------|
                | provisioner | <provisionerId>                                          |
                | worker-type | <provisionerId>, <workerType>                            |
                | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                _Note: The request needs to be signed with the user's Taskcluster credentials._
              title: URL
              type: string
          SortedPropertyNames:
          - context
          - description
          - method
          - name
          - title
          - url
          SourceURL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/actions/items/properties
        required:
        - name
        - title
        - context
        - url
        - method
        - description
        title: Actions
        type: object
      title: Worker-type Actions
      type: array
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/description
      TYPE_NAME: Description
      description: |
        Description of the worker-type.
      title: Description
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/expires
      TYPE_NAME: WorkerTypeExpiration
      description: |
        Date and time after which the worker-type will be automatically
        deleted by the queue.
      format: date-time
      title: Worker-type Expiration
      type: string
    lastDateActive:
      IS_REQUIRED: true
      PROPERTY_NAME: lastDateActive
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/lastDateActive
      TYPE_NAME: WorkerTypeLastDateActive
      description: |
        Date of the last time this worker-type was seen active. `lastDateActive` is updated every 6 hours
        but may be off by up-to 6 hours. Nonetheless, `lastDateActive` is a good indicator
        of when the worker-type was last seen active.
      format: date-time
      title: Worker-type Last Date Active
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/provisionerId
      TYPE_NAME: ProvisionerID
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner ID
      type: string
    stability:
      IS_REQUIRED: true
      PROPERTY_NAME: stability
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/stability
      TYPE_NAME: Stability
      description: |
        This is the stability of the worker-type. Accepted values:
          * `experimental`
          * `stable`
          * `deprecated`
      enum:
      - experimental
      - stable
      - deprecated
      title: Stability
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties/workerType
      TYPE_NAME: WorkerTypeName
      description: |
        WorkerType name.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker-type Name
      type: string
  SortedPropertyNames:
  - actions
  - description
  - expires
  - lastDateActive
  - provisionerId
  - stability
  - workerType
  SourceURL: http://schemas.taskcluster.net/queue/v1/workertype-response.json#/properties
required:
- workerType
- provisionerId
- description
- stability
- expires
- lastDateActive
- actions
title: Worker-type Response
type: object


http://references.taskcluster.net/queue/v1/exchanges.json
=========================================================
Version         = '0'
Title           = 'Queue AMQP Exchanges'
Description     = 'The queue, typically available at `queue.taskcluster.net`, is responsible
for accepting tasks and track their state as they are executed by
workers. In order ensure they are eventually resolved.

This document describes AMQP exchanges offered by the queue, which allows
third-party listeners to monitor tasks as they progress to resolution.
These exchanges targets the following audience:
 * Schedulers, who takes action after tasks are completed,
 * Workers, who wants to listen for new or canceled tasks (optional),
 * Tools, that wants to update their view as task progress.

You'll notice that all the exchanges in the document shares the same
routing key pattern. This makes it very easy to bind to all messages
about a certain kind tasks.

**Task specific routes**, a task can define a task specific route using
the `task.routes` property. See task creation documentation for details
on permissions required to provide task specific routes. If a task has
the entry `'notify.by-email'` in as task specific route defined in
`task.routes` all messages about this task will be CC'ed with the
routing-key `'route.notify.by-email'`.

These routes will always be prefixed `route.`, so that cannot interfere
with the _primary_ routing key as documented here. Notice that the
_primary_ routing key is always prefixed `primary.`. This is ensured
in the routing key reference, so API clients will do this automatically.

Please, note that the way RabbitMQ works, the message will only arrive
in your queue once, even though you may have bound to the exchange with
multiple routing key patterns that matches more of the CC'ed routing
routing keys.

**Delivery guarantees**, most operations on the queue are idempotent,
which means that if repeated with the same arguments then the requests
will ensure completion of the operation and return the same response.
This is useful if the server crashes or the TCP connection breaks, but
when re-executing an idempotent operation, the queue will also resend
any related AMQP messages. Hence, messages may be repeated.

This shouldn't be much of a problem, as the best you can achieve using
confirm messages with AMQP is at-least-once delivery semantics. Hence,
this only prevents you from obtaining at-most-once delivery semantics.

**Remark**, some message generated by timeouts maybe dropped if the
server crashes at wrong time. Ideally, we'll address this in the
future. For now we suggest you ignore this corner case, and notify us
if this corner case is of concern to you.'
Exchange Prefix = 'exchange/taskcluster-queue/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-defined'
    Entry Name        = 'taskDefined'
    Entry Title       = 'Task Defined Messages'
    Entry Description = 'When a task is created or just defined a message is posted to this
exchange.

This message exchange is mainly useful when tasks are scheduled by a
scheduler that uses `defineTask` as this does not make the task
`pending`. Thus, no `taskPending` message is published.
Please, note that messages are also published on this exchange if defined
using `createTask`.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/queue/v1/task-defined-message.json#'
Entry 1     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-pending'
    Entry Name        = 'taskPending'
    Entry Title       = 'Task Pending Messages'
    Entry Description = 'When a task becomes `pending` a message is posted to this exchange.

This is useful for workers who doesn't want to constantly poll the queue
for new tasks. The queue will also be authority for task states and
claims. But using this exchange workers should be able to distribute work
efficiently and they would be able to reduce their polling interval
significantly without affecting general responsiveness.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/queue/v1/task-pending-message.json#'
Entry 2     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-running'
    Entry Name        = 'taskRunning'
    Entry Title       = 'Task Running Messages'
    Entry Description = 'Whenever a task is claimed by a worker, a run is started on the worker,
and a message is posted on this exchange.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/queue/v1/task-running-message.json#'
Entry 3     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'artifact-created'
    Entry Name        = 'artifactCreated'
    Entry Title       = 'Artifact Creation Messages'
    Entry Description = 'Whenever the `createArtifact` end-point is called, the queue will create
a record of the artifact and post a message on this exchange. All of this
happens before the queue returns a signed URL for the caller to upload
the actual artifact with (pending on `storageType`).

This means that the actual artifact is rarely available when this message
is posted. But it is not unreasonable to assume that the artifact will
will become available at some point later. Most signatures will expire in
30 minutes or so, forcing the uploader to call `createArtifact` with
the same payload again in-order to continue uploading the artifact.

However, in most cases (especially for small artifacts) it's very
reasonable assume the artifact will be available within a few minutes.
This property means that this exchange is mostly useful for tools
monitoring task evaluation. One could also use it count number of
artifacts per task, or _index_ artifacts though in most cases it'll be
smarter to index artifacts after the task in question have completed
successfully.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#'
Entry 4     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-completed'
    Entry Name        = 'taskCompleted'
    Entry Title       = 'Task Completed Messages'
    Entry Description = 'When a task is successfully completed by a worker a message is posted
this exchange.
This message is routed using the `runId`, `workerGroup` and `workerId`
that completed the task. But information about additional runs is also
available from the task status structure.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/queue/v1/task-completed-message.json#'
Entry 5     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-failed'
    Entry Name        = 'taskFailed'
    Entry Title       = 'Task Failed Messages'
    Entry Description = 'When a task ran, but failed to complete successfully a message is posted
to this exchange. This is same as worker ran task-specific code, but the
task specific code exited non-zero.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/queue/v1/task-failed-message.json#'
Entry 6     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-exception'
    Entry Name        = 'taskException'
    Entry Title       = 'Task Exception Messages'
    Entry Description = 'Whenever Taskcluster fails to run a message is posted to this exchange.
This happens if the task isn't completed before its `deadlìne`,
all retries failed (i.e. workers stopped responding), the task was
canceled by another entity, or the task carried a malformed payload.

The specific _reason_ is evident from that task status structure, refer
to the `reasonResolved` property for the last run.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/queue/v1/task-exception-message.json#'
Entry 7     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-group-resolved'
    Entry Name        = 'taskGroupResolved'
    Entry Title       = 'Task Group Resolved Messages'
    Entry Description = 'A message is published on task-group-resolved whenever all submitted
tasks (whether scheduled or unscheduled) for a given task group have
been resolved, regardless of whether they resolved as successful or
not. A task group may be resolved multiple times, since new tasks may
be submitted against an already resolved task group.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` for the task-group this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` for the task-group this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/queue/v1/task-group-resolved.json#'


http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#
======================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#
TYPE_NAME: ArtifactCreatedMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting a new artifact has been created for a given task.
id: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#
properties:
  MemberNames:
    artifact: artifact
    runId: runId
    status: status
    version: version
    workerGroup: workerGroup
    workerId: workerId
  Properties:
    artifact:
      IS_REQUIRED: true
      PROPERTY_NAME: artifact
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/artifact
      TYPE_NAME: ArtifactCreated
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Information about the artifact that was created
      properties:
        MemberNames:
          contentType: contentType
          expires: expires
          name: name
          storageType: storageType
        Properties:
          contentType:
            IS_REQUIRED: true
            PROPERTY_NAME: contentType
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/artifact/properties/contentType
            TYPE_NAME: ContentType
            description: |
              Mimetype for the artifact that was created.
            maxLength: 255
            title: Content-Type
            type: string
          expires:
            IS_REQUIRED: true
            PROPERTY_NAME: expires
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/artifact/properties/expires
            TYPE_NAME: ArtifactExpiration
            description: |
              Date and time after which the artifact created will be automatically
              deleted by the queue.
            format: date-time
            title: Artifact Expiration
            type: string
          name:
            IS_REQUIRED: true
            PROPERTY_NAME: name
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/artifact/properties/name
            TYPE_NAME: ArtifactName
            description: |
              Name of the artifact that was created, this is useful if you want to
              attempt to fetch the artifact. But keep in mind that just because an
              artifact is created doesn't mean that it's immediately available.
            maxLength: 1024
            title: Artifact Name
            type: string
          storageType:
            IS_REQUIRED: true
            PROPERTY_NAME: storageType
            SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/artifact/properties/storageType
            TYPE_NAME: ArtifactStorageType
            description: |
              This is the `storageType` for the request that was used to create the
              artifact.
            enum:
            - blob
            - reference
            - error
            title: Artifact Storage-Type
            type: string
        SortedPropertyNames:
        - contentType
        - expires
        - name
        - storageType
        SourceURL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/artifact/properties
      required:
      - storageType
      - name
      - expires
      - contentType
      title: Artifact Created
      type: object
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/runId
      TYPE_NAME: RunId
      description: |
        Id of the run on which artifact was created.
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        id: http://schemas.taskcluster.net/queue/v1/task-status.json#
        properties:
          MemberNames:
            deadline: deadline
            expires: expires
            provisionerId: provisionerId
            retriesLeft: retriesLeft
            runs: runs
            schedulerId: schedulerId
            state: state
            taskGroupId: taskGroupId
            taskId: taskId
            workerType: workerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for the provisioner that this task must be scheduled on
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: RetriesLeft
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ListOfRuns
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: runs entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: reasonCreated
                    reasonResolved: reasonResolved
                    resolved: resolved
                    runId: runId
                    scheduled: scheduled
                    started: started
                    state: state
                    takenUntil: takenUntil
                    workerGroup: workerGroup
                    workerId: workerId
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ReasonCreated
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ReasonResolved
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: Resolved
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: RunIdentifier
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: Scheduled
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: Started
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: RunState
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: TakenUntil
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: WorkerGroup
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: WorkerIdentifier
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
              TYPE_NAME: State
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Identifier for worker type within the specified provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/status
      TYPE_NAME: Status
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
      type: integer
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/workerGroup
      TYPE_NAME: WorkerGroup
      description: |
        Identifier for the worker-group within which the run with the created
        artifacted is running.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties/workerId
      TYPE_NAME: WorkerId
      description: |
        Identifier for the worker within which the run with the created artifact
        is running.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - artifact
  - runId
  - status
  - version
  - workerGroup
  - workerId
  SourceURL: http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#/properties
required:
- version
- status
- runId
- workerGroup
- workerId
- artifact
title: Artifact Created Message
type: object


http://schemas.taskcluster.net/queue/v1/task-completed-message.json#
====================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-completed-message.json#
TYPE_NAME: TaskCompletedMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a task has complete successfully.
id: http://schemas.taskcluster.net/queue/v1/task-completed-message.json#
properties:
  MemberNames:
    runId: runId
    status: status
    version: version
    workerGroup: workerGroup
    workerId: workerId
  Properties:
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-completed-message.json#/properties/runId
      TYPE_NAME: RunId
      description: |
        Id of the run that completed the task
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        id: http://schemas.taskcluster.net/queue/v1/task-status.json#
        properties:
          MemberNames:
            deadline: deadline
            expires: expires
            provisionerId: provisionerId
            retriesLeft: retriesLeft
            runs: runs
            schedulerId: schedulerId
            state: state
            taskGroupId: taskGroupId
            taskId: taskId
            workerType: workerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for the provisioner that this task must be scheduled on
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: RetriesLeft
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ListOfRuns
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: runs entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: reasonCreated
                    reasonResolved: reasonResolved
                    resolved: resolved
                    runId: runId
                    scheduled: scheduled
                    started: started
                    state: state
                    takenUntil: takenUntil
                    workerGroup: workerGroup
                    workerId: workerId
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ReasonCreated
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ReasonResolved
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: Resolved
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: RunIdentifier
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: Scheduled
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: Started
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: RunState
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: TakenUntil
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: WorkerGroup
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: WorkerIdentifier
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
              TYPE_NAME: State
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Identifier for worker type within the specified provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-completed-message.json#/properties/status
      TYPE_NAME: Status
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-completed-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
      type: integer
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-completed-message.json#/properties/workerGroup
      TYPE_NAME: WorkerGroup
      description: |
        Identifier for the worker-group within which this run ran.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-completed-message.json#/properties/workerId
      TYPE_NAME: WorkerId
      description: |
        Identifier for the worker that executed this run.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - runId
  - status
  - version
  - workerGroup
  - workerId
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-completed-message.json#/properties
required:
- version
- status
- runId
- workerGroup
- workerId
title: Task Completed Message
type: object


http://schemas.taskcluster.net/queue/v1/task-defined-message.json#
==================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-defined-message.json#
TYPE_NAME: TaskDefinedMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a task has been defined. The task may or may not be
  _scheduled_ too.
id: http://schemas.taskcluster.net/queue/v1/task-defined-message.json#
properties:
  MemberNames:
    status: status
    version: version
  Properties:
    status:
      $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        id: http://schemas.taskcluster.net/queue/v1/task-status.json#
        properties:
          MemberNames:
            deadline: deadline
            expires: expires
            provisionerId: provisionerId
            retriesLeft: retriesLeft
            runs: runs
            schedulerId: schedulerId
            state: state
            taskGroupId: taskGroupId
            taskId: taskId
            workerType: workerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for the provisioner that this task must be scheduled on
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: RetriesLeft
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ListOfRuns
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: runs entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: reasonCreated
                    reasonResolved: reasonResolved
                    resolved: resolved
                    runId: runId
                    scheduled: scheduled
                    started: started
                    state: state
                    takenUntil: takenUntil
                    workerGroup: workerGroup
                    workerId: workerId
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ReasonCreated
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ReasonResolved
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: Resolved
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: RunIdentifier
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: Scheduled
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: Started
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: RunState
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: TakenUntil
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: WorkerGroup
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: WorkerIdentifier
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
              TYPE_NAME: State
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Identifier for worker type within the specified provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-defined-message.json#/properties/status
      TYPE_NAME: Status
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-defined-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
      type: integer
  SortedPropertyNames:
  - status
  - version
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-defined-message.json#/properties
required:
- version
- status
title: Task Defined Message
type: object


http://schemas.taskcluster.net/queue/v1/task-exception-message.json#
====================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-exception-message.json#
TYPE_NAME: TaskExceptionMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that Taskcluster have failed to run a task.
id: http://schemas.taskcluster.net/queue/v1/task-exception-message.json#
properties:
  MemberNames:
    runId: runId
    status: status
    version: version
    workerGroup: workerGroup
    workerId: workerId
  Properties:
    runId:
      IS_REQUIRED: false
      PROPERTY_NAME: runId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-exception-message.json#/properties/runId
      TYPE_NAME: RunId
      description: |
        Id of the last run for the task, not provided if `deadline`
        was exceeded before a run was started.
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        id: http://schemas.taskcluster.net/queue/v1/task-status.json#
        properties:
          MemberNames:
            deadline: deadline
            expires: expires
            provisionerId: provisionerId
            retriesLeft: retriesLeft
            runs: runs
            schedulerId: schedulerId
            state: state
            taskGroupId: taskGroupId
            taskId: taskId
            workerType: workerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for the provisioner that this task must be scheduled on
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: RetriesLeft
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ListOfRuns
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: runs entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: reasonCreated
                    reasonResolved: reasonResolved
                    resolved: resolved
                    runId: runId
                    scheduled: scheduled
                    started: started
                    state: state
                    takenUntil: takenUntil
                    workerGroup: workerGroup
                    workerId: workerId
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ReasonCreated
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ReasonResolved
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: Resolved
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: RunIdentifier
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: Scheduled
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: Started
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: RunState
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: TakenUntil
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: WorkerGroup
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: WorkerIdentifier
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
              TYPE_NAME: State
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Identifier for worker type within the specified provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-exception-message.json#/properties/status
      TYPE_NAME: Status
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-exception-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
      type: integer
    workerGroup:
      IS_REQUIRED: false
      PROPERTY_NAME: workerGroup
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-exception-message.json#/properties/workerGroup
      TYPE_NAME: WorkerGroup
      description: |
        Identifier for the worker-group within which the last attempt of the task
        ran. Not provided, if `deadline` was exceeded before a run was started.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: false
      PROPERTY_NAME: workerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-exception-message.json#/properties/workerId
      TYPE_NAME: WorkerId
      description: |
        Identifier for the last worker that failed to report, causing the task
        to fail. Not provided, if `deadline` was exceeded before a run
        was started.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - runId
  - status
  - version
  - workerGroup
  - workerId
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-exception-message.json#/properties
required:
- version
- status
title: Task Exception Message
type: object


http://schemas.taskcluster.net/queue/v1/task-failed-message.json#
=================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-failed-message.json#
TYPE_NAME: TaskFailedMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a task failed to complete successfully.
id: http://schemas.taskcluster.net/queue/v1/task-failed-message.json#
properties:
  MemberNames:
    runId: runId
    status: status
    version: version
    workerGroup: workerGroup
    workerId: workerId
  Properties:
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-failed-message.json#/properties/runId
      TYPE_NAME: RunId
      description: |
        Id of the run that failed.
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        id: http://schemas.taskcluster.net/queue/v1/task-status.json#
        properties:
          MemberNames:
            deadline: deadline
            expires: expires
            provisionerId: provisionerId
            retriesLeft: retriesLeft
            runs: runs
            schedulerId: schedulerId
            state: state
            taskGroupId: taskGroupId
            taskId: taskId
            workerType: workerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for the provisioner that this task must be scheduled on
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: RetriesLeft
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ListOfRuns
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: runs entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: reasonCreated
                    reasonResolved: reasonResolved
                    resolved: resolved
                    runId: runId
                    scheduled: scheduled
                    started: started
                    state: state
                    takenUntil: takenUntil
                    workerGroup: workerGroup
                    workerId: workerId
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ReasonCreated
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ReasonResolved
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: Resolved
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: RunIdentifier
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: Scheduled
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: Started
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: RunState
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: TakenUntil
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: WorkerGroup
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: WorkerIdentifier
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
              TYPE_NAME: State
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Identifier for worker type within the specified provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-failed-message.json#/properties/status
      TYPE_NAME: Status
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-failed-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
      type: integer
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-failed-message.json#/properties/workerGroup
      TYPE_NAME: WorkerGroup
      description: |
        Identifier for the worker-group within which this run ran.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-failed-message.json#/properties/workerId
      TYPE_NAME: WorkerId
      description: |
        Identifier for the worker that executed this run.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - runId
  - status
  - version
  - workerGroup
  - workerId
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-failed-message.json#/properties
required:
- version
- status
- runId
- workerGroup
- workerId
title: Task Failed Message
type: object


http://schemas.taskcluster.net/queue/v1/task-group-resolved.json#
=================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-group-resolved.json#
TYPE_NAME: TaskGroupResolved
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message written once a task group has no tasks to be run. It is
  possible for a task group to later have another task added, in which
  case this message will be sent again once it finishes.
id: http://schemas.taskcluster.net/queue/v1/task-group-resolved.json#
properties:
  MemberNames:
    schedulerId: schedulerId
    taskGroupId: taskGroupId
    version: version
  Properties:
    schedulerId:
      IS_REQUIRED: true
      PROPERTY_NAME: schedulerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-group-resolved.json#/properties/schedulerId
      TYPE_NAME: SchedulerIdentifier
      description: |
        Identifier for the scheduler that created this task-group.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Scheduler Identifier
      type: string
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-group-resolved.json#/properties/taskGroupId
      TYPE_NAME: TaskGroupIdentifier
      description: |
        Identifier for the task-group being listed.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task-Group Identifier
      type: string
    version:
      IS_REQUIRED: false
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-group-resolved.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
      type: integer
  SortedPropertyNames:
  - schedulerId
  - taskGroupId
  - version
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-group-resolved.json#/properties
required:
- taskGroupId
- schedulerId
title: Task Group Resolved
type: object


http://schemas.taskcluster.net/queue/v1/task-pending-message.json#
==================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-pending-message.json#
TYPE_NAME: TaskPendingMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a task is now pending
id: http://schemas.taskcluster.net/queue/v1/task-pending-message.json#
properties:
  MemberNames:
    runId: runId
    status: status
    version: version
  Properties:
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-pending-message.json#/properties/runId
      TYPE_NAME: RunId
      description: |
        Id of run that became pending, `run-id`s always starts from 0
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        id: http://schemas.taskcluster.net/queue/v1/task-status.json#
        properties:
          MemberNames:
            deadline: deadline
            expires: expires
            provisionerId: provisionerId
            retriesLeft: retriesLeft
            runs: runs
            schedulerId: schedulerId
            state: state
            taskGroupId: taskGroupId
            taskId: taskId
            workerType: workerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for the provisioner that this task must be scheduled on
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: RetriesLeft
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ListOfRuns
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: runs entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: reasonCreated
                    reasonResolved: reasonResolved
                    resolved: resolved
                    runId: runId
                    scheduled: scheduled
                    started: started
                    state: state
                    takenUntil: takenUntil
                    workerGroup: workerGroup
                    workerId: workerId
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ReasonCreated
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ReasonResolved
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: Resolved
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: RunIdentifier
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: Scheduled
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: Started
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: RunState
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: TakenUntil
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: WorkerGroup
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: WorkerIdentifier
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
              TYPE_NAME: State
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Identifier for worker type within the specified provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-pending-message.json#/properties/status
      TYPE_NAME: Status
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-pending-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
      type: integer
  SortedPropertyNames:
  - runId
  - status
  - version
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-pending-message.json#/properties
required:
- version
- status
- runId
title: Task Pending Message
type: object


http://schemas.taskcluster.net/queue/v1/task-running-message.json#
==================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-running-message.json#
TYPE_NAME: TaskRunningMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a given run of a task have started
id: http://schemas.taskcluster.net/queue/v1/task-running-message.json#
properties:
  MemberNames:
    runId: runId
    status: status
    takenUntil: takenUntil
    version: version
    workerGroup: workerGroup
    workerId: workerId
  Properties:
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-running-message.json#/properties/runId
      TYPE_NAME: RunId
      description: |
        Id of the run that just started, always starts from 0
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: http://schemas.taskcluster.net/queue/v1/task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SUBSCHEMA:
        $schema: http://json-schema.org/draft-06/schema#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        id: http://schemas.taskcluster.net/queue/v1/task-status.json#
        properties:
          MemberNames:
            deadline: deadline
            expires: expires
            provisionerId: provisionerId
            retriesLeft: retriesLeft
            runs: runs
            schedulerId: schedulerId
            state: state
            taskGroupId: taskGroupId
            taskId: taskId
            workerType: workerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: Deadline
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: Expiration
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ProvisionerId
              description: |
                Unique identifier for the provisioner that this task must be scheduled on
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: RetriesLeft
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ListOfRuns
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: runs entry
                SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: reasonCreated
                    reasonResolved: reasonResolved
                    resolved: resolved
                    runId: runId
                    scheduled: scheduled
                    started: started
                    state: state
                    takenUntil: takenUntil
                    workerGroup: workerGroup
                    workerId: workerId
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ReasonCreated
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ReasonResolved
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: Resolved
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: RunIdentifier
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: Scheduled
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: Started
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: RunState
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: TakenUntil
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: WorkerGroup
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: WorkerIdentifier
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 22
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: SchedulerIdentifier
              description: |
                Identifier for the scheduler that _defined_ this task.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
              TYPE_NAME: State
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: TaskGroupIdentifier
              description: |
                Identifier for a group of tasks scheduled together with this task, by
                scheduler identified by `schedulerId`. For tasks scheduled by the
                task-graph scheduler, this is the `taskGraphId`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: TaskIdentifier
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: WorkerType
              description: |
                Identifier for worker type within the specified provisioner
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-running-message.json#/properties/status
      TYPE_NAME: Status
    takenUntil:
      IS_REQUIRED: true
      PROPERTY_NAME: takenUntil
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-running-message.json#/properties/takenUntil
      TYPE_NAME: TakenUntil
      description: |
        Time at which the run expires and is resolved as `failed`, if the run
        isn't reclaimed.
      format: date-time
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-running-message.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      enum:
      - 1
      type: integer
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-running-message.json#/properties/workerGroup
      TYPE_NAME: WorkerGroup
      description: |
        Identifier for the worker-group within which this run started.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-running-message.json#/properties/workerId
      TYPE_NAME: WorkerId
      description: |
        Identifier for the worker executing this run.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - runId
  - status
  - takenUntil
  - version
  - workerGroup
  - workerId
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-running-message.json#/properties
required:
- version
- status
- runId
- workerGroup
- workerId
- takenUntil
title: Task Running Message
type: object


http://schemas.taskcluster.net/queue/v1/task-status.json#
=========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#
TYPE_NAME: TaskStatusStructure
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A representation of **task status** as known by the queue
id: http://schemas.taskcluster.net/queue/v1/task-status.json#
properties:
  MemberNames:
    deadline: deadline
    expires: expires
    provisionerId: provisionerId
    retriesLeft: retriesLeft
    runs: runs
    schedulerId: schedulerId
    state: state
    taskGroupId: taskGroupId
    taskId: taskId
    workerType: workerType
  Properties:
    deadline:
      IS_REQUIRED: true
      PROPERTY_NAME: deadline
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/deadline
      TYPE_NAME: Deadline
      description: |
        Deadline of the task, `pending` and `running` runs are
        resolved as **exception** if not resolved by other means
        before the deadline. Note, deadline cannot be more than
        5 days into the future
      format: date-time
      title: Deadline
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/expires
      TYPE_NAME: Expiration
      description: |
        Task expiration, time at which task definition and
        status is deleted. Notice that all artifacts for the task
        must have an expiration that is no later than this.
      format: date-time
      title: Expiration
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/provisionerId
      TYPE_NAME: ProvisionerId
      description: |
        Unique identifier for the provisioner that this task must be scheduled on
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner Id
      type: string
    retriesLeft:
      IS_REQUIRED: true
      PROPERTY_NAME: retriesLeft
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/retriesLeft
      TYPE_NAME: RetriesLeft
      description: |
        Number of retries left for the task in case of infrastructure issues
      maximum: 999
      minimum: 0
      title: Retries Left
      type: integer
    runs:
      IS_REQUIRED: true
      PROPERTY_NAME: runs
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs
      TYPE_NAME: ListOfRuns
      description: |
        List of runs, ordered so that index `i` has `runId == i`
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: runs entry
        SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items
        TYPE_NAME: RunInformation
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          JSON object with information about a run
        properties:
          MemberNames:
            reasonCreated: reasonCreated
            reasonResolved: reasonResolved
            resolved: resolved
            runId: runId
            scheduled: scheduled
            started: started
            state: state
            takenUntil: takenUntil
            workerGroup: workerGroup
            workerId: workerId
          Properties:
            reasonCreated:
              IS_REQUIRED: true
              PROPERTY_NAME: reasonCreated
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
              TYPE_NAME: ReasonCreated
              description: |
                Reason for the creation of this run,
                **more reasons may be added in the future**.
              enum:
              - scheduled
              - retry
              - task-retry
              - rerun
              - exception
              title: Reason Created
              type: string
            reasonResolved:
              IS_REQUIRED: false
              PROPERTY_NAME: reasonResolved
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
              TYPE_NAME: ReasonResolved
              description: |
                Reason that run was resolved, this is mainly
                useful for runs resolved as `exception`.
                Note, **more reasons may be added in the future**, also this
                property is only available after the run is resolved. Some of these
                reasons, notably `intermittent-task`, `worker-shutdown`, and
                `claim-expired`, will trigger an automatic retry of the task.
              enum:
              - completed
              - failed
              - deadline-exceeded
              - canceled
              - superseded
              - claim-expired
              - worker-shutdown
              - malformed-payload
              - resource-unavailable
              - internal-error
              - intermittent-task
              title: Reason Resolved
              type: string
            resolved:
              IS_REQUIRED: false
              PROPERTY_NAME: resolved
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/resolved
              TYPE_NAME: Resolved
              description: |
                Date-time at which this run was resolved, ie. when the run changed
                state from `running` to either `completed`, `failed` or `exception`.
                This property is only present after the run as been resolved.
              format: date-time
              title: Resolved
              type: string
            runId:
              IS_REQUIRED: true
              PROPERTY_NAME: runId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/runId
              TYPE_NAME: RunIdentifier
              description: |
                Id of this task run, `run-id`s always starts from `0`
              maximum: 1000
              minimum: 0
              title: Run Identifier
              type: integer
            scheduled:
              IS_REQUIRED: true
              PROPERTY_NAME: scheduled
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
              TYPE_NAME: Scheduled
              description: |
                Date-time at which this run was scheduled, ie. when the run was
                created in state `pending`.
              format: date-time
              title: Scheduled
              type: string
            started:
              IS_REQUIRED: false
              PROPERTY_NAME: started
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/started
              TYPE_NAME: Started
              description: |
                Date-time at which this run was claimed, ie. when the run changed
                state from `pending` to `running`. This property is only present
                after the run has been claimed.
              format: date-time
              title: Started
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/state
              TYPE_NAME: RunState
              description: |
                State of this run
              enum:
              - pending
              - running
              - completed
              - failed
              - exception
              title: Run State
              type: string
            takenUntil:
              IS_REQUIRED: false
              PROPERTY_NAME: takenUntil
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
              TYPE_NAME: TakenUntil
              description: |
                Time at which the run expires and is resolved as `failed`, if the
                run isn't reclaimed. Note, only present after the run has been
                claimed.
              format: date-time
              title: Taken Until
              type: string
            workerGroup:
              IS_REQUIRED: false
              PROPERTY_NAME: workerGroup
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
              TYPE_NAME: WorkerGroup
              description: |
                Identifier for group that worker who executes this run is a part of,
                this identifier is mainly used for efficient routing.
                Note, this property is only present after the run is claimed.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Group
              type: string
            workerId:
              IS_REQUIRED: false
              PROPERTY_NAME: workerId
              SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties/workerId
              TYPE_NAME: WorkerIdentifier
              description: |
                Identifier for worker evaluating this run within given
                `workerGroup`. Note, this property is only available after the run
                has been claimed.
              maxLength: 22
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Identifier
              type: string
          SortedPropertyNames:
          - reasonCreated
          - reasonResolved
          - resolved
          - runId
          - scheduled
          - started
          - state
          - takenUntil
          - workerGroup
          - workerId
          SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/runs/items/properties
        required:
        - runId
        - state
        - reasonCreated
        - scheduled
        title: Run Information
        type: object
      title: List of Runs
      type: array
    schedulerId:
      IS_REQUIRED: true
      PROPERTY_NAME: schedulerId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/schedulerId
      TYPE_NAME: SchedulerIdentifier
      description: |
        Identifier for the scheduler that _defined_ this task.
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Scheduler Identifier
      type: string
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/state
      TYPE_NAME: State
      description: |
        State of this task. This is just an auxiliary property derived from state
        of latests run, or `unscheduled` if none.
      enum:
      - unscheduled
      - pending
      - running
      - completed
      - failed
      - exception
      title: State
      type: string
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskGroupId
      TYPE_NAME: TaskGroupIdentifier
      description: |
        Identifier for a group of tasks scheduled together with this task, by
        scheduler identified by `schedulerId`. For tasks scheduled by the
        task-graph scheduler, this is the `taskGraphId`.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task-Group Identifier
      type: string
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/taskId
      TYPE_NAME: TaskIdentifier
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties/workerType
      TYPE_NAME: WorkerType
      description: |
        Identifier for worker type within the specified provisioner
      maxLength: 22
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Type
      type: string
  SortedPropertyNames:
  - deadline
  - expires
  - provisionerId
  - retriesLeft
  - runs
  - schedulerId
  - state
  - taskGroupId
  - taskId
  - workerType
  SourceURL: http://schemas.taskcluster.net/queue/v1/task-status.json#/properties
required:
- taskId
- provisionerId
- workerType
- schedulerId
- taskGroupId
- deadline
- expires
- retriesLeft
- state
- runs
title: Task Status Structure
type: object


http://references.taskcluster.net/secrets/v1/api.json
=====================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'TaskCluster Secrets API Documentation'
Description = 'The secrets service provides a simple key/value store for small bits of secret
data.  Access is limited by scopes, so values can be considered secret from
those who do not have the relevant scopes.

Secrets also have an expiration date, and once a secret has expired it can no
longer be read.  This is useful for short-term secrets such as a temporary
service credential or a one-time signing key.'
Base URL    = 'https://secrets.taskcluster.net/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/secret/<name>'
    Entry Args        = '[name]'
    Entry Query        = '[]'
    Entry Name        = 'set'
    Entry Stability   = 'stable'
    Entry Scopes      = 'secrets:set:<name>'
    Entry Input       = 'http://schemas.taskcluster.net/secrets/v1/secret.json#'
    Entry Output      = ''
    Entry Title       = 'Set Secret'
    Entry Description = 'Set the secret associated with some key.  If the secret already exists, it is
updated instead.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/secret/<name>'
    Entry Args        = '[name]'
    Entry Query        = '[]'
    Entry Name        = 'remove'
    Entry Stability   = 'stable'
    Entry Scopes      = 'secrets:set:<name>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Delete Secret'
    Entry Description = 'Delete the secret associated with some key.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/secret/<name>'
    Entry Args        = '[name]'
    Entry Query        = '[]'
    Entry Name        = 'get'
    Entry Stability   = 'stable'
    Entry Scopes      = 'secrets:get:<name>'
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/secrets/v1/secret.json#'
    Entry Title       = 'Read Secret'
    Entry Description = 'Read the secret associated with some key.  If the secret has recently
expired, the response code 410 is returned.  If the caller lacks the
scope necessary to get the secret, the call will fail with a 403 code
regardless of whether the secret exists.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/secrets'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'list'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/secrets/v1/secret-list.json#'
    Entry Title       = 'List Secrets'
    Entry Description = 'List the names of all secrets.

By default this end-point will try to return up to 1000 secret names in one
request. But it **may return less**, even if more tasks are available.
It may also return a `continuationToken` even though there are no more
results. However, you can only be sure to have seen all results if you
keep calling `listTaskGroup` with the last `continuationToken` until you
get a result without a `continuationToken`.

If you are not interested in listing all the members at once, you may
use the query-string option `limit` to return fewer.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/secrets/v1/secret-list.json#
===========================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/secrets/v1/secret-list.json#
TYPE_NAME: SecretsList
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message containing a list of secret names
id: http://schemas.taskcluster.net/secrets/v1/secret-list.json#
properties:
  MemberNames:
    continuationToken: continuationToken
    secrets: secrets
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: http://schemas.taskcluster.net/secrets/v1/secret-list.json#/properties/continuationToken
      TYPE_NAME: ContinuationToken
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of provisioners.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called with `continuationToken` until you get a
        result without a `continuationToken`.
      title: Continuation Token
      type: string
    secrets:
      IS_REQUIRED: true
      PROPERTY_NAME: secrets
      SOURCE_URL: http://schemas.taskcluster.net/secrets/v1/secret-list.json#/properties/secrets
      TYPE_NAME: Secrets
      description: Secret names
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: secrets entry
        SOURCE_URL: http://schemas.taskcluster.net/secrets/v1/secret-list.json#/properties/secrets/items
        TYPE_NAME: Secret
        description: Secret name
        title: Secret
        type: string
      type: array
  SortedPropertyNames:
  - continuationToken
  - secrets
  SourceURL: http://schemas.taskcluster.net/secrets/v1/secret-list.json#/properties
required:
- secrets
title: Secrets List
type: object


http://schemas.taskcluster.net/secrets/v1/secret.json#
======================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/secrets/v1/secret.json#
TYPE_NAME: Secret
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message containing a TaskCluster Secret
id: http://schemas.taskcluster.net/secrets/v1/secret.json#
properties:
  MemberNames:
    expires: expires
    secret: secret
  Properties:
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: http://schemas.taskcluster.net/secrets/v1/secret.json#/properties/expires
      TYPE_NAME: Expires
      description: |
        An expiration date for this secret.
      format: date-time
      type: string
    secret:
      IS_REQUIRED: true
      PROPERTY_NAME: secret
      SOURCE_URL: http://schemas.taskcluster.net/secrets/v1/secret.json#/properties/secret
      TYPE_NAME: Secret
      description: |
        The secret value to be encrypted.
      type: object
  SortedPropertyNames:
  - expires
  - secret
  SourceURL: http://schemas.taskcluster.net/secrets/v1/secret.json#/properties
required:
- secret
- expires
title: Secret
type: object


http://references.taskcluster.net/taskcluster-treeherder/v1/exchanges.json
==========================================================================
Version         = '0'
Title           = 'Taskcluster-treeherder Pulse Exchange'
Description     = 'The taskcluster-treeherder service is responsible for processing
task events published by TaskCluster Queue and producing job messages
that are consumable by Treeherder.

This exchange provides that job messages to be consumed by any queue that
attached to the exchange.  This could be a production Treeheder instance,
a local development environment, or a custom dashboard.'
Exchange Prefix = 'exchange/taskcluster-treeherder/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'jobs'
    Entry Name        = 'jobs'
    Entry Title       = 'Job Messages'
    Entry Description = 'When a task run is scheduled or resolved, a message is posted to
this exchange in a Treeherder consumable format.'
    Routing Key Element 0     = 
        Element Name      = 'destination'
        Element Summary   = 'destination'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'project'
        Element Summary   = 'project'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#'


http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#
========================================================================
$schema: http://json-schema.org/draft-06/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#
TYPE_NAME: JobDefinition
additionalProperties:
  Boolean: false
  Properties: null
definitions:
  MemberNames:
    machine: machine
  Properties:
    machine:
      IS_REQUIRED: false
      PROPERTY_NAME: machine
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine
      TYPE_NAME: Machine
      additionalProperties:
        Boolean: false
        Properties: null
      properties:
        MemberNames:
          architecture: architecture
          name: name
          os: os
          platform: platform
        Properties:
          architecture:
            IS_REQUIRED: true
            PROPERTY_NAME: architecture
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/architecture
            TYPE_NAME: Architecture
            maxLength: 25
            minLength: 1
            pattern: ^[\w-]+$
            type: string
          name:
            IS_REQUIRED: false
            PROPERTY_NAME: name
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/name
            TYPE_NAME: Name
            maxLength: 50
            minLength: 1
            pattern: ^[\w-]+$
            type: string
          os:
            IS_REQUIRED: true
            PROPERTY_NAME: os
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/os
            TYPE_NAME: Os
            maxLength: 25
            minLength: 1
            pattern: ^[\w-]+$
            type: string
          platform:
            IS_REQUIRED: true
            PROPERTY_NAME: platform
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/platform
            TYPE_NAME: Platform
            maxLength: 100
            minLength: 1
            pattern: ^[\w-]+$
            type: string
        SortedPropertyNames:
        - architecture
        - name
        - os
        - platform
        SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties
      required:
      - platform
      - os
      - architecture
      type: object
  SortedPropertyNames:
  - machine
  SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions
description: |
  Definition of a single job that can be added to Treeherder
  Project is determined by the routing key, so we don't need to specify it here.
id: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#
properties:
  MemberNames:
    buildMachine: buildMachine
    buildSystem: buildSystem
    coalesced: coalesced
    display: display
    extra: extra
    isRetried: isRetried
    jobInfo: jobInfo
    jobKind: jobKind
    labels: labels
    logs: logs
    origin: origin
    owner: owner
    productName: productName
    reason: reason
    result: result
    retryId: retryId
    runMachine: runMachine
    state: state
    taskId: taskId
    tier: tier
    timeCompleted: timeCompleted
    timeScheduled: timeScheduled
    timeStarted: timeStarted
    version: version
  Properties:
    buildMachine:
      $ref: '#/definitions/machine'
      IS_REQUIRED: false
      PROPERTY_NAME: buildMachine
      REF_SUBSCHEMA:
        IS_REQUIRED: false
        PROPERTY_NAME: machine
        SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine
        TYPE_NAME: Machine
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            architecture: architecture
            name: name
            os: os
            platform: platform
          Properties:
            architecture:
              IS_REQUIRED: true
              PROPERTY_NAME: architecture
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/architecture
              TYPE_NAME: Architecture
              maxLength: 25
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            name:
              IS_REQUIRED: false
              PROPERTY_NAME: name
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/name
              TYPE_NAME: Name
              maxLength: 50
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            os:
              IS_REQUIRED: true
              PROPERTY_NAME: os
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/os
              TYPE_NAME: Os
              maxLength: 25
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            platform:
              IS_REQUIRED: true
              PROPERTY_NAME: platform
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/platform
              TYPE_NAME: Platform
              maxLength: 100
              minLength: 1
              pattern: ^[\w-]+$
              type: string
          SortedPropertyNames:
          - architecture
          - name
          - os
          - platform
          SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties
        required:
        - platform
        - os
        - architecture
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/buildMachine
      TYPE_NAME: BuildMachine
    buildSystem:
      IS_REQUIRED: false
      PROPERTY_NAME: buildSystem
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/buildSystem
      TYPE_NAME: BuildSystem
      description: |
        The name of the build system that initiated this content.  Some examples
        are "buildbot" and "taskcluster".  But this could be any name.  This
        value will be used in the routing key for retriggering jobs in the
        publish-job-action task.
      maxLength: 25
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    coalesced:
      IS_REQUIRED: false
      PROPERTY_NAME: coalesced
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/coalesced
      TYPE_NAME: Coalesced
      description: The job guids that were coalesced to this job.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: coalesced entry
        SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/coalesced/items
        TYPE_NAME: JobGuid
        maxLength: 50
        minLength: 1
        pattern: ^[\w/+-]+$
        title: job guid
        type: string
      title: coalesced
      type: array
    display:
      IS_REQUIRED: true
      PROPERTY_NAME: display
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/display
      TYPE_NAME: Display
      additionalProperties:
        Boolean: false
        Properties: null
      properties:
        MemberNames:
          chunkCount: chunkCount
          chunkId: chunkId
          groupName: groupName
          groupSymbol: groupSymbol
          jobName: jobName
          jobSymbol: jobSymbol
        Properties:
          chunkCount:
            IS_REQUIRED: false
            PROPERTY_NAME: chunkCount
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/display/properties/chunkCount
            TYPE_NAME: ChunkCount
            minimum: 1
            title: chunkCount
            type: integer
          chunkId:
            IS_REQUIRED: false
            PROPERTY_NAME: chunkId
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/display/properties/chunkId
            TYPE_NAME: ChunkId
            minimum: 1
            title: chunkId
            type: integer
          groupName:
            IS_REQUIRED: false
            PROPERTY_NAME: groupName
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/display/properties/groupName
            TYPE_NAME: GroupName
            maxLength: 100
            minLength: 1
            title: group name
            type: string
          groupSymbol:
            IS_REQUIRED: true
            PROPERTY_NAME: groupSymbol
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/display/properties/groupSymbol
            TYPE_NAME: GroupSymbol
            maxLength: 25
            minLength: 1
            title: group symbol
            type: string
          jobName:
            IS_REQUIRED: true
            PROPERTY_NAME: jobName
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/display/properties/jobName
            TYPE_NAME: JobName
            maxLength: 100
            minLength: 1
            title: job name
            type: string
          jobSymbol:
            IS_REQUIRED: true
            PROPERTY_NAME: jobSymbol
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/display/properties/jobSymbol
            TYPE_NAME: JobSymbol
            maxLength: 25
            minLength: 0
            title: jobSymbol
            type: string
        SortedPropertyNames:
        - chunkCount
        - chunkId
        - groupName
        - groupSymbol
        - jobName
        - jobSymbol
        SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/display/properties
      required:
      - jobName
      - jobSymbol
      - groupSymbol
      type: object
    extra:
      IS_REQUIRED: false
      PROPERTY_NAME: extra
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/extra
      TYPE_NAME: Extra
      description: Extra information that Treeherder reads on a best-effort basis
      type: object
    isRetried:
      IS_REQUIRED: false
      PROPERTY_NAME: isRetried
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/isRetried
      TYPE_NAME: IsRetried
      description: True indicates this job has been retried.
      type: boolean
    jobInfo:
      IS_REQUIRED: false
      PROPERTY_NAME: jobInfo
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/jobInfo
      TYPE_NAME: JobInfo
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Definition of the Job Info for a job.  These are extra data
        fields that go along with a job that will be displayed in
        the details panel within Treeherder.
      id: jobInfo
      properties:
        MemberNames:
          links: links
          summary: summary
        Properties:
          links:
            IS_REQUIRED: false
            PROPERTY_NAME: links
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links
            TYPE_NAME: Links
            items:
              IS_REQUIRED: false
              PROPERTY_NAME: links entry
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items
              TYPE_NAME: LinksEntry
              additionalProperties:
                Boolean: false
                Properties: null
              description: |
                List of URLs shown as key/value pairs.  Shown as:
                "<label>: <linkText>" where linkText will be a link to the url.
              properties:
                MemberNames:
                  label: label
                  linkText: linkText
                  url: url
                Properties:
                  label:
                    IS_REQUIRED: true
                    PROPERTY_NAME: label
                    SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/label
                    TYPE_NAME: Label
                    maxLength: 70
                    minLength: 1
                    type: string
                  linkText:
                    IS_REQUIRED: true
                    PROPERTY_NAME: linkText
                    SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/linkText
                    TYPE_NAME: LinkText
                    maxLength: 125
                    minLength: 1
                    type: string
                  url:
                    IS_REQUIRED: true
                    PROPERTY_NAME: url
                    SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/url
                    TYPE_NAME: Url
                    format: url
                    maxLength: 512
                    type: string
                SortedPropertyNames:
                - label
                - linkText
                - url
                SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties
              required:
              - url
              - linkText
              - label
              type: object
            type: array
          summary:
            IS_REQUIRED: false
            PROPERTY_NAME: summary
            SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/jobInfo/properties/summary
            TYPE_NAME: Summary
            description: |
              Plain text description of the job and its state.  Submitted with
              the final message about a task.
            type: string
        SortedPropertyNames:
        - links
        - summary
        SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/jobInfo/properties
      type: object
    jobKind:
      IS_REQUIRED: true
      PROPERTY_NAME: jobKind
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/jobKind
      TYPE_NAME: JobKind
      default: other
      enum:
      - build
      - test
      - other
      type: string
    labels:
      IS_REQUIRED: false
      PROPERTY_NAME: labels
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/labels
      TYPE_NAME: Labels
      description: |
        Labels are a dimension of a platform.  The values here can vary wildly,
        so most strings are valid for this.  The list of labels that are used
        is maleable going forward.

        These were formerly known as "Options" within "Option Collections" but
        calling labels now so they can be understood to be just strings that
        denotes a characteristic of the job.

        Some examples of labels that have been used:
          opt    Optimize Compiler GCC optimize flags
          debug  Debug flags passed in
          pgo    Profile Guided Optimization - Like opt, but runs with profiling, then builds again using that profiling
          asan   Address Sanitizer
          tsan   Thread Sanitizer Build
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: labels entry
        SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/labels/items
        TYPE_NAME: LabelsEntry
        maxLength: 50
        minLength: 1
        pattern: ^[\w-]+$
        type: string
      title: labels
      type: array
    logs:
      IS_REQUIRED: false
      PROPERTY_NAME: logs
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs
      TYPE_NAME: Logs
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: logs entry
        SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items
        TYPE_NAME: LogsEntry
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            errorsTruncated: errorsTruncated
            name: name
            steps: steps
            url: url
          Properties:
            errorsTruncated:
              IS_REQUIRED: false
              PROPERTY_NAME: errorsTruncated
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/errorsTruncated
              TYPE_NAME: ErrorsTruncated
              description: |
                If true, indicates that the number of errors in the log was too
                large and not all of those lines are indicated here.
              type: boolean
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/name
              TYPE_NAME: Name
              maxLength: 50
              minLength: 1
              type: string
            steps:
              IS_REQUIRED: false
              PROPERTY_NAME: steps
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps
              TYPE_NAME: Steps
              description: |
                This object defines what is seen in the Treeherder Log Viewer.
                These values can be submitted here, or they will be generated
                by Treeherder's internal log parsing process from the
                submitted log.  If this value is submitted, Treeherder will
                consider the log already parsed and skip parsing.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: steps entry
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items
                TYPE_NAME: StepsEntry
                additionalProperties:
                  Boolean: false
                  Properties: null
                properties:
                  MemberNames:
                    errors: errors
                    lineFinished: lineFinished
                    lineStarted: lineStarted
                    name: name
                    result: result
                    timeFinished: timeFinished
                    timeStarted: timeStarted
                  Properties:
                    errors:
                      IS_REQUIRED: false
                      PROPERTY_NAME: errors
                      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors
                      TYPE_NAME: Errors
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: errors entry
                        SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items
                        TYPE_NAME: ErrorsEntry
                        additionalProperties:
                          Boolean: false
                          Properties: null
                        properties:
                          MemberNames:
                            line: line
                            linenumber: linenumber
                          Properties:
                            line:
                              IS_REQUIRED: false
                              PROPERTY_NAME: line
                              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties/line
                              TYPE_NAME: Line
                              maxLength: 255
                              minLength: 1
                              type: string
                            linenumber:
                              IS_REQUIRED: false
                              PROPERTY_NAME: linenumber
                              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties/linenumber
                              TYPE_NAME: Linenumber
                              minimum: 0
                              type: integer
                          SortedPropertyNames:
                          - line
                          - linenumber
                          SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties
                        type: object
                      type: array
                    lineFinished:
                      IS_REQUIRED: true
                      PROPERTY_NAME: lineFinished
                      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/lineFinished
                      TYPE_NAME: LineFinished
                      minimum: 0
                      type: integer
                    lineStarted:
                      IS_REQUIRED: true
                      PROPERTY_NAME: lineStarted
                      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/lineStarted
                      TYPE_NAME: LineStarted
                      minimum: 0
                      type: integer
                    name:
                      IS_REQUIRED: true
                      PROPERTY_NAME: name
                      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/name
                      TYPE_NAME: Name
                      maxLength: 255
                      minLength: 1
                      type: string
                    result:
                      IS_REQUIRED: true
                      PROPERTY_NAME: result
                      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/result
                      TYPE_NAME: Result
                      enum:
                      - success
                      - fail
                      - exception
                      - canceled
                      - unknown
                      type: string
                    timeFinished:
                      IS_REQUIRED: true
                      PROPERTY_NAME: timeFinished
                      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/timeFinished
                      TYPE_NAME: TimeFinished
                      format: date-time
                      type: string
                    timeStarted:
                      IS_REQUIRED: true
                      PROPERTY_NAME: timeStarted
                      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/timeStarted
                      TYPE_NAME: TimeStarted
                      format: date-time
                      type: string
                  SortedPropertyNames:
                  - errors
                  - lineFinished
                  - lineStarted
                  - name
                  - result
                  - timeFinished
                  - timeStarted
                  SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties
                required:
                - name
                - timeStarted
                - lineStarted
                - lineFinished
                - timeFinished
                - result
                type: object
              type: array
            url:
              IS_REQUIRED: true
              PROPERTY_NAME: url
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties/url
              TYPE_NAME: Url
              format: uri
              maxLength: 255
              minLength: 1
              type: string
          SortedPropertyNames:
          - errorsTruncated
          - name
          - steps
          - url
          SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/logs/items/properties
        required:
        - url
        - name
        type: object
      type: array
    origin:
      IS_REQUIRED: true
      PROPERTY_NAME: origin
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin
      TYPE_NAME: Origin
      oneOf:
        Items:
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]
          TYPE_NAME: HGPush
          additionalProperties:
            Boolean: false
            Properties: null
          properties:
            MemberNames:
              kind: kind
              project: project
              pushLogID: pushLogID
              revision: revision
            Properties:
              kind:
                IS_REQUIRED: true
                PROPERTY_NAME: kind
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/kind
                TYPE_NAME: Kind
                enum:
                - hg.mozilla.org
                type: string
              project:
                IS_REQUIRED: true
                PROPERTY_NAME: project
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/project
                TYPE_NAME: Project
                maxLength: 50
                minLength: 1
                pattern: ^[\w-]+$
                type: string
              pushLogID:
                IS_REQUIRED: false
                PROPERTY_NAME: pushLogID
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/pushLogID
                TYPE_NAME: PushLogID
                type: integer
              revision:
                IS_REQUIRED: true
                PROPERTY_NAME: revision
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/revision
                TYPE_NAME: Revision
                maxLength: 40
                minLength: 40
                pattern: ^[0-9a-f]+$
                type: string
            SortedPropertyNames:
            - kind
            - project
            - pushLogID
            - revision
            SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties
          required:
          - kind
          - project
          - revision
          title: HG Push
          type: object
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]
          TYPE_NAME: HGPushLegacy
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            BACKWARD COMPATABILITY: An HG job that only has a revision_hash.
            Some repos like mozilla-beta have not yet merged in the code that
            allows them access to the revision.
          properties:
            MemberNames:
              kind: kind
              project: project
              pushLogID: pushLogID
              revision_hash: revision_hash
            Properties:
              kind:
                IS_REQUIRED: true
                PROPERTY_NAME: kind
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/kind
                TYPE_NAME: Kind
                enum:
                - hg.mozilla.org
                type: string
              project:
                IS_REQUIRED: true
                PROPERTY_NAME: project
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/project
                TYPE_NAME: Project
                maxLength: 50
                minLength: 1
                pattern: ^[\w-]+$
                type: string
              pushLogID:
                IS_REQUIRED: false
                PROPERTY_NAME: pushLogID
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/pushLogID
                TYPE_NAME: PushLogID
                type: integer
              revision_hash:
                IS_REQUIRED: true
                PROPERTY_NAME: revision_hash
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/revision_hash
                TYPE_NAME: Revision_hash
                maxLength: 40
                minLength: 40
                pattern: ^[0-9a-f]+$
                type: string
            SortedPropertyNames:
            - kind
            - project
            - pushLogID
            - revision_hash
            SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties
          required:
          - kind
          - project
          - revision_hash
          title: HG Push Legacy
          type: object
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]
          TYPE_NAME: GithubPullRequest
          additionalProperties:
            Boolean: false
            Properties: null
          properties:
            MemberNames:
              kind: kind
              owner: owner
              project: project
              pullRequestID: pullRequestID
              revision: revision
            Properties:
              kind:
                IS_REQUIRED: true
                PROPERTY_NAME: kind
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties/kind
                TYPE_NAME: Kind
                enum:
                - github.com
                type: string
              owner:
                IS_REQUIRED: false
                PROPERTY_NAME: owner
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties/owner
                TYPE_NAME: Owner
                description: |
                  This could be the organization or the individual git username
                  depending on who owns the repo.
                maxLength: 50
                minLength: 1
                pattern: ^[\w-]+$
                type: string
              project:
                IS_REQUIRED: true
                PROPERTY_NAME: project
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties/project
                TYPE_NAME: Project
                maxLength: 50
                minLength: 1
                pattern: ^[\w-]+$
                type: string
              pullRequestID:
                IS_REQUIRED: false
                PROPERTY_NAME: pullRequestID
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties/pullRequestID
                TYPE_NAME: PullRequestID
                type: integer
              revision:
                IS_REQUIRED: true
                PROPERTY_NAME: revision
                SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties/revision
                TYPE_NAME: Revision
                maxLength: 40
                minLength: 40
                type: string
            SortedPropertyNames:
            - kind
            - owner
            - project
            - pullRequestID
            - revision
            SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties
          required:
          - kind
          - project
          - revision
          title: Github Pull Request
          type: object
        SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf
    owner:
      IS_REQUIRED: false
      PROPERTY_NAME: owner
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/owner
      TYPE_NAME: Owner
      description: |
        Description of who submitted the job: gaia | scheduler name | username | email
      maxLength: 50
      minLength: 1
      title: owner
      type: string
    productName:
      IS_REQUIRED: false
      PROPERTY_NAME: productName
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/productName
      TYPE_NAME: ProductName
      description: |
        Examples include:
        -  'b2g'
        -  'firefox'
        -  'taskcluster'
        -  'xulrunner'
      maxLength: 125
      minLength: 1
      type: string
    reason:
      IS_REQUIRED: false
      PROPERTY_NAME: reason
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/reason
      TYPE_NAME: Reason
      description: |
        Examples include:
        - scheduled
        - scheduler
        - Self-serve: Rebuilt by foo@example.com
        - Self-serve: Requested by foo@example.com
        - The Nightly scheduler named 'b2g_mozilla-inbound periodic' triggered this build
        - unknown
      maxLength: 125
      minLength: 1
      type: string
    result:
      IS_REQUIRED: false
      PROPERTY_NAME: result
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/result
      TYPE_NAME: Result
      description: |
        fail: A failure
        exception: An infrastructure error/exception
        success: Build/Test executed without error or failure
        canceled: The job was cancelled by a user
        unknown: When the job is not yet completed
        superseded: When a job has been superseded by another job
      enum:
      - success
      - fail
      - exception
      - canceled
      - unknown
      - superseded
      title: result
      type: string
    retryId:
      IS_REQUIRED: false
      PROPERTY_NAME: retryId
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/retryId
      TYPE_NAME: RetryId
      default: 0
      description: |
        The infrastructure retry iteration on this job.  The number of times this
        job has been retried by the infrastructure.
        If it's the 1st time running, then it should be 0. If this is the first
        retry, it will be 1, etc.
      minimum: 0
      title: retryId
      type: integer
    runMachine:
      $ref: '#/definitions/machine'
      IS_REQUIRED: false
      PROPERTY_NAME: runMachine
      REF_SUBSCHEMA:
        IS_REQUIRED: false
        PROPERTY_NAME: machine
        SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine
        TYPE_NAME: Machine
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            architecture: architecture
            name: name
            os: os
            platform: platform
          Properties:
            architecture:
              IS_REQUIRED: true
              PROPERTY_NAME: architecture
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/architecture
              TYPE_NAME: Architecture
              maxLength: 25
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            name:
              IS_REQUIRED: false
              PROPERTY_NAME: name
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/name
              TYPE_NAME: Name
              maxLength: 50
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            os:
              IS_REQUIRED: true
              PROPERTY_NAME: os
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/os
              TYPE_NAME: Os
              maxLength: 25
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            platform:
              IS_REQUIRED: true
              PROPERTY_NAME: platform
              SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/platform
              TYPE_NAME: Platform
              maxLength: 100
              minLength: 1
              pattern: ^[\w-]+$
              type: string
          SortedPropertyNames:
          - architecture
          - name
          - os
          - platform
          SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties
        required:
        - platform
        - os
        - architecture
        type: object
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/runMachine
      TYPE_NAME: RunMachine
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/state
      TYPE_NAME: State
      description: |
        unscheduled: not yet scheduled
        pending: not yet started
        running: currently in progress
        completed: Job ran through to completion
      enum:
      - unscheduled
      - pending
      - running
      - completed
      title: state
      type: string
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/taskId
      TYPE_NAME: TaskId
      description: |
        This could just be what was formerly submitted as a job_guid in the
        REST API.
      maxLength: 50
      minLength: 1
      pattern: ^[A-Za-z0-9/+-]+$
      title: taskId
      type: string
    tier:
      IS_REQUIRED: false
      PROPERTY_NAME: tier
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/tier
      TYPE_NAME: Tier
      maximum: 3
      minimum: 1
      type: integer
    timeCompleted:
      IS_REQUIRED: false
      PROPERTY_NAME: timeCompleted
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/timeCompleted
      TYPE_NAME: TimeCompleted
      format: date-time
      type: string
    timeScheduled:
      IS_REQUIRED: false
      PROPERTY_NAME: timeScheduled
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/timeScheduled
      TYPE_NAME: TimeScheduled
      format: date-time
      type: string
    timeStarted:
      IS_REQUIRED: false
      PROPERTY_NAME: timeStarted
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/timeStarted
      TYPE_NAME: TimeStarted
      format: date-time
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/version
      TYPE_NAME: Version
      description: Message version
      type: integer
  SortedPropertyNames:
  - buildMachine
  - buildSystem
  - coalesced
  - display
  - extra
  - isRetried
  - jobInfo
  - jobKind
  - labels
  - logs
  - origin
  - owner
  - productName
  - reason
  - result
  - retryId
  - runMachine
  - state
  - taskId
  - tier
  - timeCompleted
  - timeScheduled
  - timeStarted
  - version
  SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties
required:
- taskId
- origin
- display
- state
- jobKind
- version
title: Job Definition
type: object


http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine
============================================================================================
IS_REQUIRED: false
PROPERTY_NAME: machine
SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine
TYPE_NAME: Machine
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    architecture: architecture
    name: name
    os: os
    platform: platform
  Properties:
    architecture:
      IS_REQUIRED: true
      PROPERTY_NAME: architecture
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/architecture
      TYPE_NAME: Architecture
      maxLength: 25
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    name:
      IS_REQUIRED: false
      PROPERTY_NAME: name
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/name
      TYPE_NAME: Name
      maxLength: 50
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    os:
      IS_REQUIRED: true
      PROPERTY_NAME: os
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/os
      TYPE_NAME: Os
      maxLength: 25
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    platform:
      IS_REQUIRED: true
      PROPERTY_NAME: platform
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties/platform
      TYPE_NAME: Platform
      maxLength: 100
      minLength: 1
      pattern: ^[\w-]+$
      type: string
  SortedPropertyNames:
  - architecture
  - name
  - os
  - platform
  SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/definitions/machine/properties
required:
- platform
- os
- architecture
type: object


http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]
===================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]
TYPE_NAME: HGPush
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    kind: kind
    project: project
    pushLogID: pushLogID
    revision: revision
  Properties:
    kind:
      IS_REQUIRED: true
      PROPERTY_NAME: kind
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/kind
      TYPE_NAME: Kind
      enum:
      - hg.mozilla.org
      type: string
    project:
      IS_REQUIRED: true
      PROPERTY_NAME: project
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/project
      TYPE_NAME: Project
      maxLength: 50
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    pushLogID:
      IS_REQUIRED: false
      PROPERTY_NAME: pushLogID
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/pushLogID
      TYPE_NAME: PushLogID
      type: integer
    revision:
      IS_REQUIRED: true
      PROPERTY_NAME: revision
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/revision
      TYPE_NAME: Revision
      maxLength: 40
      minLength: 40
      pattern: ^[0-9a-f]+$
      type: string
  SortedPropertyNames:
  - kind
  - project
  - pushLogID
  - revision
  SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties
required:
- kind
- project
- revision
title: HG Push
type: object


http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]
===================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]
TYPE_NAME: HGPushLegacy
additionalProperties:
  Boolean: false
  Properties: null
description: |
  BACKWARD COMPATABILITY: An HG job that only has a revision_hash.
  Some repos like mozilla-beta have not yet merged in the code that
  allows them access to the revision.
properties:
  MemberNames:
    kind: kind
    project: project
    pushLogID: pushLogID
    revision_hash: revision_hash
  Properties:
    kind:
      IS_REQUIRED: true
      PROPERTY_NAME: kind
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/kind
      TYPE_NAME: Kind
      enum:
      - hg.mozilla.org
      type: string
    project:
      IS_REQUIRED: true
      PROPERTY_NAME: project
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/project
      TYPE_NAME: Project
      maxLength: 50
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    pushLogID:
      IS_REQUIRED: false
      PROPERTY_NAME: pushLogID
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/pushLogID
      TYPE_NAME: PushLogID
      type: integer
    revision_hash:
      IS_REQUIRED: true
      PROPERTY_NAME: revision_hash
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/revision_hash
      TYPE_NAME: Revision_hash
      maxLength: 40
      minLength: 40
      pattern: ^[0-9a-f]+$
      type: string
  SortedPropertyNames:
  - kind
  - project
  - pushLogID
  - revision_hash
  SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties
required:
- kind
- project
- revision_hash
title: HG Push Legacy
type: object


http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]
===================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]
TYPE_NAME: GithubPullRequest
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    kind: kind
    owner: owner
    project: project
    pullRequestID: pullRequestID
    revision: revision
  Properties:
    kind:
      IS_REQUIRED: true
      PROPERTY_NAME: kind
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties/kind
      TYPE_NAME: Kind
      enum:
      - github.com
      type: string
    owner:
      IS_REQUIRED: false
      PROPERTY_NAME: owner
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties/owner
      TYPE_NAME: Owner
      description: |
        This could be the organization or the individual git username
        depending on who owns the repo.
      maxLength: 50
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    project:
      IS_REQUIRED: true
      PROPERTY_NAME: project
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties/project
      TYPE_NAME: Project
      maxLength: 50
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    pullRequestID:
      IS_REQUIRED: false
      PROPERTY_NAME: pullRequestID
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties/pullRequestID
      TYPE_NAME: PullRequestID
      type: integer
    revision:
      IS_REQUIRED: true
      PROPERTY_NAME: revision
      SOURCE_URL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties/revision
      TYPE_NAME: Revision
      maxLength: 40
      minLength: 40
      type: string
  SortedPropertyNames:
  - kind
  - owner
  - project
  - pullRequestID
  - revision
  SourceURL: http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#/properties/origin/oneOf[2]/properties
required:
- kind
- project
- revision
title: Github Pull Request
type: object


https://references.taskcluster.net/ec2-manager/v1/api.json
==========================================================
Version     = '[48]'
Schema      = 'http://schemas.taskcluster.net/base/v1/api-reference.json#'
Title       = 'EC2 Instance Manager'
Description = 'A taskcluster service which manages EC2 instances.  This service does not understand any taskcluster concepts intrinsicaly other than using the name `workerType` to refer to a group of associated instances.  Unless you are working on building a provisioner for AWS, you almost certainly do not want to use this service'
Base URL    = 'localhost:5555/v1'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/worker-types'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'listWorkerTypes'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/ec2-manager/v1/list-worker-types.json#'
    Entry Title       = 'See the list of worker types which are known to be managed'
    Entry Description = 'This method is only for debugging the ec2-manager'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/worker-types/<workerType>/instance'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'runInstance'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:manage-resources:<workerType>'
    Entry Input       = 'http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#'
    Entry Output      = ''
    Entry Title       = 'Run an instance'
    Entry Description = 'Request an instance of a worker type'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/worker-types/<workerType>/resources'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'terminateWorkerType'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:manage-resources:<workerType>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Terminate all resources from a worker type'
    Entry Description = 'Terminate all instances for this worker type'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/worker-types/<workerType>/stats'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'workerTypeStats'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#'
    Entry Title       = 'Look up the resource stats for a workerType'
    Entry Description = 'Return an object which has a generic state description. This only contains counts of instances'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/worker-types/<workerType>/health'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'workerTypeHealth'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/ec2-manager/v1/health.json#'
    Entry Title       = 'Look up the resource health for a workerType'
    Entry Description = 'Return a view of the health of a given worker type'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/worker-types/<workerType>/errors'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'workerTypeErrors'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/ec2-manager/v1/errors.json#'
    Entry Title       = 'Look up the most recent errors of a workerType'
    Entry Description = 'Return a list of the most recent errors encountered by a worker type'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/worker-types/<workerType>/state'
    Entry Args        = '[workerType]'
    Entry Query        = '[]'
    Entry Name        = 'workerTypeState'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/ec2-manager/v1/worker-type-state.json#'
    Entry Title       = 'Look up the resource state for a workerType'
    Entry Description = 'Return state information for a given worker type'
Entry 7     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/key-pairs/<name>'
    Entry Args        = '[name]'
    Entry Query        = '[]'
    Entry Name        = 'ensureKeyPair'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:manage-key-pairs:<name>'
    Entry Input       = 'http://schemas.taskcluster.net/ec2-manager/v1/create-key-pair.json#'
    Entry Output      = ''
    Entry Title       = 'Ensure a KeyPair for a given worker type exists'
    Entry Description = 'Idempotently ensure that a keypair of a given name exists'
Entry 8     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/key-pairs/<name>'
    Entry Args        = '[name]'
    Entry Query        = '[]'
    Entry Name        = 'removeKeyPair'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:manage-key-pairs:<name>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ensure a KeyPair for a given worker type does not exist'
    Entry Description = 'Ensure that a keypair of a given name does not exist.'
Entry 9     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/region/<region>/instance/<instanceId>'
    Entry Args        = '[region instanceId]'
    Entry Query        = '[]'
    Entry Name        = 'terminateInstance'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'Any of:
- ec2-manager:manage-instances:<region>:<instanceId>
- ec2-manager:manage-resources:<workerType>'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Terminate an instance'
    Entry Description = 'Terminate an instance in a specified region'
Entry 10    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/prices'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'getPrices'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/ec2-manager/v1/prices.json#'
    Entry Title       = 'Request prices for EC2'
    Entry Description = 'Return a list of possible prices for EC2'
Entry 11    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/prices'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'getSpecificPrices'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = 'http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#'
    Entry Output      = 'http://schemas.taskcluster.net/ec2-manager/v1/prices.json#'
    Entry Title       = 'Request prices for EC2'
    Entry Description = 'Return a list of possible prices for EC2'
Entry 12    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/health'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'getHealth'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/ec2-manager/v1/health.json#'
    Entry Title       = 'Get EC2 account health metrics'
    Entry Description = 'Give some basic stats on the health of our EC2 account'
Entry 13    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/errors'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'getRecentErrors'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = 'http://schemas.taskcluster.net/ec2-manager/v1/errors.json#'
    Entry Title       = 'Look up the most recent errors in the provisioner across all worker types'
    Entry Description = 'Return a list of recent errors encountered'
Entry 14    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/internal/regions'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'regions'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:internals'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'See the list of regions managed by this ec2-manager'
    Entry Description = 'This method is only for debugging the ec2-manager'
Entry 15    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/internal/ami-usage'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'amiUsage'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:internals'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'See the list of AMIs and their usage'
    Entry Description = 'List AMIs and their usage by returning a list of objects in the form:
{
region: string
  volumetype: string
  lastused: timestamp
}'
Entry 16    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/internal/ebs-usage'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ebsUsage'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:internals'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'See the current EBS volume usage list'
    Entry Description = 'Lists current EBS volume usage by returning a list of objects
that are uniquely defined by {region, volumetype, state} in the form:
{
region: string,
  volumetype: string,
  state: string,
  totalcount: integer,
  totalgb: integer,
  touched: timestamp (last time that information was updated),
}'
Entry 17    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/internal/db-pool-stats'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'dbpoolStats'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:internals'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Statistics on the Database client pool'
    Entry Description = 'This method is only for debugging the ec2-manager'
Entry 18    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/internal/all-state'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'allState'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:internals'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'List out the entire internal state'
    Entry Description = 'This method is only for debugging the ec2-manager'
Entry 19    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/internal/sqs-stats'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'sqsStats'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:internals'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Statistics on the sqs queues'
    Entry Description = 'This method is only for debugging the ec2-manager'
Entry 20    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/internal/purge-queues'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'purgeQueues'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'ec2-manager:internals'
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Purge the SQS queues'
    Entry Description = 'This method is only for debugging the ec2-manager'
Entry 21    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/internal/api-reference'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'apiReference'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'API Reference'
    Entry Description = 'Generate an API reference for this service'
Entry 22    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry Output      = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'


http://schemas.taskcluster.net/ec2-manager/v1/create-key-pair.json#
===================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/create-key-pair.json#
TYPE_NAME: SshPublicKey
additionalProperties:
  Boolean: false
  Properties: null
id: http://schemas.taskcluster.net/ec2-manager/v1/create-key-pair.json#
properties:
  MemberNames:
    pubkey: pubkey
  Properties:
    pubkey:
      IS_REQUIRED: false
      PROPERTY_NAME: pubkey
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/create-key-pair.json#/properties/pubkey
      TYPE_NAME: Pubkey
      description: |
        An OpenSSH format Public Key as described by tools.ietf.org/html/rfc4253#section-6.6
      pattern: ^(ssh-\S*)\s*(\S*)\s*(.*)$
      type: string
  SortedPropertyNames:
  - pubkey
  SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/create-key-pair.json#/properties
title: ssh public key
type: object


http://schemas.taskcluster.net/ec2-manager/v1/errors.json#
==========================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#
TYPE_NAME: Errors
additionalProperties:
  Boolean: false
  Properties: null
description: |
  This method returns a list of errors.  It currently gives the error code only
  because we're not sure of the security implications of exposing the full
  message.  We do store complete error messages, but are figuring out how to
  best expose them
id: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#
properties:
  MemberNames:
    errors: errors
  Properties:
    errors:
      IS_REQUIRED: false
      PROPERTY_NAME: errors
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors
      TYPE_NAME: Errors
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: errors entry
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors/items
        TYPE_NAME: ErrorsEntry
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            az: az
            code: code
            instanceType: instanceType
            message: message
            region: region
            time: time
            type: type
            workerType: workerType
          Properties:
            az:
              IS_REQUIRED: false
              PROPERTY_NAME: az
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors/items/properties/az
              TYPE_NAME: Az
              type: string
            code:
              IS_REQUIRED: false
              PROPERTY_NAME: code
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors/items/properties/code
              TYPE_NAME: Code
              type: string
            instanceType:
              IS_REQUIRED: false
              PROPERTY_NAME: instanceType
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors/items/properties/instanceType
              TYPE_NAME: InstanceType
              type: string
            message:
              IS_REQUIRED: false
              PROPERTY_NAME: message
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors/items/properties/message
              TYPE_NAME: Message
              type: string
            region:
              IS_REQUIRED: false
              PROPERTY_NAME: region
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors/items/properties/region
              TYPE_NAME: Region
              type: string
            time:
              IS_REQUIRED: false
              PROPERTY_NAME: time
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors/items/properties/time
              TYPE_NAME: Time
              format: date-time
              type: string
            type:
              IS_REQUIRED: false
              PROPERTY_NAME: type
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors/items/properties/type
              TYPE_NAME: Type
              enum:
              - instance-request
              - termination
              type: string
            workerType:
              IS_REQUIRED: false
              PROPERTY_NAME: workerType
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors/items/properties/workerType
              TYPE_NAME: WorkerType
              type: string
          SortedPropertyNames:
          - az
          - code
          - instanceType
          - message
          - region
          - time
          - type
          - workerType
          SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties/errors/items/properties
        type: object
      type: array
  SortedPropertyNames:
  - errors
  SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/errors.json#/properties
title: Errors
type: object


http://schemas.taskcluster.net/ec2-manager/v1/health.json#
==========================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#
TYPE_NAME: HealthOfTheEC2Account
additionalProperties:
  Boolean: false
  Properties: null
description: |
  This method provides a summary of the health in the EC2 account being managed.
  Values for the overall account are provided, broken down by Region, Availability
  Zone and Instance Type.
id: http://schemas.taskcluster.net/ec2-manager/v1/health.json#
properties:
  MemberNames:
    requestHealth: requestHealth
    running: running
    terminationHealth: terminationHealth
  Properties:
    requestHealth:
      IS_REQUIRED: false
      PROPERTY_NAME: requestHealth
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth
      TYPE_NAME: RequestHealth
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: requestHealth entry
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items
        TYPE_NAME: RequestHealthEntry
        description: |
          This is a list of outcomes for a specific region, availability zone and
          instance type.  These are calls to the EC2 runInstances method, which
          is how we request instances.  If a call to this method is successful,
          then we expect to get an instance to match
        properties:
          MemberNames:
            az: az
            configuration_issue: configuration_issue
            failed: failed
            instanceType: instanceType
            insufficient_capacity: insufficient_capacity
            limit_exceeded: limit_exceeded
            region: region
            successful: successful
            throttled_calls: throttled_calls
          Properties:
            az:
              IS_REQUIRED: false
              PROPERTY_NAME: az
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items/properties/az
              TYPE_NAME: Az
              type: string
            configuration_issue:
              IS_REQUIRED: false
              PROPERTY_NAME: configuration_issue
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items/properties/configuration_issue
              TYPE_NAME: Configuration_issue
              description: The number of calls failed due to a misconfiguration of
                the worker type.  Due to the large number of error codes the EC2 API
                might return, this is a best effort categorization.  It covers codes
                which are like "Invalid%" using SQL pattern mattching on the codes
                from https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html
                It is not categorized by which field was invalid in this response
              type: integer
            failed:
              IS_REQUIRED: false
              PROPERTY_NAME: failed
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items/properties/failed
              TYPE_NAME: Failed
              description: The total number of calls which failed, inrespective of
                why
              type: integer
            instanceType:
              IS_REQUIRED: false
              PROPERTY_NAME: instanceType
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items/properties/instanceType
              TYPE_NAME: InstanceType
              type: string
            insufficient_capacity:
              IS_REQUIRED: false
              PROPERTY_NAME: insufficient_capacity
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items/properties/insufficient_capacity
              TYPE_NAME: Insufficient_capacity
              description: |
                Number of runInstances calls which have failed because there aren't
                enough hosts for the resources to be allocated.
              type: integer
            limit_exceeded:
              IS_REQUIRED: false
              PROPERTY_NAME: limit_exceeded
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items/properties/limit_exceeded
              TYPE_NAME: Limit_exceeded
              description: |
                The number of calls which failed due to a limit being exceeded.
                Due to the large number of error codes the EC2 API might return,
                this is a best effort categorization.  It covers codes which are
                like "%LimitExceeded" using SQL pattern mattching, but not
                RequestLimitExceeded on the codes from
                https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html
                It is not categorized by which limit was exceeded in this response
              type: integer
            region:
              IS_REQUIRED: false
              PROPERTY_NAME: region
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items/properties/region
              TYPE_NAME: Region
              type: string
            successful:
              IS_REQUIRED: false
              PROPERTY_NAME: successful
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items/properties/successful
              TYPE_NAME: Successful
              description: |
                The number of instances which have been requested successfully
              type: integer
            throttled_calls:
              IS_REQUIRED: false
              PROPERTY_NAME: throttled_calls
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items/properties/throttled_calls
              TYPE_NAME: Throttled_calls
              description: |
                Number of calls which have been throttled in this region.  These
                are errors with the code RequestLimitExceeded.
              type: integer
          SortedPropertyNames:
          - az
          - configuration_issue
          - failed
          - instanceType
          - insufficient_capacity
          - limit_exceeded
          - region
          - successful
          - throttled_calls
          SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/requestHealth/items/properties
        type: object
      type: array
    running:
      IS_REQUIRED: false
      PROPERTY_NAME: running
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/running
      TYPE_NAME: Running
      description: |
        An overview of currently running instances
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: running entry
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/running/items
        TYPE_NAME: RunningEntry
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            az: az
            instanceType: instanceType
            region: region
            running: running
          Properties:
            az:
              IS_REQUIRED: false
              PROPERTY_NAME: az
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/running/items/properties/az
              TYPE_NAME: Az
              type: string
            instanceType:
              IS_REQUIRED: false
              PROPERTY_NAME: instanceType
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/running/items/properties/instanceType
              TYPE_NAME: InstanceType
              type: string
            region:
              IS_REQUIRED: false
              PROPERTY_NAME: region
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/running/items/properties/region
              TYPE_NAME: Region
              type: string
            running:
              IS_REQUIRED: false
              PROPERTY_NAME: running
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/running/items/properties/running
              TYPE_NAME: Running
              description: |
                The number of currently running instances in this configuration
              type: integer
          SortedPropertyNames:
          - az
          - instanceType
          - region
          - running
          SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/running/items/properties
        type: object
      type: array
    terminationHealth:
      IS_REQUIRED: false
      PROPERTY_NAME: terminationHealth
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth
      TYPE_NAME: TerminationHealth
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: terminationHealth entry
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items
        TYPE_NAME: TerminationHealthEntry
        description: |
          This is a list of summaries of instances which have terminated
        properties:
          MemberNames:
            az: az
            clean_shutdown: clean_shutdown
            instanceType: instanceType
            insufficient_capacity: insufficient_capacity
            missing_ami: missing_ami
            no_code: no_code
            region: region
            spot_kill: spot_kill
            startup_failed: startup_failed
            unknown_code: unknown_code
            volume_limit_exceeded: volume_limit_exceeded
          Properties:
            az:
              IS_REQUIRED: false
              PROPERTY_NAME: az
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/az
              TYPE_NAME: Az
              type: string
            clean_shutdown:
              IS_REQUIRED: false
              PROPERTY_NAME: clean_shutdown
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/clean_shutdown
              TYPE_NAME: Clean_shutdown
              description: |
                A count of the instances which were shutdown cleanty.  For the
                purposes of this API, a clean shutdown is one which was initiated
                by us.  This includes API shutdowns or workers ending themselves.
                It does not mean the actual workload ran successfully, rather that
                we chose to terminate it
              type: integer
            instanceType:
              IS_REQUIRED: false
              PROPERTY_NAME: instanceType
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/instanceType
              TYPE_NAME: InstanceType
              type: string
            insufficient_capacity:
              IS_REQUIRED: false
              PROPERTY_NAME: insufficient_capacity
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/insufficient_capacity
              TYPE_NAME: Insufficient_capacity
              description: |
                The number of instances which were terminated due to a lack of
                capacity.  More than likely, this will always be zero because the
                new spot service is now synchronous, so runInstances calls should
                fail
              type: integer
            missing_ami:
              IS_REQUIRED: false
              PROPERTY_NAME: missing_ami
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/missing_ami
              TYPE_NAME: Missing_ami
              description: |
                The number of instances which were terminated due to not being able
                to find the AMI
              type: integer
            no_code:
              IS_REQUIRED: false
              PROPERTY_NAME: no_code
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/no_code
              TYPE_NAME: No_code
              description: |
                The number of terminations which we cannot find a code.  This means
                we cannot determine whether this should be classified as a good or
                bad outcome.  The specific reason is that the code which polls for
                termination reason was not able to run before the EC2 API dropped
                the instance from its database
              type: integer
            region:
              IS_REQUIRED: false
              PROPERTY_NAME: region
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/region
              TYPE_NAME: Region
              type: string
            spot_kill:
              IS_REQUIRED: false
              PROPERTY_NAME: spot_kill
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/spot_kill
              TYPE_NAME: Spot_kill
              description: |
                The number of instances which were killed by the spot service
              type: integer
            startup_failed:
              IS_REQUIRED: false
              PROPERTY_NAME: startup_failed
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/startup_failed
              TYPE_NAME: Startup_failed
              description: |
                The number of instances which failed to start, either because of an
                error on our side or on the EC2 side
              type: integer
            unknown_code:
              IS_REQUIRED: false
              PROPERTY_NAME: unknown_code
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/unknown_code
              TYPE_NAME: Unknown_code
              description: |
                The number of terminations which have a code which this code does
                not recognize
              type: integer
            volume_limit_exceeded:
              IS_REQUIRED: false
              PROPERTY_NAME: volume_limit_exceeded
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties/volume_limit_exceeded
              TYPE_NAME: Volume_limit_exceeded
              description: |
                The number of instances which were terminated due to exceeding the
                limit for number of ebs volumes
              type: integer
          SortedPropertyNames:
          - az
          - clean_shutdown
          - instanceType
          - insufficient_capacity
          - missing_ami
          - no_code
          - region
          - spot_kill
          - startup_failed
          - unknown_code
          - volume_limit_exceeded
          SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties/terminationHealth/items/properties
        type: object
      type: array
  SortedPropertyNames:
  - requestHealth
  - running
  - terminationHealth
  SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/health.json#/properties
title: Health of the EC2 account
type: object


http://schemas.taskcluster.net/ec2-manager/v1/list-worker-types.json#
=====================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/list-worker-types.json#
TYPE_NAME: String[]
description: |
  A list of names of worker types
id: http://schemas.taskcluster.net/ec2-manager/v1/list-worker-types.json#
items:
  IS_REQUIRED: false
  PROPERTY_NAME: ' entry'
  SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/list-worker-types.json#/items
  TYPE_NAME: Entry
  type: string
  uniqueItems: true
title: List of worker types
type: array


http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#
==================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#
TYPE_NAME: Entry3[]
description: |
  A list of prices for EC2
id: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#
items:
  IS_REQUIRED: false
  PROPERTY_NAME: ' entry'
  SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items
  TYPE_NAME: Entry3
  additionalProperties:
    Boolean: false
    Properties: null
  properties:
    MemberNames:
      key: key
      restriction: restriction
    Properties:
      key:
        IS_REQUIRED: false
        PROPERTY_NAME: key
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/key
        TYPE_NAME: Key
        enum:
        - instanceType
        - region
        - price
        - minPrice
        - maxPrice
        - zone
        - type
        type: string
      restriction:
        IS_REQUIRED: false
        PROPERTY_NAME: restriction
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction
        TYPE_NAME: Restriction
        oneOf:
          Items:
          - IS_REQUIRED: false
            PROPERTY_NAME: ""
            SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[0]
            TYPE_NAME: int
            type: number
          - IS_REQUIRED: false
            PROPERTY_NAME: ""
            SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[1]
            TYPE_NAME: String
            type: string
          - IS_REQUIRED: false
            PROPERTY_NAME: ""
            SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[2]
            TYPE_NAME: String[]
            items:
              IS_REQUIRED: false
              PROPERTY_NAME: ' entry'
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[2]/items
              TYPE_NAME: Entry2
              type: string
            type: array
          SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf
    SortedPropertyNames:
    - key
    - restriction
    SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties
  type: object
title: List of restrictions for prices
type: array


http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[0]
========================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[0]
TYPE_NAME: int
type: number


http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[1]
========================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[1]
TYPE_NAME: String
type: string


http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[2]
========================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[2]
TYPE_NAME: String[]
items:
  IS_REQUIRED: false
  PROPERTY_NAME: ' entry'
  SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices-request.json#/items/properties/restriction/oneOf[2]/items
  TYPE_NAME: Entry2
  type: string
type: array


http://schemas.taskcluster.net/ec2-manager/v1/prices.json#
==========================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices.json#
TYPE_NAME: Entry1[]
description: |
  A list of prices for EC2
id: http://schemas.taskcluster.net/ec2-manager/v1/prices.json#
items:
  IS_REQUIRED: false
  PROPERTY_NAME: ' entry'
  SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices.json#/items
  TYPE_NAME: Entry1
  additionalProperties:
    Boolean: false
    Properties: null
  properties:
    MemberNames:
      instanceType: instanceType
      price: price
      region: region
      type: type
      zone: zone
    Properties:
      instanceType:
        IS_REQUIRED: false
        PROPERTY_NAME: instanceType
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices.json#/items/properties/instanceType
        TYPE_NAME: InstanceType
        description: EC2 instance type
        type: string
      price:
        IS_REQUIRED: false
        PROPERTY_NAME: price
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices.json#/items/properties/price
        TYPE_NAME: Price
        description: Amount of dollars for an hour of usage for this configuration
        type: number
      region:
        IS_REQUIRED: false
        PROPERTY_NAME: region
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices.json#/items/properties/region
        TYPE_NAME: Region
        description: EC2 region
        type: string
      type:
        IS_REQUIRED: false
        PROPERTY_NAME: type
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices.json#/items/properties/type
        TYPE_NAME: Type
        enum:
        - spot
        - ondemand
        type: string
      zone:
        IS_REQUIRED: false
        PROPERTY_NAME: zone
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/prices.json#/items/properties/zone
        TYPE_NAME: Zone
        description: EC2 availability zone identifier
        type: string
    SortedPropertyNames:
    - instanceType
    - price
    - region
    - type
    - zone
    SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/prices.json#/items/properties
  type: object
title: List of prices
type: array


http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#
========================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#
TYPE_NAME: MakeASpotRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Presented here are the fields that are absolutely 100% required to make a
  spot request.  The `LaunchSpecification` property is an opaque datastructure
  from EC2, however the fields which we know are absolutely required are
  described
id: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#
properties:
  MemberNames:
    ClientToken: ClientToken
    LaunchInfo: LaunchInfo
    Region: Region
    RequestType: RequestType
    SpotPrice: SpotPrice
  Properties:
    ClientToken:
      IS_REQUIRED: false
      PROPERTY_NAME: ClientToken
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/ClientToken
      TYPE_NAME: ClientToken
      description: |
        A ClientToken string per the implementation requirements of the EC2 api.
        This string must be no more than 64 characters of ASCII.  We restrict the
        client tokens further to alphanumeric ASCII with the addition of the `-`
        and `_` characters
      maxLength: 64
      minLength: 1
      pattern: ^[a-zA-Z0-0_-]{1,64}
      type: string
    LaunchInfo:
      IS_REQUIRED: false
      PROPERTY_NAME: LaunchInfo
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/LaunchInfo
      TYPE_NAME: LaunchInfo
      description: |
        This is an EC2-Manager specific wrapping of the request body for the
        upstream EC2 API.  Values from this are passed through verbatim.  A small
        number of checks are done on the data before making the call, as well as
        having some schema keys set to ensure certain values are either present
        or absent
      properties:
        MemberNames:
          ImageId: ImageId
          InstanceType: InstanceType
          KeyName: KeyName
          SecurityGroups: SecurityGroups
        Properties:
          ImageId:
            IS_REQUIRED: false
            PROPERTY_NAME: ImageId
            SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/LaunchInfo/properties/ImageId
            TYPE_NAME: ImageId
            description: |
              This is the AMI Identifier for this spot request.  This image must
              already exist and must be in the region of the request.  Note that
              AMI images are per-region, so you must copy or regenerate the image
              for each region.
            type: string
          InstanceType:
            IS_REQUIRED: false
            PROPERTY_NAME: InstanceType
            SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/LaunchInfo/properties/InstanceType
            TYPE_NAME: InstanceType
            description: |
              The instance type to use for this spot request
            type: string
          KeyName:
            IS_REQUIRED: false
            PROPERTY_NAME: KeyName
            SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/LaunchInfo/properties/KeyName
            TYPE_NAME: KeyName
            description: |
              A valid EC2 KeyPair name.  The KeyPair must already exist
            type: string
          SecurityGroups:
            IS_REQUIRED: false
            PROPERTY_NAME: SecurityGroups
            SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/LaunchInfo/properties/SecurityGroups
            TYPE_NAME: SecurityGroups
            description: |
              This is a list of the security groups this image will use.  These
              groups must already exist in the region.
            items:
              IS_REQUIRED: false
              PROPERTY_NAME: SecurityGroups entry
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/LaunchInfo/properties/SecurityGroups/items
              TYPE_NAME: SecurityGroupsEntry
              type: string
            type: array
        SortedPropertyNames:
        - ImageId
        - InstanceType
        - KeyName
        - SecurityGroups
        SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/LaunchInfo/properties
      type: object
    Region:
      IS_REQUIRED: false
      PROPERTY_NAME: Region
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/Region
      TYPE_NAME: Region
      description: |
        The EC2 region in which this spot request is to be made.  This should be
        the lower case api-identifier.  For example `us-east-1`
      type: string
    RequestType:
      IS_REQUIRED: false
      PROPERTY_NAME: RequestType
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/RequestType
      TYPE_NAME: RequestType
      description: |
        Specify whether to use a spot request or an on-demand instance.  This is
        not inferred from the SpotPrice being set or not because we want to allow
        for the default behaviour for spot prices, which is to use the spot
        market with a default price of the on-demand price
      enum:
      - spot
      - on-demand
      type: string
    SpotPrice:
      IS_REQUIRED: false
      PROPERTY_NAME: SpotPrice
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties/SpotPrice
      TYPE_NAME: SpotPrice
      description: |
        The actual price of the bid.  This is passed directly to the EC2 api and
        so should not have any internal multipliers (e.g. capacity or utility)
        applied
      type: number
  SortedPropertyNames:
  - ClientToken
  - LaunchInfo
  - Region
  - RequestType
  - SpotPrice
  SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/run-instance-request.json#/properties
title: Make a spot request
type: object


http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#
=========================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#
TYPE_NAME: OverviewOfComputationalResources
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Overview of computational resources for a given worker type
id: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#
properties:
  MemberNames:
    pending: pending
    running: running
  Properties:
    pending:
      IS_REQUIRED: false
      PROPERTY_NAME: pending
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#/properties/pending
      TYPE_NAME: Pending
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: pending entry
        SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#/properties/pending/items
        TYPE_NAME: PendingEntry
        properties:
          MemberNames:
            count: count
            instanceType: instanceType
            type: type
          Properties:
            count:
              IS_REQUIRED: false
              PROPERTY_NAME: count
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#/properties/pending/items/properties/count
              TYPE_NAME: Count
              type: number
            instanceType:
              IS_REQUIRED: false
              PROPERTY_NAME: instanceType
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#/properties/pending/items/properties/instanceType
              TYPE_NAME: InstanceType
              type: string
            type:
              IS_REQUIRED: false
              PROPERTY_NAME: type
              SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#/properties/pending/items/properties/type
              TYPE_NAME: Type
              enum:
              - instance
              type: string
          SortedPropertyNames:
          - count
          - instanceType
          - type
          SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#/properties/pending/items/properties
        type: object
      type: array
    running:
      IS_REQUIRED: false
      PROPERTY_NAME: running
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#/properties/running
      TYPE_NAME: Running
      type: array
  SortedPropertyNames:
  - pending
  - running
  SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-resources.json#/properties
title: Overview of computational resources
type: object


http://schemas.taskcluster.net/ec2-manager/v1/worker-type-state.json#
=====================================================================
$schema: http://json-schema.org/draft-04/schema#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-state.json#
TYPE_NAME: OverviewOfComputationalResources1
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Overview of computational resources for a given worker type
id: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-state.json#
properties:
  MemberNames:
    instances: instances
  Properties:
    instances:
      IS_REQUIRED: false
      PROPERTY_NAME: instances
      SOURCE_URL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-state.json#/properties/instances
      TYPE_NAME: Instances
      type: array
  SortedPropertyNames:
  - instances
  SourceURL: http://schemas.taskcluster.net/ec2-manager/v1/worker-type-state.json#/properties
title: Overview of computational resources
type: object


